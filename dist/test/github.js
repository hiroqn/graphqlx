/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading wasm modules
/******/ 	var installedWasmModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// object with all compiled WebAssembly.Modules
/******/ 	__webpack_require__.w = {};
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./test/github.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./lib/js/ArgumentUniqueness.js":
/*!**************************************!*\
  !*** ./lib/js/ArgumentUniqueness.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE\n\n\nvar List = __webpack_require__(/*! bs-platform/lib/js/list.js */ \"./node_modules/bs-platform/lib/js/list.js\");\nvar Block = __webpack_require__(/*! bs-platform/lib/js/block.js */ \"./node_modules/bs-platform/lib/js/block.js\");\nvar Printf = __webpack_require__(/*! bs-platform/lib/js/printf.js */ \"./node_modules/bs-platform/lib/js/printf.js\");\nvar Pervasives = __webpack_require__(/*! bs-platform/lib/js/pervasives.js */ \"./node_modules/bs-platform/lib/js/pervasives.js\");\nvar Caml_primitive = __webpack_require__(/*! bs-platform/lib/js/caml_primitive.js */ \"./node_modules/bs-platform/lib/js/caml_primitive.js\");\n\nvar error = [/* false */0];\n\nvar listOfArgs = [/* [] */0];\n\nfunction read_doc(_definitions) {\n  while(true) {\n    var definitions = _definitions;\n    if (definitions) {\n      read_definition(definitions[0]);\n      _definitions = definitions[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_definition(def) {\n  if (def.tag) {\n    return read_fragment(def[0]);\n  } else {\n    return read_operation(def[0]);\n  }\n}\n\nfunction read_fragment(fr) {\n  read_directives(fr[/* directives */2]);\n  return read_selection_set(fr[/* selection_set */3]);\n}\n\nfunction read_operation(op) {\n  read_var_defs(op[/* variable_definitions */2]);\n  read_directives(op[/* directives */3]);\n  return read_selection_set(op[/* selection_set */4]);\n}\n\nfunction read_selection_set(_selection_set) {\n  while(true) {\n    var selection_set = _selection_set;\n    if (selection_set) {\n      var selection = selection_set[0];\n      switch (selection.tag | 0) {\n        case 0 : \n            read_field(selection[0]);\n            break;\n        case 1 : \n            read_frag_spread(selection[0]);\n            break;\n        case 2 : \n            read_inline_frag(selection[0]);\n            break;\n        \n      }\n      _selection_set = selection_set[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_frag_spread(spread) {\n  return read_directives(spread[/* directives */1]);\n}\n\nfunction read_inline_frag(frag) {\n  read_directives(frag[/* directives */1]);\n  return read_selection_set(frag[/* selection_set */2]);\n}\n\nfunction read_field(field) {\n  read_arguments(field[/* arguments */2], 0);\n  return read_selection_set(field[/* selection_set */4]);\n}\n\nfunction read_directives(_directives) {\n  while(true) {\n    var directives = _directives;\n    if (directives) {\n      read_arguments(directives[0][/* arguments */1], 0);\n      _directives = directives[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_arguments(_arguments, _i) {\n  while(true) {\n    var i = _i;\n    var $$arguments = _arguments;\n    List.length($$arguments);\n    if ($$arguments) {\n      var arg = $$arguments[0];\n      var key = arg[0];\n      var exists = List.exists((function(key){\n          return function (x) {\n            return +(Caml_primitive.caml_string_compare(x, key) === 0);\n          }\n          }(key)), listOfArgs[0]);\n      if (exists) {\n        error[0] = /* true */1;\n        Printf.printf(/* Format */[\n              /* String_literal */Block.__(11, [\n                  \"\\nvalidation error: arguments cannot have duplicate names\\n\",\n                  /* End_of_format */0\n                ]),\n              \"\\nvalidation error: arguments cannot have duplicate names\\n\"\n            ]);\n      }\n      listOfArgs[0] = Pervasives.$at(listOfArgs[0], /* :: */[\n            key,\n            /* [] */0\n          ]);\n      read_value(arg[1]);\n      _i = i + 1 | 0;\n      _arguments = $$arguments[1];\n      continue ;\n      \n    } else {\n      listOfArgs[0] = /* [] */0;\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_value(value) {\n  if (typeof value === \"number\") {\n    return /* () */0;\n  } else {\n    var variant = value[0];\n    if (variant !== 848054398) {\n      if (variant >= 963043957) {\n        return read_assoc(value[1], 0);\n      } else {\n        return /* () */0;\n      }\n    } else {\n      return read_list(value[1], 0);\n    }\n  }\n}\n\nfunction read_list(_ls, _i) {\n  while(true) {\n    var i = _i;\n    var ls = _ls;\n    List.length(ls);\n    if (ls) {\n      read_value(ls[0]);\n      _i = i + 1 | 0;\n      _ls = ls[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_assoc(_ls, _i) {\n  while(true) {\n    var i = _i;\n    var ls = _ls;\n    List.length(ls);\n    if (ls) {\n      read_value(ls[0][1]);\n      _i = i + 1 | 0;\n      _ls = ls[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_var_defs(_defs) {\n  while(true) {\n    var defs = _defs;\n    List.length(defs);\n    if (defs) {\n      read_type(defs[0][/* typ */1]);\n      _defs = defs[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_type(_typ) {\n  while(true) {\n    var typ = _typ;\n    switch (typ.tag | 0) {\n      case 0 : \n          return /* () */0;\n      case 1 : \n      case 2 : \n          _typ = typ[0];\n          continue ;\n          \n    }\n  };\n}\n\nfunction validate(definitions) {\n  error[0] = /* false */0;\n  read_doc(definitions);\n  return error[0];\n}\n\nexports.error = error;\nexports.listOfArgs = listOfArgs;\nexports.read_doc = read_doc;\nexports.read_definition = read_definition;\nexports.read_fragment = read_fragment;\nexports.read_operation = read_operation;\nexports.read_selection_set = read_selection_set;\nexports.read_frag_spread = read_frag_spread;\nexports.read_inline_frag = read_inline_frag;\nexports.read_field = read_field;\nexports.read_directives = read_directives;\nexports.read_arguments = read_arguments;\nexports.read_value = read_value;\nexports.read_list = read_list;\nexports.read_assoc = read_assoc;\nexports.read_var_defs = read_var_defs;\nexports.read_type = read_type;\nexports.validate = validate;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./lib/js/ArgumentUniqueness.js?");

/***/ }),

/***/ "./lib/js/FieldSelectionMerging.js":
/*!*****************************************!*\
  !*** ./lib/js/FieldSelectionMerging.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE\n\n\nvar List = __webpack_require__(/*! bs-platform/lib/js/list.js */ \"./node_modules/bs-platform/lib/js/list.js\");\nvar Block = __webpack_require__(/*! bs-platform/lib/js/block.js */ \"./node_modules/bs-platform/lib/js/block.js\");\nvar Printf = __webpack_require__(/*! bs-platform/lib/js/printf.js */ \"./node_modules/bs-platform/lib/js/printf.js\");\nvar Pervasives = __webpack_require__(/*! bs-platform/lib/js/pervasives.js */ \"./node_modules/bs-platform/lib/js/pervasives.js\");\nvar Caml_primitive = __webpack_require__(/*! bs-platform/lib/js/caml_primitive.js */ \"./node_modules/bs-platform/lib/js/caml_primitive.js\");\n\nvar error = [/* false */0];\n\nvar listOfNames = [/* [] */0];\n\nfunction read_doc(_definitions) {\n  while(true) {\n    var definitions = _definitions;\n    if (definitions) {\n      read_definition(definitions[0]);\n      _definitions = definitions[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_definition(def) {\n  if (def.tag) {\n    return read_fragment(def[0]);\n  } else {\n    return read_operation(def[0]);\n  }\n}\n\nfunction read_fragment(fr) {\n  return read_selection_set(fr[/* selection_set */3]);\n}\n\nfunction read_operation(op) {\n  return read_selection_set(op[/* selection_set */4]);\n}\n\nfunction read_selection_set(_selection_set) {\n  while(true) {\n    var selection_set = _selection_set;\n    if (selection_set) {\n      var selection = selection_set[0];\n      switch (selection.tag | 0) {\n        case 0 : \n            read_field(selection[0]);\n            break;\n        case 1 : \n            break;\n        case 2 : \n            read_inline_frag(selection[0]);\n            break;\n        \n      }\n      _selection_set = selection_set[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_inline_frag(frag) {\n  return read_selection_set(frag[/* selection_set */2]);\n}\n\nfunction read_field(field) {\n  var name = field[/* name */1];\n  var alias = field[/* alias */0];\n  var exists = List.exists((function (x) {\n          return +(Caml_primitive.caml_string_compare(x, name) === 0);\n        }), listOfNames[0]);\n  if (exists === /* false */0) {\n    listOfNames[0] = Pervasives.$at(listOfNames[0], /* :: */[\n          name,\n          /* [] */0\n        ]);\n  }\n  if (alias) {\n    var alias$1 = alias[0];\n    var alexists = List.exists((function (x) {\n            return +(Caml_primitive.caml_string_compare(x, alias$1) === 0);\n          }), listOfNames[0]);\n    if (alexists) {\n      error[0] = /* true */1;\n      Printf.printf(/* Format */[\n            /* String_literal */Block.__(11, [\n                \"\\nvalidation error: cannot apply different data on same field name\\n\",\n                /* End_of_format */0\n              ]),\n            \"\\nvalidation error: cannot apply different data on same field name\\n\"\n          ]);\n    }\n    \n  }\n  return read_selection_set(field[/* selection_set */4]);\n}\n\nfunction validate(definitions) {\n  error[0] = /* false */0;\n  read_doc(definitions);\n  return error[0];\n}\n\nexports.error = error;\nexports.listOfNames = listOfNames;\nexports.read_doc = read_doc;\nexports.read_definition = read_definition;\nexports.read_fragment = read_fragment;\nexports.read_operation = read_operation;\nexports.read_selection_set = read_selection_set;\nexports.read_inline_frag = read_inline_frag;\nexports.read_field = read_field;\nexports.validate = validate;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./lib/js/FieldSelectionMerging.js?");

/***/ }),

/***/ "./lib/js/FragmentNameUniqueness.js":
/*!******************************************!*\
  !*** ./lib/js/FragmentNameUniqueness.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE\n\n\nvar List = __webpack_require__(/*! bs-platform/lib/js/list.js */ \"./node_modules/bs-platform/lib/js/list.js\");\nvar Block = __webpack_require__(/*! bs-platform/lib/js/block.js */ \"./node_modules/bs-platform/lib/js/block.js\");\nvar Printf = __webpack_require__(/*! bs-platform/lib/js/printf.js */ \"./node_modules/bs-platform/lib/js/printf.js\");\nvar Pervasives = __webpack_require__(/*! bs-platform/lib/js/pervasives.js */ \"./node_modules/bs-platform/lib/js/pervasives.js\");\nvar Caml_primitive = __webpack_require__(/*! bs-platform/lib/js/caml_primitive.js */ \"./node_modules/bs-platform/lib/js/caml_primitive.js\");\n\nvar error = [/* false */0];\n\nvar listOfFrags = [/* [] */0];\n\nfunction read_doc(_definitions) {\n  while(true) {\n    var definitions = _definitions;\n    if (definitions) {\n      read_definition(definitions[0]);\n      _definitions = definitions[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_definition(def) {\n  if (def.tag) {\n    return read_fragment(def[0]);\n  } else {\n    return read_operation(def[0]);\n  }\n}\n\nfunction read_fragment(fr) {\n  var name = fr[/* name */0];\n  var exists = List.exists((function (x) {\n          return +(Caml_primitive.caml_string_compare(x, name) === 0);\n        }), listOfFrags[0]);\n  if (exists) {\n    error[0] = /* true */1;\n    Printf.printf(/* Format */[\n          /* String_literal */Block.__(11, [\n              \"\\nvalidation error: cannot have duplicate Fragment Names\\n\",\n              /* End_of_format */0\n            ]),\n          \"\\nvalidation error: cannot have duplicate Fragment Names\\n\"\n        ]);\n  }\n  listOfFrags[0] = Pervasives.$at(listOfFrags[0], /* :: */[\n        name,\n        /* [] */0\n      ]);\n  read_directives(fr[/* directives */2]);\n  return read_selection_set(fr[/* selection_set */3]);\n}\n\nfunction read_operation(op) {\n  read_var_defs(op[/* variable_definitions */2]);\n  read_directives(op[/* directives */3]);\n  return read_selection_set(op[/* selection_set */4]);\n}\n\nfunction read_selection_set(_selection_set) {\n  while(true) {\n    var selection_set = _selection_set;\n    if (selection_set) {\n      var selection = selection_set[0];\n      switch (selection.tag | 0) {\n        case 0 : \n            read_field(selection[0]);\n            break;\n        case 1 : \n            read_frag_spread(selection[0]);\n            break;\n        case 2 : \n            read_inline_frag(selection[0]);\n            break;\n        \n      }\n      _selection_set = selection_set[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_frag_spread(spread) {\n  return read_directives(spread[/* directives */1]);\n}\n\nfunction read_inline_frag(frag) {\n  read_directives(frag[/* directives */1]);\n  return read_selection_set(frag[/* selection_set */2]);\n}\n\nfunction read_field(field) {\n  read_arguments(field[/* arguments */2], 0);\n  return read_selection_set(field[/* selection_set */4]);\n}\n\nfunction read_directives(_directives) {\n  while(true) {\n    var directives = _directives;\n    if (directives) {\n      read_arguments(directives[0][/* arguments */1], 0);\n      _directives = directives[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_arguments(_arguments, _i) {\n  while(true) {\n    var i = _i;\n    var $$arguments = _arguments;\n    List.length($$arguments);\n    if ($$arguments) {\n      read_value($$arguments[0][1]);\n      _i = i + 1 | 0;\n      _arguments = $$arguments[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_value(value) {\n  if (typeof value === \"number\") {\n    return /* () */0;\n  } else {\n    var variant = value[0];\n    if (variant !== 848054398) {\n      if (variant >= 963043957) {\n        return read_assoc(value[1], 0);\n      } else {\n        return /* () */0;\n      }\n    } else {\n      return read_list(value[1], 0);\n    }\n  }\n}\n\nfunction read_list(_ls, _i) {\n  while(true) {\n    var i = _i;\n    var ls = _ls;\n    List.length(ls);\n    if (ls) {\n      read_value(ls[0]);\n      _i = i + 1 | 0;\n      _ls = ls[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_assoc(_ls, _i) {\n  while(true) {\n    var i = _i;\n    var ls = _ls;\n    List.length(ls);\n    if (ls) {\n      read_value(ls[0][1]);\n      _i = i + 1 | 0;\n      _ls = ls[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_var_defs(_defs) {\n  while(true) {\n    var defs = _defs;\n    List.length(defs);\n    if (defs) {\n      read_type(defs[0][/* typ */1]);\n      _defs = defs[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_type(_typ) {\n  while(true) {\n    var typ = _typ;\n    switch (typ.tag | 0) {\n      case 0 : \n          return /* () */0;\n      case 1 : \n      case 2 : \n          _typ = typ[0];\n          continue ;\n          \n    }\n  };\n}\n\nfunction validate(definitions) {\n  error[0] = /* false */0;\n  read_doc(definitions);\n  return error[0];\n}\n\nexports.error = error;\nexports.listOfFrags = listOfFrags;\nexports.read_doc = read_doc;\nexports.read_definition = read_definition;\nexports.read_fragment = read_fragment;\nexports.read_operation = read_operation;\nexports.read_selection_set = read_selection_set;\nexports.read_frag_spread = read_frag_spread;\nexports.read_inline_frag = read_inline_frag;\nexports.read_field = read_field;\nexports.read_directives = read_directives;\nexports.read_arguments = read_arguments;\nexports.read_value = read_value;\nexports.read_list = read_list;\nexports.read_assoc = read_assoc;\nexports.read_var_defs = read_var_defs;\nexports.read_type = read_type;\nexports.validate = validate;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./lib/js/FragmentNameUniqueness.js?");

/***/ }),

/***/ "./lib/js/LoneAnonymousOperation.js":
/*!******************************************!*\
  !*** ./lib/js/LoneAnonymousOperation.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE\n\n\nvar Block = __webpack_require__(/*! bs-platform/lib/js/block.js */ \"./node_modules/bs-platform/lib/js/block.js\");\nvar Printf = __webpack_require__(/*! bs-platform/lib/js/printf.js */ \"./node_modules/bs-platform/lib/js/printf.js\");\n\nvar numberOfShorthands = [0];\n\nvar error = [/* false */0];\n\nfunction read_doc(_definitions) {\n  while(true) {\n    var definitions = _definitions;\n    if (definitions) {\n      read_definition(definitions[0]);\n      _definitions = definitions[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_definition(def) {\n  if (def.tag) {\n    return /* () */0;\n  } else {\n    if (numberOfShorthands[0] > 0) {\n      error[0] = /* true */1;\n    }\n    if (numberOfShorthands[0] > 0) {\n      Printf.printf(/* Format */[\n            /* String_literal */Block.__(11, [\n                \"\\nvalidation error: shorthand query cannot co-exist with other queries\\n\",\n                /* End_of_format */0\n              ]),\n            \"\\nvalidation error: shorthand query cannot co-exist with other queries\\n\"\n          ]);\n    }\n    return read_operation(def[0]);\n  }\n}\n\nfunction read_operation(op) {\n  if (op[/* name */1]) {\n    return /* () */0;\n  } else {\n    numberOfShorthands[0] = numberOfShorthands[0] + 1 | 0;\n    return /* () */0;\n  }\n}\n\nfunction validate(definitions) {\n  error[0] = /* false */0;\n  numberOfShorthands[0] = 0;\n  read_doc(definitions);\n  return error[0];\n}\n\nexports.numberOfShorthands = numberOfShorthands;\nexports.error = error;\nexports.read_doc = read_doc;\nexports.read_definition = read_definition;\nexports.read_operation = read_operation;\nexports.validate = validate;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./lib/js/LoneAnonymousOperation.js?");

/***/ }),

/***/ "./lib/js/NonNullArguments.js":
/*!************************************!*\
  !*** ./lib/js/NonNullArguments.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE\n\n\nvar List = __webpack_require__(/*! bs-platform/lib/js/list.js */ \"./node_modules/bs-platform/lib/js/list.js\");\nvar Block = __webpack_require__(/*! bs-platform/lib/js/block.js */ \"./node_modules/bs-platform/lib/js/block.js\");\nvar Printf = __webpack_require__(/*! bs-platform/lib/js/printf.js */ \"./node_modules/bs-platform/lib/js/printf.js\");\n\nvar error = [/* false */0];\n\nfunction read_doc(_definitions) {\n  while(true) {\n    var definitions = _definitions;\n    if (definitions) {\n      read_definition(definitions[0]);\n      _definitions = definitions[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_definition(def) {\n  if (def.tag) {\n    return read_fragment(def[0]);\n  } else {\n    return read_operation(def[0]);\n  }\n}\n\nfunction read_fragment(fr) {\n  read_directives(fr[/* directives */2]);\n  return read_selection_set(fr[/* selection_set */3]);\n}\n\nfunction read_operation(op) {\n  read_directives(op[/* directives */3]);\n  return read_selection_set(op[/* selection_set */4]);\n}\n\nfunction read_selection_set(_selection_set) {\n  while(true) {\n    var selection_set = _selection_set;\n    if (selection_set) {\n      var selection = selection_set[0];\n      switch (selection.tag | 0) {\n        case 0 : \n            read_field(selection[0]);\n            break;\n        case 1 : \n            read_frag_spread(selection[0]);\n            break;\n        case 2 : \n            read_inline_frag(selection[0]);\n            break;\n        \n      }\n      _selection_set = selection_set[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_frag_spread(spread) {\n  return read_directives(spread[/* directives */1]);\n}\n\nfunction read_inline_frag(frag) {\n  read_directives(frag[/* directives */1]);\n  return read_selection_set(frag[/* selection_set */2]);\n}\n\nfunction read_field(field) {\n  read_arguments(field[/* arguments */2], 0);\n  return read_selection_set(field[/* selection_set */4]);\n}\n\nfunction read_directives(_directives) {\n  while(true) {\n    var directives = _directives;\n    if (directives) {\n      read_arguments(directives[0][/* arguments */1], 0);\n      _directives = directives[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_arguments(_arguments, _i) {\n  while(true) {\n    var i = _i;\n    var $$arguments = _arguments;\n    List.length($$arguments);\n    if ($$arguments) {\n      if ($$arguments[0][1] === 870828711) {\n        error[0] = /* true */1;\n        Printf.printf(/* Format */[\n              /* String_literal */Block.__(11, [\n                  \"\\nvalidation error: argument value cannot be null\\n\",\n                  /* End_of_format */0\n                ]),\n              \"\\nvalidation error: argument value cannot be null\\n\"\n            ]);\n      }\n      _i = i + 1 | 0;\n      _arguments = $$arguments[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction validate(definitions) {\n  error[0] = /* false */0;\n  read_doc(definitions);\n  return error[0];\n}\n\nexports.error = error;\nexports.read_doc = read_doc;\nexports.read_definition = read_definition;\nexports.read_fragment = read_fragment;\nexports.read_operation = read_operation;\nexports.read_selection_set = read_selection_set;\nexports.read_frag_spread = read_frag_spread;\nexports.read_inline_frag = read_inline_frag;\nexports.read_field = read_field;\nexports.read_directives = read_directives;\nexports.read_arguments = read_arguments;\nexports.validate = validate;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./lib/js/NonNullArguments.js?");

/***/ }),

/***/ "./lib/js/UniqueOperationNames.js":
/*!****************************************!*\
  !*** ./lib/js/UniqueOperationNames.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE\n\n\nvar Block = __webpack_require__(/*! bs-platform/lib/js/block.js */ \"./node_modules/bs-platform/lib/js/block.js\");\nvar Printf = __webpack_require__(/*! bs-platform/lib/js/printf.js */ \"./node_modules/bs-platform/lib/js/printf.js\");\nvar Caml_obj = __webpack_require__(/*! bs-platform/lib/js/caml_obj.js */ \"./node_modules/bs-platform/lib/js/caml_obj.js\");\nvar Pervasives = __webpack_require__(/*! bs-platform/lib/js/pervasives.js */ \"./node_modules/bs-platform/lib/js/pervasives.js\");\nvar Caml_primitive = __webpack_require__(/*! bs-platform/lib/js/caml_primitive.js */ \"./node_modules/bs-platform/lib/js/caml_primitive.js\");\n\nvar error = [/* false */0];\n\nvar listOfNames = [/* [] */0];\n\nfunction checkIfExists(_names, name) {\n  while(true) {\n    var names = _names;\n    if (names) {\n      if (Caml_primitive.caml_string_compare(names[0], name) === 0) {\n        Printf.printf(/* Format */[\n              /* String_literal */Block.__(11, [\n                  \"\\nvalidation error: A query name can only be used once\\n\",\n                  /* End_of_format */0\n                ]),\n              \"\\nvalidation error: A query name can only be used once\\n\"\n            ]);\n        error[0] = /* true */1;\n      }\n      _names = names[1];\n      continue ;\n      \n    } else {\n      listOfNames[0] = Pervasives.$at(names, /* :: */[\n            name,\n            /* [] */0\n          ]);\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_doc(_definitions) {\n  while(true) {\n    var definitions = _definitions;\n    if (definitions) {\n      read_definition(definitions[0]);\n      _definitions = definitions[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_definition(def) {\n  if (def.tag) {\n    return /* () */0;\n  } else {\n    return read_operation(def[0]);\n  }\n}\n\nfunction read_operation(op) {\n  var name = op[/* name */1];\n  if (name) {\n    return checkIfExists(listOfNames[0], name[0]);\n  } else {\n    return /* () */0;\n  }\n}\n\nfunction validate(definitions) {\n  error[0] = /* false */0;\n  Caml_obj.caml_equal(listOfNames, [/* [] */0]);\n  read_doc(definitions);\n  return error[0];\n}\n\nexports.error = error;\nexports.listOfNames = listOfNames;\nexports.checkIfExists = checkIfExists;\nexports.read_doc = read_doc;\nexports.read_definition = read_definition;\nexports.read_operation = read_operation;\nexports.validate = validate;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./lib/js/UniqueOperationNames.js?");

/***/ }),

/***/ "./lib/js/lexer.js":
/*!*************************!*\
  !*** ./lib/js/lexer.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE\n\n\nvar Block = __webpack_require__(/*! bs-platform/lib/js/block.js */ \"./node_modules/bs-platform/lib/js/block.js\");\nvar Curry = __webpack_require__(/*! bs-platform/lib/js/curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Buffer = __webpack_require__(/*! bs-platform/lib/js/buffer.js */ \"./node_modules/bs-platform/lib/js/buffer.js\");\nvar Lexing = __webpack_require__(/*! bs-platform/lib/js/lexing.js */ \"./node_modules/bs-platform/lib/js/lexing.js\");\nvar Caml_format = __webpack_require__(/*! bs-platform/lib/js/caml_format.js */ \"./node_modules/bs-platform/lib/js/caml_format.js\");\nvar Caml_exceptions = __webpack_require__(/*! bs-platform/lib/js/caml_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_exceptions.js\");\n\nvar $$SyntaxError = Caml_exceptions.create(\"Lexer.SyntaxError\");\n\nfunction next_line(lexbuf) {\n  var pos = lexbuf[/* lex_curr_p */11];\n  lexbuf[/* lex_curr_p */11] = /* record */[\n    /* pos_fname */pos[/* pos_fname */0],\n    /* pos_lnum */pos[/* pos_lnum */1] + 1 | 0,\n    /* pos_bol */lexbuf[/* lex_curr_pos */5],\n    /* pos_cnum */pos[/* pos_cnum */3]\n  ];\n  return /* () */0;\n}\n\nvar __ocaml_lex_tables = /* record */[\n  /* lex_base */\"\\0\\0\\xe7\\xff\\xe8\\xffN\\0\\xe9\\xff\\xea\\xff\\xeb\\xff\\xec\\xff\\xed\\xff\\xee\\xff\\xef\\xff\\xf0\\xff\\xf1\\xff\\xf2\\xff\\xf3\\xff\\xa0\\0\\xeb\\x006\\x01\\x81\\x01\\xcc\\x01\\x17\\x02g\\x02\\xb4\\x02\\xbe\\x02\\xca\\x02\\xfe\\xff\\x01\\0\\x03\\0\\xea\\x02\\xf4\\x02\\x01\\0\\xfd\\xff\\xd4\\x02\\n\\x03\\x14\\x03\\x1e\\x03i\\x03\\xb4\\x03\\xff\\x03J\\x04\\x95\\x04\\xe0\\x04+\\x05v\\x05\\xc1\\x05\\f\\x06W\\x06\\xa2\\x06\\xed\\x068\\x07\\x83\\x07\\xce\\x07\\x19\\bd\\b\\xaf\\b\\xfa\\bE\\t\\x90\\t\\xdb\\t&\\nq\\n\\xbc\\n\\x07\\x0bR\\x0b\\x9d\\x0b\\xe8\\x0b!\\f\\xf5\\xff\\\"\\f\\x16\\f\\xff\\xff\\xf8\\xff\\xf9\\xff\\xfa\\xff\\xfb\\xff\\xfc\\xff\\xfd\\xff\\xfe\\xff\",\n  /* lex_backtrk */\"\\x04\\0\\xff\\xff\\xff\\xff\\x17\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x17\\0\\x17\\0\\x17\\0\\x17\\0\\x17\\0\\x17\\0\\x17\\0\\x03\\0\\x17\\0\\x04\\0\\xff\\xff\\x01\\0\\0\\0\\xff\\xff\\x04\\0\\xff\\xff\\xff\\xff\\x04\\0\\xff\\xff\\x03\\0\\x19\\0\\x04\\0\\x19\\0\\x19\\0\\x05\\0\\x19\\0\\x19\\0\\x19\\0\\x19\\0\\x06\\0\\x19\\0\\x19\\0\\x19\\0\\x19\\0\\x19\\0\\n\\0\\x19\\0\\x19\\0\\x07\\0\\x19\\0\\x19\\0\\x19\\0\\b\\0\\x19\\0\\x19\\0\\x19\\0\\x19\\0\\x19\\0\\x19\\0\\t\\0\\x0b\\0\\xff\\xff\\xff\\xff\\b\\0\\t\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\",\n  /* lex_default */\"\\x02\\0\\0\\0\\0\\0\\xff\\xff\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\0\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\0\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xffD\\0\\0\\0D\\0\\xff\\xff\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\",\n  /* lex_trans */\"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\x1b\\0\\x19\\0\\x19\\0\\x1b\\0\\x1a\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\x1b\\0\\0\\0\\x0e\\0\\x1b\\0\\r\\0\\0\\0\\0\\0\\0\\0\\t\\0\\b\\0\\0\\0\\0\\0\\x04\\0\\x17\\0\\x18\\0\\x1f\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x05\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\f\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x15\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x07\\0\\0\\0\\x06\\0\\0\\0\\x03\\0\\0\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x15\\0\\x13\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x10\\0\\x12\\0\\x0f\\0\\x03\\0\\x11\\0\\x03\\0\\x03\\0\\x14\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x0b\\0\\0\\0\\nxx006\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0\\0\\0\\0\\0\\0\\0\\0\\0#\\0\\0\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\xx1d\\0\\0\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0\\x1e\\0\\x1c\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0 \\0 \\0 \\0 \\0 \\0 \\0 \\0 \\0 \\0 \\0\\0\\0\\x1c\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0!\\0\\0\\0!\\0\\0\\0\\x1c\\0 \\0 \\0 \\0 \\0 \\0 \\0 \\0 \\0 \\0 \\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\0\\0\\x1c\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\x1c\\0 \\0 \\0 \\0 \\0 \\0 \\0 \\0 \\0 \\0 \\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0\\0\\0\\x1cx000\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0\\0\\0\\0\\0\\0\\0\\0\\0#\\0\\0\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\x001\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0\\0\\0\\0\\0\\0\\0\\0\\0#\\0\\0\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\xx004\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0\\0\\0\\0\\0\\0\\0\\0\\0#\\0\\0\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\xx007\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0\\0\\0\\0\\0\\0\\0\\0\\0#\\0\\0\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\x008\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0\\0\\0\\0\\0\\0\\0\\0\\0#\\0\\0\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\xxff\\xffM\\0\\0\\0#\\0\\0\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0L\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0K\\0\\0\\0\\0\\0\\0\\0J\\0E\\0\\xff\\xffxff\\xff\",\n  /* lex_check */\"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\0\\0\\0\\0\\x1a\\0\\x1b\\0\\0\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\0\\0\\xff\\xff\\0\\0\\x1b\\0\\0\\0\\xff\\xff\\xff\\xff\\xff\\xff\\0\\0\\0\\0\\xff\\xff\\xff\\xff\\0\\0\\0\\0\\0\\0\\x1e\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\xff\\xff\\0\\0\\xff\\xff\\0\\0\\xff\\xff\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\xff\\xff\\0\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x03\\0\\xff\\xff\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\x03\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x0f\\0\\0\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x0f\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x10\\0\\xff\\xff\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x10\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x11\\0\\xff\\xff\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x11\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x12\\0\\xff\\xff\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x12\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x13\\0\\xff\\xff\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x13\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x14\\0\\xff\\xff\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x14\\0\\x15\\0\\xff\\xff\\x15\\0\\xff\\xff\\xff\\xff\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x15\\0\\xff\\xff\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x15\\0\\x16\\0\\xff\\xff\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x16\\0\\x17\\0\\x17\\0\\x17\\0\\x17\\0\\x17\\0\\x17\\0\\x17\\0\\x17\\0\\x17\\0\\x17\\0\\x18\\0\\x16\\0\\x18\\0\\x18\\0\\x18\\0\\x18\\0\\x18\\0\\x18\\0\\x18\\0\\x18\\0\\x18\\0\\x18\\0 \\0 \\0 \\0 \\0 \\0 \\0 \\0 \\0 \\0 \\0\\xff\\xff\\x18\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x1c\\0\\xff\\xff\\x1c\\0\\xff\\xff\\x16\\0\\x1c\\0\\x1c\\0\\x1c\\0\\x1c\\0\\x1c\\0\\x1c\\0\\x1c\\0\\x1c\\0\\x1c\\0\\x1c\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\x1d\\0\\xff\\xff\\x18\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x1d\\0!\\0!\\0!\\0!\\0!\\0!\\0!\\0!\\0!\\0!\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0\\\"\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0\\xff\\xff\\x1d\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff#\\0\\xff\\xff#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0#\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff$\\0\\xff\\xff$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0$\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff%\\0\\xff\\xff%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0%\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff&\\0\\xff\\xff&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0&\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff'\\0\\xff\\xff'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0'\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff(\\0\\xff\\xff(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0(\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff)\\0\\xff\\xff)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0)\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff*\\0\\xff\\xff*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0*\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff+\\0\\xff\\xff+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0+\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff,\\0\\xff\\xff,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0,\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff-\\0\\xff\\xff-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0-\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff.\\0\\xff\\xff.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0.\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff/\\0\\xff\\xff/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\0/\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff0\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff0\\0\\xff\\xff0\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x000\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff1\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff1\\0\\xff\\xff1\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x001\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff2\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff2\\0\\xff\\xff2\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x002\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff3\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff3\\0\\xff\\xff3\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x003\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff4\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff4\\0\\xff\\xff4\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x004\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff5\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff5\\0\\xff\\xff5\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x005\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff6\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff6\\0\\xff\\xff6\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x006\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff7\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff7\\0\\xff\\xff7\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x007\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff8\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff8\\0\\xff\\xff8\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x008\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff9\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff9\\0\\xff\\xff9\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\x009\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff:\\0\\xff\\xff:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0:\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff;\\0\\xff\\xff;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0;\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff<\\0\\xff\\xff<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0<\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff=\\0\\xff\\xff=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0=\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff>\\0\\xff\\xff>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0>\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff?\\0\\xff\\xff?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0?\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff@\\0\\xff\\xff@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0@\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xffA\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0B\\0D\\0E\\0\\xff\\xffA\\0\\xff\\xffA\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0A\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xffE\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xffE\\0\\xff\\xff\\xff\\xff\\xff\\xffE\\0B\\0D\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xffE\\0\\xff\\xff\\xff\\xff\\xff\\xffE\\0\\xff\\xffE\\0\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xffB\\0D\\0\",\n  /* lex_base_code */\"\",\n  /* lex_backtrk_code */\"\",\n  /* lex_default_code */\"\",\n  /* lex_trans_code */\"\",\n  /* lex_check_code */\"\",\n  /* lex_code */\"\"\n];\n\nfunction __ocaml_lex_read_string_rec(buf, lexbuf, ___ocaml_lex_state) {\n  while(true) {\n    var __ocaml_lex_state = ___ocaml_lex_state;\n    var __ocaml_lex_state$1 = Lexing.engine(__ocaml_lex_tables, __ocaml_lex_state, lexbuf);\n    if (__ocaml_lex_state$1 > 10 || __ocaml_lex_state$1 < 0) {\n      Curry._1(lexbuf[/* refill_buff */0], lexbuf);\n      ___ocaml_lex_state = __ocaml_lex_state$1;\n      continue ;\n      \n    } else {\n      switch (__ocaml_lex_state$1) {\n        case 0 : \n            return /* STRING */Block.__(0, [Buffer.contents(buf)]);\n        case 1 : \n            Buffer.add_char(buf, /* \"/\" */47);\n            ___ocaml_lex_state = 66;\n            continue ;\n            case 2 : \n            Buffer.add_char(buf, /* \"\\\\\" */92);\n            ___ocaml_lex_state = 66;\n            continue ;\n            case 3 : \n            Buffer.add_char(buf, /* \"\\b\" */8);\n            ___ocaml_lex_state = 66;\n            continue ;\n            case 4 : \n            Buffer.add_char(buf, /* \"\\012\" */12);\n            ___ocaml_lex_state = 66;\n            continue ;\n            case 5 : \n            Buffer.add_char(buf, /* \"\\n\" */10);\n            ___ocaml_lex_state = 66;\n            continue ;\n            case 6 : \n            Buffer.add_char(buf, /* \"\\r\" */13);\n            ___ocaml_lex_state = 66;\n            continue ;\n            case 7 : \n            Buffer.add_char(buf, /* \"\\t\" */9);\n            ___ocaml_lex_state = 66;\n            continue ;\n            case 8 : \n            Buffer.add_string(buf, Lexing.lexeme(lexbuf));\n            ___ocaml_lex_state = 66;\n            continue ;\n            case 9 : \n            throw [\n                  $$SyntaxError,\n                  \"Illegal string character: \" + Lexing.lexeme(lexbuf)\n                ];\n        case 10 : \n            throw [\n                  $$SyntaxError,\n                  \"String is not terminated\"\n                ];\n        \n      }\n    }\n  };\n}\n\nfunction __ocaml_lex_read_rec(lexbuf, ___ocaml_lex_state) {\n  while(true) {\n    var __ocaml_lex_state = ___ocaml_lex_state;\n    var __ocaml_lex_state$1 = Lexing.engine(__ocaml_lex_tables, __ocaml_lex_state, lexbuf);\n    if (__ocaml_lex_state$1 > 25 || __ocaml_lex_state$1 < 0) {\n      Curry._1(lexbuf[/* refill_buff */0], lexbuf);\n      ___ocaml_lex_state = __ocaml_lex_state$1;\n      continue ;\n      \n    } else {\n      switch (__ocaml_lex_state$1) {\n        case 1 : \n            next_line(lexbuf);\n            ___ocaml_lex_state = 0;\n            continue ;\n            case 2 : \n            return /* SPREAD */1;\n        case 3 : \n            return /* INT */Block.__(3, [Caml_format.caml_int_of_string(Lexing.lexeme(lexbuf))]);\n        case 4 : \n            return /* FLOAT */Block.__(4, [Caml_format.caml_float_of_string(Lexing.lexeme(lexbuf))]);\n        case 5 : \n            return /* TRUE */0;\n        case 6 : \n            return /* FALSE */12;\n        case 7 : \n            return /* NULL */6;\n        case 8 : \n            return /* QUERY */5;\n        case 9 : \n            return /* MUTATION */7;\n        case 10 : \n            return /* FRAGMENT */11;\n        case 11 : \n            return /* ON */Block.__(1, [\"on\"]);\n        case 12 : \n            return __ocaml_lex_read_string_rec(Buffer.create(17), lexbuf, 66);\n        case 13 : \n            return /* DOLLAR */14;\n        case 14 : \n            return /* AT */17;\n        case 15 : \n            return /* LEFT_BRACE */10;\n        case 16 : \n            return /* RIGHT_BRACE */4;\n        case 17 : \n            return /* LEFT_PAREN */8;\n        case 18 : \n            return /* RIGHT_PAREN */2;\n        case 19 : \n            return /* LEFT_BRACK */9;\n        case 20 : \n            return /* RIGHT_BRACK */3;\n        case 21 : \n            return /* COLON */15;\n        case 0 : \n        case 22 : \n            ___ocaml_lex_state = 0;\n            continue ;\n            case 23 : \n            throw [\n                  $$SyntaxError,\n                  \"Unexpected char: \" + Lexing.lexeme(lexbuf)\n                ];\n        case 24 : \n            return /* EOF */13;\n        case 25 : \n            return /* NAME */Block.__(2, [Lexing.lexeme(lexbuf)]);\n        \n      }\n    }\n  };\n}\n\nfunction read(lexbuf) {\n  return __ocaml_lex_read_rec(lexbuf, 0);\n}\n\nfunction read_string(buf, lexbuf) {\n  return __ocaml_lex_read_string_rec(buf, lexbuf, 66);\n}\n\nexports.$$SyntaxError = $$SyntaxError;\nexports.next_line = next_line;\nexports.__ocaml_lex_tables = __ocaml_lex_tables;\nexports.read = read;\nexports.__ocaml_lex_read_rec = __ocaml_lex_read_rec;\nexports.read_string = read_string;\nexports.__ocaml_lex_read_string_rec = __ocaml_lex_read_string_rec;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./lib/js/lexer.js?");

/***/ }),

/***/ "./lib/js/parse.js":
/*!*************************!*\
  !*** ./lib/js/parse.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE\n\n\nvar Block = __webpack_require__(/*! bs-platform/lib/js/block.js */ \"./node_modules/bs-platform/lib/js/block.js\");\nvar Curry = __webpack_require__(/*! bs-platform/lib/js/curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Lexer = __webpack_require__(/*! ./lexer.js */ \"./lib/js/lexer.js\");\nvar Js_exn = __webpack_require__(/*! bs-platform/lib/js/js_exn.js */ \"./node_modules/bs-platform/lib/js/js_exn.js\");\nvar Lexing = __webpack_require__(/*! bs-platform/lib/js/lexing.js */ \"./node_modules/bs-platform/lib/js/lexing.js\");\nvar Parser = __webpack_require__(/*! ./parser.js */ \"./lib/js/parser.js\");\nvar Printf = __webpack_require__(/*! bs-platform/lib/js/printf.js */ \"./node_modules/bs-platform/lib/js/printf.js\");\nvar Prettify = __webpack_require__(/*! ./prettify.js */ \"./lib/js/prettify.js\");\nvar Pervasives = __webpack_require__(/*! bs-platform/lib/js/pervasives.js */ \"./node_modules/bs-platform/lib/js/pervasives.js\");\n\nfunction print_position(outx, lexbuf) {\n  var pos = lexbuf[/* lex_curr_p */11];\n  return Curry._3(Printf.fprintf(outx, /* Format */[\n                  /* String */Block.__(2, [\n                      /* No_padding */0,\n                      /* Char_literal */Block.__(12, [\n                          /* \":\" */58,\n                          /* Int */Block.__(4, [\n                              /* Int_d */0,\n                              /* No_padding */0,\n                              /* No_precision */0,\n                              /* Char_literal */Block.__(12, [\n                                  /* \":\" */58,\n                                  /* Int */Block.__(4, [\n                                      /* Int_d */0,\n                                      /* No_padding */0,\n                                      /* No_precision */0,\n                                      /* End_of_format */0\n                                    ])\n                                ])\n                            ])\n                        ])\n                    ]),\n                  \"%s:%d:%d\"\n                ]), pos[/* pos_fname */0], pos[/* pos_lnum */1], (pos[/* pos_cnum */3] - pos[/* pos_bol */2] | 0) + 1 | 0);\n}\n\nfunction parse_with_error(lexbuf) {\n  try {\n    return Parser.prog(Lexer.read, lexbuf);\n  }\n  catch (raw_exn){\n    var exn = Js_exn.internalToOCamlException(raw_exn);\n    if (exn[0] === Lexer.$$SyntaxError) {\n      Curry._3(Printf.fprintf(Pervasives.stderr, /* Format */[\n                /* Alpha */Block.__(15, [/* String_literal */Block.__(11, [\n                        \": \",\n                        /* String */Block.__(2, [\n                            /* No_padding */0,\n                            /* Char_literal */Block.__(12, [\n                                /* \"\\n\" */10,\n                                /* End_of_format */0\n                              ])\n                          ])\n                      ])]),\n                \"%a: %s\\n\"\n              ]), print_position, lexbuf, exn[1]);\n      return /* None */0;\n    } else if (exn === Parser.$$Error) {\n      Curry._2(Printf.fprintf(Pervasives.stderr, /* Format */[\n                /* Alpha */Block.__(15, [/* String_literal */Block.__(11, [\n                        \": syntax error\\n\",\n                        /* End_of_format */0\n                      ])]),\n                \"%a: syntax error\\n\"\n              ]), print_position, lexbuf);\n      return /* None */0;\n    } else {\n      throw exn;\n    }\n  }\n}\n\nfunction parse_and_print(lexbuf) {\n  var ast = /* [] */0;\n  var match = parse_with_error(lexbuf);\n  if (match) {\n    ast = match[0];\n    parse_and_print(lexbuf);\n  }\n  return ast;\n}\n\nfunction parse(graphql, pretty_print) {\n  var lexbuf = Lexing.from_string(graphql);\n  var init = lexbuf[/* lex_curr_p */11];\n  lexbuf[/* lex_curr_p */11] = /* record */[\n    /* pos_fname */graphql,\n    /* pos_lnum */init[/* pos_lnum */1],\n    /* pos_bol */init[/* pos_bol */2],\n    /* pos_cnum */init[/* pos_cnum */3]\n  ];\n  var ast = parse_and_print(lexbuf);\n  if (pretty_print) {\n    Prettify.print(ast);\n  }\n  return ast;\n}\n\nvar parse_from_buf = parse_and_print;\n\nexports.print_position = print_position;\nexports.parse_with_error = parse_with_error;\nexports.parse_and_print = parse_and_print;\nexports.parse = parse;\nexports.parse_from_buf = parse_from_buf;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./lib/js/parse.js?");

/***/ }),

/***/ "./lib/js/parser.js":
/*!**************************!*\
  !*** ./lib/js/parser.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE\n\n\nvar Block = __webpack_require__(/*! bs-platform/lib/js/block.js */ \"./node_modules/bs-platform/lib/js/block.js\");\nvar Curry = __webpack_require__(/*! bs-platform/lib/js/curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Printf = __webpack_require__(/*! bs-platform/lib/js/printf.js */ \"./node_modules/bs-platform/lib/js/printf.js\");\nvar Pervasives = __webpack_require__(/*! bs-platform/lib/js/pervasives.js */ \"./node_modules/bs-platform/lib/js/pervasives.js\");\nvar Caml_exceptions = __webpack_require__(/*! bs-platform/lib/js/caml_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_exceptions.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! bs-platform/lib/js/caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nvar $$Error = Caml_exceptions.create(\"Parser.MenhirBasics.Error\");\n\nfunction _menhir_goto_read_const_list(_menhir_env, _menhir_stack, _v) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _v\n  ];\n  if (_menhir_env[/* _menhir_error */3]) {\n    throw [\n          Caml_builtin_exceptions.assert_failure,\n          [\n            \"parser.ml\",\n            111,\n            6\n          ]\n        ];\n  }\n  var _tok = _menhir_env[/* _menhir_token */2];\n  if (typeof _tok === \"number\") {\n    switch (_tok) {\n      case 0 : \n          return _menhir_run80(_menhir_env, _menhir_stack$1, /* MenhirState84 */2);\n      case 3 : \n          var _menhir_env$1 = _menhir_discard(_menhir_env);\n          var _v$1 = /* `List */[\n            848054398,\n            _v\n          ];\n          return _menhir_goto_read_const_value(_menhir_env$1, _menhir_stack[0], _menhir_stack[1], _v$1);\n      case 6 : \n          return _menhir_run82(_menhir_env, _menhir_stack$1, /* MenhirState84 */2);\n      case 9 : \n          return _menhir_run83(_menhir_env, _menhir_stack$1, /* MenhirState84 */2);\n      case 10 : \n          return _menhir_run86(_menhir_env, _menhir_stack$1, /* MenhirState84 */2);\n      case 12 : \n          return _menhir_run92(_menhir_env, _menhir_stack$1, /* MenhirState84 */2);\n      default:\n        if (_menhir_env[/* _menhir_error */3]) {\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"parser.ml\",\n                  152,\n                  8\n                ]\n              ];\n        }\n        _menhir_env[/* _menhir_error */3] = /* true */1;\n        return _menhir_errorcase(_menhir_env, _menhir_stack$1, /* MenhirState84 */2);\n    }\n  } else {\n    switch (_tok.tag | 0) {\n      case 0 : \n          return _menhir_run81(_menhir_env, _menhir_stack$1, /* MenhirState84 */2, _tok[0]);\n      case 1 : \n          return _menhir_run10(_menhir_env, _menhir_stack$1, /* MenhirState84 */2, _tok[0]);\n      case 2 : \n          return _menhir_run11(_menhir_env, _menhir_stack$1, /* MenhirState84 */2, _tok[0]);\n      case 3 : \n          return _menhir_run90(_menhir_env, _menhir_stack$1, /* MenhirState84 */2, _tok[0]);\n      case 4 : \n          return _menhir_run91(_menhir_env, _menhir_stack$1, /* MenhirState84 */2, _tok[0]);\n      \n    }\n  }\n}\n\nfunction _menhir_fail() {\n  Printf.fprintf(Pervasives.stderr, /* Format */[\n        /* String_literal */Block.__(11, [\n            \"Internal failure -- please contact the parser generator's developers.\\n\",\n            /* Flush */Block.__(10, [/* End_of_format */0])\n          ]),\n        \"Internal failure -- please contact the parser generator's developers.\\n%!\"\n      ]);\n  throw [\n        Caml_builtin_exceptions.assert_failure,\n        [\n          \"parser.ml\",\n          1811,\n          4\n        ]\n      ];\n}\n\nfunction _menhir_goto_read_list(_menhir_env, _menhir_stack, _v) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _v\n  ];\n  if (_menhir_env[/* _menhir_error */3]) {\n    throw [\n          Caml_builtin_exceptions.assert_failure,\n          [\n            \"parser.ml\",\n            461,\n            6\n          ]\n        ];\n  }\n  var _tok = _menhir_env[/* _menhir_token */2];\n  if (typeof _tok === \"number\") {\n    switch (_tok) {\n      case 0 : \n          return _menhir_run24(_menhir_env, _menhir_stack$1, /* MenhirState28 */23);\n      case 3 : \n          var _menhir_env$1 = _menhir_discard(_menhir_env);\n          var _v$1 = /* `List */[\n            848054398,\n            _v\n          ];\n          return _menhir_goto_read_value(_menhir_env$1, _menhir_stack[0], _menhir_stack[1], _v$1);\n      case 6 : \n          return _menhir_run26(_menhir_env, _menhir_stack$1, /* MenhirState28 */23);\n      case 9 : \n          return _menhir_run27(_menhir_env, _menhir_stack$1, /* MenhirState28 */23);\n      case 10 : \n          return _menhir_run30(_menhir_env, _menhir_stack$1, /* MenhirState28 */23);\n      case 12 : \n          return _menhir_run37(_menhir_env, _menhir_stack$1, /* MenhirState28 */23);\n      case 14 : \n          return _menhir_run38(_menhir_env, _menhir_stack$1, /* MenhirState28 */23);\n      default:\n        if (_menhir_env[/* _menhir_error */3]) {\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"parser.ml\",\n                  504,\n                  8\n                ]\n              ];\n        }\n        _menhir_env[/* _menhir_error */3] = /* true */1;\n        return _menhir_errorcase(_menhir_env, _menhir_stack$1, /* MenhirState28 */23);\n    }\n  } else {\n    switch (_tok.tag | 0) {\n      case 0 : \n          return _menhir_run25(_menhir_env, _menhir_stack$1, /* MenhirState28 */23, _tok[0]);\n      case 1 : \n          return _menhir_run10(_menhir_env, _menhir_stack$1, /* MenhirState28 */23, _tok[0]);\n      case 2 : \n          return _menhir_run11(_menhir_env, _menhir_stack$1, /* MenhirState28 */23, _tok[0]);\n      case 3 : \n          return _menhir_run35(_menhir_env, _menhir_stack$1, /* MenhirState28 */23, _tok[0]);\n      case 4 : \n          return _menhir_run36(_menhir_env, _menhir_stack$1, /* MenhirState28 */23, _tok[0]);\n      \n    }\n  }\n}\n\nfunction _menhir_goto_read_argument(_menhir_env, _menhir_stack, _v) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _v\n  ];\n  if (_menhir_env[/* _menhir_error */3]) {\n    throw [\n          Caml_builtin_exceptions.assert_failure,\n          [\n            \"parser.ml\",\n            628,\n            6\n          ]\n        ];\n  }\n  var _tok = _menhir_env[/* _menhir_token */2];\n  var exit = 0;\n  if (typeof _tok === \"number\") {\n    if (_tok === 2) {\n      var _menhir_env$1 = _menhir_discard(_menhir_env);\n      return _menhir_goto_read_arguments(_menhir_env$1, _menhir_stack[0], _menhir_stack[1], _v);\n    } else {\n      exit = 1;\n    }\n  } else {\n    switch (_tok.tag | 0) {\n      case 1 : \n          return _menhir_run10(_menhir_env, _menhir_stack$1, /* MenhirState20 */25, _tok[0]);\n      case 2 : \n          return _menhir_run11(_menhir_env, _menhir_stack$1, /* MenhirState20 */25, _tok[0]);\n      default:\n        exit = 1;\n    }\n  }\n  if (exit === 1) {\n    if (_menhir_env[/* _menhir_error */3]) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"parser.ml\",\n              653,\n              8\n            ]\n          ];\n    }\n    _menhir_env[/* _menhir_error */3] = /* true */1;\n    return _menhir_errorcase(_menhir_env, _menhir_stack$1, /* MenhirState20 */25);\n  }\n  \n}\n\nfunction _menhir_goto_read_object(_menhir_env, _menhir_stack, _v) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _v\n  ];\n  if (_menhir_env[/* _menhir_error */3]) {\n    throw [\n          Caml_builtin_exceptions.assert_failure,\n          [\n            \"parser.ml\",\n            513,\n            6\n          ]\n        ];\n  }\n  var _tok = _menhir_env[/* _menhir_token */2];\n  var exit = 0;\n  if (typeof _tok === \"number\") {\n    if (_tok === 4) {\n      var _menhir_env$1 = _menhir_discard(_menhir_env);\n      var _v$1 = /* `Assoc */[\n        963043957,\n        _v\n      ];\n      return _menhir_goto_read_value(_menhir_env$1, _menhir_stack[0], _menhir_stack[1], _v$1);\n    } else {\n      exit = 1;\n    }\n  } else if (_tok.tag === 2) {\n    var _menhir_stack_001 = _tok[0];\n    var _menhir_stack$2 = /* tuple */[\n      _menhir_stack$1,\n      _menhir_stack_001\n    ];\n    var _menhir_env$2 = _menhir_discard(_menhir_env);\n    var _tok$1 = _menhir_env$2[/* _menhir_token */2];\n    var exit$1 = 0;\n    if (typeof _tok$1 === \"number\" && _tok$1 === 15) {\n      var _menhir_env$3 = _menhir_discard(_menhir_env$2);\n      var _tok$2 = _menhir_env$3[/* _menhir_token */2];\n      if (typeof _tok$2 === \"number\") {\n        switch (_tok$2) {\n          case 0 : \n              return _menhir_run24(_menhir_env$3, _menhir_stack$2, /* MenhirState34 */22);\n          case 6 : \n              return _menhir_run26(_menhir_env$3, _menhir_stack$2, /* MenhirState34 */22);\n          case 9 : \n              return _menhir_run27(_menhir_env$3, _menhir_stack$2, /* MenhirState34 */22);\n          case 10 : \n              return _menhir_run30(_menhir_env$3, _menhir_stack$2, /* MenhirState34 */22);\n          case 12 : \n              return _menhir_run37(_menhir_env$3, _menhir_stack$2, /* MenhirState34 */22);\n          case 14 : \n              return _menhir_run38(_menhir_env$3, _menhir_stack$2, /* MenhirState34 */22);\n          default:\n            if (_menhir_env$3[/* _menhir_error */3]) {\n              throw [\n                    Caml_builtin_exceptions.assert_failure,\n                    [\n                      \"parser.ml\",\n                      561,\n                      16\n                    ]\n                  ];\n            }\n            _menhir_env$3[/* _menhir_error */3] = /* true */1;\n            return _menhir_errorcase(_menhir_env$3, _menhir_stack$2, /* MenhirState34 */22);\n        }\n      } else {\n        switch (_tok$2.tag | 0) {\n          case 0 : \n              return _menhir_run25(_menhir_env$3, _menhir_stack$2, /* MenhirState34 */22, _tok$2[0]);\n          case 1 : \n              return _menhir_run10(_menhir_env$3, _menhir_stack$2, /* MenhirState34 */22, _tok$2[0]);\n          case 2 : \n              return _menhir_run11(_menhir_env$3, _menhir_stack$2, /* MenhirState34 */22, _tok$2[0]);\n          case 3 : \n              return _menhir_run35(_menhir_env$3, _menhir_stack$2, /* MenhirState34 */22, _tok$2[0]);\n          case 4 : \n              return _menhir_run36(_menhir_env$3, _menhir_stack$2, /* MenhirState34 */22, _tok$2[0]);\n          \n        }\n      }\n    } else {\n      exit$1 = 2;\n    }\n    if (exit$1 === 2) {\n      if (_menhir_env$2[/* _menhir_error */3]) {\n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              [\n                \"parser.ml\",\n                565,\n                12\n              ]\n            ];\n      }\n      _menhir_env$2[/* _menhir_error */3] = /* true */1;\n      throw $$Error;\n    }\n    \n  } else {\n    exit = 1;\n  }\n  if (exit === 1) {\n    if (_menhir_env[/* _menhir_error */3]) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"parser.ml\",\n              590,\n              8\n            ]\n          ];\n    }\n    _menhir_env[/* _menhir_error */3] = /* true */1;\n    return _menhir_errorcase(_menhir_env, _menhir_stack[0], _menhir_stack[1]);\n  }\n  \n}\n\nfunction _menhir_goto_read_name(_menhir_env, _menhir_stack, _menhir_s, _v) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _menhir_s,\n    _v\n  ];\n  var exit = 0;\n  switch (_menhir_s) {\n    case 1 : \n    case 2 : \n    case 3 : \n        exit = 3;\n        break;\n    case 5 : \n    case 6 : \n        exit = 2;\n        break;\n    case 9 : \n        var _v$1 = /* Some */[_v];\n        return _menhir_goto_option_read_name_(_menhir_env, _menhir_stack, _menhir_s, _v$1);\n    case 17 : \n        if (_menhir_env[/* _menhir_error */3]) {\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"parser.ml\",\n                  1337,\n                  10\n                ]\n              ];\n        }\n        var _tok = _menhir_env[/* _menhir_token */2];\n        var exit$1 = 0;\n        if (typeof _tok === \"number\") {\n          switch (_tok) {\n            case 8 : \n                return _menhir_run19(_menhir_env, _menhir_stack$1, /* MenhirState53 */16);\n            case 15 : \n                var _menhir_env$1 = _menhir_discard(_menhir_env);\n                var _v$2 = /* Some */[_v];\n                return _menhir_goto_read_alias(_menhir_env$1, _menhir_stack[0], _v$2);\n            case 1 : \n            case 4 : \n            case 10 : \n            case 17 : \n                return _menhir_reduce13(_menhir_env, _menhir_stack$1, /* MenhirState53 */16);\n            default:\n              exit$1 = 4;\n          }\n        } else {\n          switch (_tok.tag | 0) {\n            case 1 : \n            case 2 : \n                return _menhir_reduce13(_menhir_env, _menhir_stack$1, /* MenhirState53 */16);\n            default:\n              exit$1 = 4;\n          }\n        }\n        if (exit$1 === 4) {\n          if (_menhir_env[/* _menhir_error */3]) {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"parser.ml\",\n                    1361,\n                    12\n                  ]\n                ];\n          }\n          _menhir_env[/* _menhir_error */3] = /* true */1;\n          return _menhir_errorcase(_menhir_env, _menhir_stack$1, /* MenhirState53 */16);\n        }\n        break;\n    case 21 : \n        var _menhir_s$1 = _menhir_stack[1];\n        var _menhir_stack$2 = _menhir_stack[0];\n        var _menhir_stack$3 = /* tuple */[\n          _menhir_stack$2,\n          _menhir_s$1,\n          _v\n        ];\n        if (_menhir_s$1 >= 22) {\n          if (_menhir_s$1 >= 25) {\n            return _menhir_fail(/* () */0);\n          } else {\n            var _v$3 = /* `Variable */[\n              -1027682724,\n              _v\n            ];\n            return _menhir_goto_read_value(_menhir_env, _menhir_stack$2, _menhir_s$1, _v$3);\n          }\n        } else if (_menhir_s$1 !== 7) {\n          return _menhir_fail(/* () */0);\n        } else {\n          if (_menhir_env[/* _menhir_error */3]) {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"parser.ml\",\n                    1294,\n                    14\n                  ]\n                ];\n          }\n          var _tok$1 = _menhir_env[/* _menhir_token */2];\n          var exit$2 = 0;\n          if (typeof _tok$1 === \"number\" && _tok$1 === 15) {\n            var _menhir_env$2 = _menhir_discard(_menhir_env);\n            var _tok$2 = _menhir_env$2[/* _menhir_token */2];\n            var exit$3 = 0;\n            if (typeof _tok$2 === \"number\") {\n              if (_tok$2 === 9) {\n                var __menhir_env = _menhir_env$2;\n                var __menhir_stack = _menhir_stack$3;\n                var __menhir_s = /* MenhirState73 */6;\n                while(true) {\n                  var _menhir_s$2 = __menhir_s;\n                  var _menhir_stack$4 = __menhir_stack;\n                  var _menhir_env$3 = __menhir_env;\n                  var _menhir_stack$5 = /* tuple */[\n                    _menhir_stack$4,\n                    _menhir_s$2\n                  ];\n                  var _menhir_env$4 = _menhir_discard(_menhir_env$3);\n                  var _tok$3 = _menhir_env$4[/* _menhir_token */2];\n                  var exit$4 = 0;\n                  if (typeof _tok$3 === \"number\") {\n                    if (_tok$3 === 9) {\n                      __menhir_s = /* MenhirState74 */5;\n                      __menhir_stack = _menhir_stack$5;\n                      __menhir_env = _menhir_env$4;\n                      continue ;\n                      \n                    } else {\n                      exit$4 = 1;\n                    }\n                  } else {\n                    switch (_tok$3.tag | 0) {\n                      case 1 : \n                          return _menhir_run10(_menhir_env$4, _menhir_stack$5, /* MenhirState74 */5, _tok$3[0]);\n                      case 2 : \n                          return _menhir_run11(_menhir_env$4, _menhir_stack$5, /* MenhirState74 */5, _tok$3[0]);\n                      default:\n                        exit$4 = 1;\n                    }\n                  }\n                  if (exit$4 === 1) {\n                    if (_menhir_env$4[/* _menhir_error */3]) {\n                      throw [\n                            Caml_builtin_exceptions.assert_failure,\n                            [\n                              \"parser.ml\",\n                              814,\n                              8\n                            ]\n                          ];\n                    }\n                    _menhir_env$4[/* _menhir_error */3] = /* true */1;\n                    return _menhir_errorcase(_menhir_env$4, _menhir_stack$5, /* MenhirState74 */5);\n                  }\n                  \n                };\n              } else {\n                exit$3 = 5;\n              }\n            } else {\n              switch (_tok$2.tag | 0) {\n                case 1 : \n                    return _menhir_run10(_menhir_env$2, _menhir_stack$3, /* MenhirState73 */6, _tok$2[0]);\n                case 2 : \n                    return _menhir_run11(_menhir_env$2, _menhir_stack$3, /* MenhirState73 */6, _tok$2[0]);\n                default:\n                  exit$3 = 5;\n              }\n            }\n            if (exit$3 === 5) {\n              if (_menhir_env$2[/* _menhir_error */3]) {\n                throw [\n                      Caml_builtin_exceptions.assert_failure,\n                      [\n                        \"parser.ml\",\n                        1310,\n                        20\n                      ]\n                    ];\n              }\n              _menhir_env$2[/* _menhir_error */3] = /* true */1;\n              return _menhir_errorcase(_menhir_env$2, _menhir_stack$3, /* MenhirState73 */6);\n            }\n            \n          } else {\n            exit$2 = 4;\n          }\n          if (exit$2 === 4) {\n            if (_menhir_env[/* _menhir_error */3]) {\n              throw [\n                    Caml_builtin_exceptions.assert_failure,\n                    [\n                      \"parser.ml\",\n                      1314,\n                      16\n                    ]\n                  ];\n            }\n            _menhir_env[/* _menhir_error */3] = /* true */1;\n            return _menhir_errorcase(_menhir_env, _menhir_stack$2, _menhir_s$1);\n          }\n          \n        }\n        break;\n    case 22 : \n    case 23 : \n    case 24 : \n        exit = 1;\n        break;\n    case 25 : \n        if (_menhir_env[/* _menhir_error */3]) {\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"parser.ml\",\n                  1219,\n                  10\n                ]\n              ];\n        }\n        var _tok$4 = _menhir_env[/* _menhir_token */2];\n        var exit$5 = 0;\n        if (typeof _tok$4 === \"number\" && _tok$4 === 15) {\n          var _menhir_env$5 = _menhir_discard(_menhir_env);\n          var _tok$5 = _menhir_env$5[/* _menhir_token */2];\n          if (typeof _tok$5 === \"number\") {\n            switch (_tok$5) {\n              case 0 : \n                  return _menhir_run24(_menhir_env$5, _menhir_stack$1, /* MenhirState23 */24);\n              case 6 : \n                  return _menhir_run26(_menhir_env$5, _menhir_stack$1, /* MenhirState23 */24);\n              case 9 : \n                  return _menhir_run27(_menhir_env$5, _menhir_stack$1, /* MenhirState23 */24);\n              case 10 : \n                  return _menhir_run30(_menhir_env$5, _menhir_stack$1, /* MenhirState23 */24);\n              case 12 : \n                  return _menhir_run37(_menhir_env$5, _menhir_stack$1, /* MenhirState23 */24);\n              case 14 : \n                  return _menhir_run38(_menhir_env$5, _menhir_stack$1, /* MenhirState23 */24);\n              default:\n                if (_menhir_env$5[/* _menhir_error */3]) {\n                  throw [\n                        Caml_builtin_exceptions.assert_failure,\n                        [\n                          \"parser.ml\",\n                          1251,\n                          16\n                        ]\n                      ];\n                }\n                _menhir_env$5[/* _menhir_error */3] = /* true */1;\n                return _menhir_errorcase(_menhir_env$5, _menhir_stack$1, /* MenhirState23 */24);\n            }\n          } else {\n            switch (_tok$5.tag | 0) {\n              case 0 : \n                  return _menhir_run25(_menhir_env$5, _menhir_stack$1, /* MenhirState23 */24, _tok$5[0]);\n              case 1 : \n                  return _menhir_run10(_menhir_env$5, _menhir_stack$1, /* MenhirState23 */24, _tok$5[0]);\n              case 2 : \n                  return _menhir_run11(_menhir_env$5, _menhir_stack$1, /* MenhirState23 */24, _tok$5[0]);\n              case 3 : \n                  return _menhir_run35(_menhir_env$5, _menhir_stack$1, /* MenhirState23 */24, _tok$5[0]);\n              case 4 : \n                  return _menhir_run36(_menhir_env$5, _menhir_stack$1, /* MenhirState23 */24, _tok$5[0]);\n              \n            }\n          }\n        } else {\n          exit$5 = 4;\n        }\n        if (exit$5 === 4) {\n          if (_menhir_env[/* _menhir_error */3]) {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"parser.ml\",\n                    1255,\n                    12\n                  ]\n                ];\n          }\n          _menhir_env[/* _menhir_error */3] = /* true */1;\n          return _menhir_errorcase(_menhir_env, _menhir_stack, _menhir_s);\n        }\n        break;\n    case 27 : \n        if (_menhir_env[/* _menhir_error */3]) {\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"parser.ml\",\n                  1205,\n                  10\n                ]\n              ];\n        }\n        var _tok$6 = _menhir_env[/* _menhir_token */2];\n        var exit$6 = 0;\n        if (typeof _tok$6 === \"number\") {\n          switch (_tok$6) {\n            case 8 : \n                return _menhir_run19(_menhir_env, _menhir_stack$1, /* MenhirState18 */26);\n            case 1 : \n            case 4 : \n            case 5 : \n            case 7 : \n            case 10 : \n            case 11 : \n            case 13 : \n            case 17 : \n                return _menhir_reduce13(_menhir_env, _menhir_stack$1, /* MenhirState18 */26);\n            default:\n              exit$6 = 4;\n          }\n        } else {\n          switch (_tok$6.tag | 0) {\n            case 1 : \n            case 2 : \n                return _menhir_reduce13(_menhir_env, _menhir_stack$1, /* MenhirState18 */26);\n            default:\n              exit$6 = 4;\n          }\n        }\n        if (exit$6 === 4) {\n          if (_menhir_env[/* _menhir_error */3]) {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"parser.ml\",\n                    1213,\n                    12\n                  ]\n                ];\n          }\n          _menhir_env[/* _menhir_error */3] = /* true */1;\n          return _menhir_errorcase(_menhir_env, _menhir_stack$1, /* MenhirState18 */26);\n        }\n        break;\n    case 30 : \n        var _menhir_stack$6 = _menhir_stack[0];\n        var _menhir_s$3 = _menhir_stack[1];\n        var _menhir_stack$7 = /* tuple */[\n          _menhir_stack$6,\n          _menhir_s$3,\n          _v\n        ];\n        if (_menhir_s$3 !== 12) {\n          if (_menhir_s$3 !== 31) {\n            return _menhir_fail(/* () */0);\n          } else {\n            var _v$4 = /* Some */[_v];\n            return _menhir_goto_option_read_type_condition_(_menhir_env, _menhir_stack$6, _menhir_s$3, _v$4);\n          }\n        } else {\n          return _menhir_reduce32(_menhir_env, _menhir_stack$7, /* MenhirState61 */11);\n        }\n    case 0 : \n    case 4 : \n    case 7 : \n    case 8 : \n    case 10 : \n    case 11 : \n    case 12 : \n    case 13 : \n    case 14 : \n    case 15 : \n    case 16 : \n    case 18 : \n    case 19 : \n    case 20 : \n    case 26 : \n    case 28 : \n    case 29 : \n    case 31 : \n    case 32 : \n        return _menhir_fail(/* () */0);\n    \n  }\n  switch (exit) {\n    case 1 : \n        var _v$5 = /* `Enum */[\n          770676513,\n          _v\n        ];\n        return _menhir_goto_read_value(_menhir_env, _menhir_stack, _menhir_s, _v$5);\n    case 2 : \n        var _v$6 = /* NamedType */Block.__(0, [_v]);\n        return _menhir_goto_read_type(_menhir_env, _menhir_stack, _menhir_s, _v$6);\n    case 3 : \n        var _v$7 = /* `Enum */[\n          770676513,\n          _v\n        ];\n        return _menhir_goto_read_const_value(_menhir_env, _menhir_stack, _menhir_s, _v$7);\n    \n  }\n}\n\nfunction _menhir_discard(_menhir_env) {\n  var lexer = _menhir_env[/* _menhir_lexer */0];\n  var lexbuf = _menhir_env[/* _menhir_lexbuf */1];\n  var _tok = Curry._1(lexer, lexbuf);\n  return /* record */[\n          /* _menhir_lexer */lexer,\n          /* _menhir_lexbuf */lexbuf,\n          /* _menhir_token */_tok,\n          /* _menhir_error : false */0\n        ];\n}\n\nfunction _menhir_goto_read_const_value(_menhir_env, _menhir_stack, _menhir_s, _v) {\n  if (_menhir_s >= 4) {\n    return _menhir_fail(/* () */0);\n  } else {\n    switch (_menhir_s) {\n      case 0 : \n          return _menhir_fail(/* () */0);\n      case 1 : \n          var match = _menhir_stack[0];\n          var _v_000 = /* tuple */[\n            _menhir_stack[1],\n            _v\n          ];\n          var _v_001 = match[1];\n          var _v$1 = /* :: */[\n            _v_000,\n            _v_001\n          ];\n          return _menhir_goto_read_const_object(_menhir_env, match[0], _v$1);\n      case 2 : \n          var _v_001$1 = _menhir_stack[1];\n          var _v$2 = /* :: */[\n            _v,\n            _v_001$1\n          ];\n          return _menhir_goto_read_const_list(_menhir_env, _menhir_stack[0], _v$2);\n      case 3 : \n          var _v$3 = /* Some */[_v];\n          return _menhir_goto_option_read_const_value_(_menhir_env, _menhir_stack, _menhir_s, _v$3);\n      \n    }\n  }\n}\n\nfunction _menhir_run10(_menhir_env, _menhir_stack, _menhir_s, _v) {\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  return _menhir_goto_read_name(_menhir_env$1, _menhir_stack, _menhir_s, _v);\n}\n\nfunction _menhir_run11(_menhir_env, _menhir_stack, _menhir_s, _v) {\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  return _menhir_goto_read_name(_menhir_env$1, _menhir_stack, _menhir_s, _v);\n}\n\nfunction _menhir_errorcase(_, __menhir_stack, __menhir_s) {\n  while(true) {\n    var _menhir_s = __menhir_s;\n    var _menhir_stack = __menhir_stack;\n    var exit = 0;\n    switch (_menhir_s) {\n      case 2 : \n      case 8 : \n      case 17 : \n      case 23 : \n      case 25 : \n          exit = 2;\n          break;\n      case 0 : \n      case 3 : \n      case 4 : \n      case 5 : \n      case 6 : \n      case 7 : \n      case 10 : \n      case 11 : \n      case 12 : \n      case 14 : \n      case 15 : \n      case 16 : \n      case 18 : \n      case 19 : \n      case 20 : \n      case 21 : \n      case 24 : \n      case 26 : \n      case 27 : \n      case 28 : \n      case 29 : \n      case 30 : \n      case 31 : \n          exit = 1;\n          break;\n      case 1 : \n      case 9 : \n      case 13 : \n      case 22 : \n      case 32 : \n          throw $$Error;\n      \n    }\n    switch (exit) {\n      case 1 : \n          __menhir_s = _menhir_stack[1];\n          __menhir_stack = _menhir_stack[0];\n          continue ;\n          case 2 : \n          var match = _menhir_stack[0];\n          __menhir_s = match[1];\n          __menhir_stack = match[0];\n          continue ;\n          \n    }\n  };\n}\n\nfunction _menhir_run82(_menhir_env, _menhir_stack, _menhir_s) {\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  return _menhir_goto_read_const_value(_menhir_env$1, _menhir_stack, _menhir_s, /* Null */870828711);\n}\n\nfunction _menhir_run86(_menhir_env, _menhir_stack, _menhir_s) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _menhir_s\n  ];\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  return _menhir_goto_read_const_object(_menhir_env$1, _menhir_stack$1, /* [] */0);\n}\n\nfunction _menhir_run90(_menhir_env, _menhir_stack, _menhir_s, _v) {\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  var _v$1 = /* `Int */[\n    3654863,\n    _v\n  ];\n  return _menhir_goto_read_const_value(_menhir_env$1, _menhir_stack, _menhir_s, _v$1);\n}\n\nfunction _menhir_run92(_menhir_env, _menhir_stack, _menhir_s) {\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  return _menhir_goto_read_const_value(_menhir_env$1, _menhir_stack, _menhir_s, /* `Bool */[\n              737456202,\n              /* false */0\n            ]);\n}\n\nfunction _menhir_run91(_menhir_env, _menhir_stack, _menhir_s, _v) {\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  var _v$1 = /* `Float */[\n    365180284,\n    _v\n  ];\n  return _menhir_goto_read_const_value(_menhir_env$1, _menhir_stack, _menhir_s, _v$1);\n}\n\nfunction _menhir_run81(_menhir_env, _menhir_stack, _menhir_s, _v) {\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  var _v$1 = /* `String */[\n    -976970511,\n    _v\n  ];\n  return _menhir_goto_read_const_value(_menhir_env$1, _menhir_stack, _menhir_s, _v$1);\n}\n\nfunction _menhir_run83(_menhir_env, _menhir_stack, _menhir_s) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _menhir_s\n  ];\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  return _menhir_goto_read_const_list(_menhir_env$1, _menhir_stack$1, /* [] */0);\n}\n\nfunction _menhir_run80(_menhir_env, _menhir_stack, _menhir_s) {\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  return _menhir_goto_read_const_value(_menhir_env$1, _menhir_stack, _menhir_s, /* `Bool */[\n              737456202,\n              /* true */1\n            ]);\n}\n\nfunction _menhir_goto_read_value(_menhir_env, _menhir_stack, _menhir_s, _v) {\n  if (_menhir_s >= 22) {\n    switch (_menhir_s - 22 | 0) {\n      case 0 : \n          var match = _menhir_stack[0];\n          var _v_000 = /* tuple */[\n            _menhir_stack[1],\n            _v\n          ];\n          var _v_001 = match[1];\n          var _v$1 = /* :: */[\n            _v_000,\n            _v_001\n          ];\n          return _menhir_goto_read_object(_menhir_env, match[0], _v$1);\n      case 1 : \n          var _v_001$1 = _menhir_stack[1];\n          var _v$2 = /* :: */[\n            _v,\n            _v_001$1\n          ];\n          return _menhir_goto_read_list(_menhir_env, _menhir_stack[0], _v$2);\n      case 2 : \n          var match$1 = _menhir_stack[0];\n          var _v_000$1 = /* tuple */[\n            _menhir_stack[2],\n            _v\n          ];\n          var _v_001$2 = match$1[1];\n          var _v$3 = /* :: */[\n            _v_000$1,\n            _v_001$2\n          ];\n          return _menhir_goto_read_argument(_menhir_env, match$1[0], _v$3);\n      case 3 : \n      case 4 : \n      case 5 : \n      case 6 : \n      case 7 : \n      case 8 : \n      case 9 : \n      case 10 : \n          return _menhir_fail(/* () */0);\n      \n    }\n  } else {\n    return _menhir_fail(/* () */0);\n  }\n}\n\nfunction _menhir_goto_read_selection(_menhir_env, _menhir_stack, _menhir_s, _v) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _menhir_s,\n    _v\n  ];\n  if (_menhir_s !== 18) {\n    if (_menhir_s >= 32) {\n      if (_menhir_env[/* _menhir_error */3]) {\n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              [\n                \"parser.ml\",\n                1736,\n                10\n              ]\n            ];\n      }\n      var _tok = _menhir_env[/* _menhir_token */2];\n      var exit = 0;\n      if (typeof _tok === \"number\") {\n        switch (_tok) {\n          case 1 : \n              return _menhir_run8(_menhir_env, _menhir_stack$1);\n          case 4 : \n              var _menhir_env$1 = _menhir_discard(_menhir_env);\n              var _v_000 = /* Operation */Block.__(0, [/* record */[\n                    /* optype : Query */0,\n                    /* name : None */0,\n                    /* variable_definitions : [] */0,\n                    /* directives : [] */0,\n                    /* selection_set */_v\n                  ]]);\n              var _v_001 = _menhir_stack[1];\n              var _v$1 = /* :: */[\n                _v_000,\n                _v_001\n              ];\n              return _menhir_goto_read_definitions(_menhir_env$1, _menhir_stack[0], _v$1);\n          default:\n            exit = 1;\n        }\n      } else {\n        switch (_tok.tag | 0) {\n          case 1 : \n          case 2 : \n              return _menhir_reduce9(_menhir_env, _menhir_stack$1);\n          default:\n            exit = 1;\n        }\n      }\n      if (exit === 1) {\n        if (_menhir_env[/* _menhir_error */3]) {\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"parser.ml\",\n                  1767,\n                  12\n                ]\n              ];\n        }\n        _menhir_env[/* _menhir_error */3] = /* true */1;\n        return _menhir_errorcase(_menhir_env, _menhir_stack, _menhir_s);\n      }\n      \n    } else {\n      return _menhir_fail(/* () */0);\n    }\n  } else {\n    if (_menhir_env[/* _menhir_error */3]) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"parser.ml\",\n              1776,\n              10\n            ]\n          ];\n    }\n    var _tok$1 = _menhir_env[/* _menhir_token */2];\n    var exit$1 = 0;\n    if (typeof _tok$1 === \"number\") {\n      switch (_tok$1) {\n        case 1 : \n            return _menhir_run8(_menhir_env, _menhir_stack$1);\n        case 4 : \n            var _menhir_env$2 = _menhir_discard(_menhir_env);\n            return _menhir_goto_read_selection_set(_menhir_env$2, _menhir_stack[0], _menhir_stack[1], _v);\n        default:\n          exit$1 = 1;\n      }\n    } else {\n      switch (_tok$1.tag | 0) {\n        case 1 : \n        case 2 : \n            return _menhir_reduce9(_menhir_env, _menhir_stack$1);\n        default:\n          exit$1 = 1;\n      }\n    }\n    if (exit$1 === 1) {\n      if (_menhir_env[/* _menhir_error */3]) {\n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              [\n                \"parser.ml\",\n                1799,\n                12\n              ]\n            ];\n      }\n      _menhir_env[/* _menhir_error */3] = /* true */1;\n      return _menhir_errorcase(_menhir_env, _menhir_stack, _menhir_s);\n    }\n    \n  }\n}\n\nfunction _menhir_goto_read_type(__menhir_env, __menhir_stack, __menhir_s, __v) {\n  while(true) {\n    var _v = __v;\n    var _menhir_s = __menhir_s;\n    var _menhir_stack = __menhir_stack;\n    var _menhir_env = __menhir_env;\n    var _menhir_stack$1 = /* tuple */[\n      _menhir_stack,\n      _menhir_s,\n      _v\n    ];\n    if (_menhir_s !== 5) {\n      if (_menhir_s !== 6) {\n        return _menhir_fail(/* () */0);\n      } else {\n        if (_menhir_env[/* _menhir_error */3]) {\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"parser.ml\",\n                  759,\n                  10\n                ]\n              ];\n        }\n        var _tok = _menhir_env[/* _menhir_token */2];\n        if (typeof _tok === \"number\") {\n          switch (_tok) {\n            case 0 : \n                return _menhir_run80(_menhir_env, _menhir_stack$1, /* MenhirState79 */3);\n            case 2 : \n                return _menhir_goto_option_read_const_value_(_menhir_env, _menhir_stack$1, /* MenhirState79 */3, /* None */0);\n            case 6 : \n                return _menhir_run82(_menhir_env, _menhir_stack$1, /* MenhirState79 */3);\n            case 9 : \n                return _menhir_run83(_menhir_env, _menhir_stack$1, /* MenhirState79 */3);\n            case 10 : \n                return _menhir_run86(_menhir_env, _menhir_stack$1, /* MenhirState79 */3);\n            case 12 : \n                return _menhir_run92(_menhir_env, _menhir_stack$1, /* MenhirState79 */3);\n            case 16 : \n                return _menhir_run77(_menhir_env, _menhir_stack$1, /* MenhirState79 */3);\n            default:\n              if (_menhir_env[/* _menhir_error */3]) {\n                throw [\n                      Caml_builtin_exceptions.assert_failure,\n                      [\n                        \"parser.ml\",\n                        795,\n                        12\n                      ]\n                    ];\n              }\n              _menhir_env[/* _menhir_error */3] = /* true */1;\n              return _menhir_errorcase(_menhir_env, _menhir_stack$1, /* MenhirState79 */3);\n          }\n        } else {\n          switch (_tok.tag | 0) {\n            case 0 : \n                return _menhir_run81(_menhir_env, _menhir_stack$1, /* MenhirState79 */3, _tok[0]);\n            case 1 : \n                return _menhir_run10(_menhir_env, _menhir_stack$1, /* MenhirState79 */3, _tok[0]);\n            case 2 : \n                return _menhir_run11(_menhir_env, _menhir_stack$1, /* MenhirState79 */3, _tok[0]);\n            case 3 : \n                return _menhir_run90(_menhir_env, _menhir_stack$1, /* MenhirState79 */3, _tok[0]);\n            case 4 : \n                return _menhir_run91(_menhir_env, _menhir_stack$1, /* MenhirState79 */3, _tok[0]);\n            \n          }\n        }\n      }\n    } else {\n      if (_menhir_env[/* _menhir_error */3]) {\n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              [\n                \"parser.ml\",\n                730,\n                10\n              ]\n            ];\n      }\n      var _tok$1 = _menhir_env[/* _menhir_token */2];\n      var exit = 0;\n      if (typeof _tok$1 === \"number\") {\n        if (_tok$1 !== 3) {\n          if (_tok$1 !== 16) {\n            exit = 1;\n          } else {\n            return _menhir_run77(_menhir_env, _menhir_stack$1, /* MenhirState75 */4);\n          }\n        } else {\n          var _menhir_env$1 = _menhir_discard(_menhir_env);\n          var _v$1 = /* ListType */Block.__(1, [_v]);\n          __v = _v$1;\n          __menhir_s = _menhir_stack[1];\n          __menhir_stack = _menhir_stack[0];\n          __menhir_env = _menhir_env$1;\n          continue ;\n          \n        }\n      } else {\n        exit = 1;\n      }\n      if (exit === 1) {\n        if (_menhir_env[/* _menhir_error */3]) {\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"parser.ml\",\n                  753,\n                  12\n                ]\n              ];\n        }\n        _menhir_env[/* _menhir_error */3] = /* true */1;\n        return _menhir_errorcase(_menhir_env, _menhir_stack$1, /* MenhirState75 */4);\n      }\n      \n    }\n  };\n}\n\nfunction _menhir_run35(_menhir_env, _menhir_stack, _menhir_s, _v) {\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  var _v$1 = /* `Int */[\n    3654863,\n    _v\n  ];\n  return _menhir_goto_read_value(_menhir_env$1, _menhir_stack, _menhir_s, _v$1);\n}\n\nfunction _menhir_run26(_menhir_env, _menhir_stack, _menhir_s) {\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  return _menhir_goto_read_value(_menhir_env$1, _menhir_stack, _menhir_s, /* Null */870828711);\n}\n\nfunction _menhir_run25(_menhir_env, _menhir_stack, _menhir_s, _v) {\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  var _v$1 = /* `String */[\n    -976970511,\n    _v\n  ];\n  return _menhir_goto_read_value(_menhir_env$1, _menhir_stack, _menhir_s, _v$1);\n}\n\nfunction _menhir_run38(_menhir_env, _menhir_stack, _menhir_s) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _menhir_s\n  ];\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  var _tok = _menhir_env$1[/* _menhir_token */2];\n  var exit = 0;\n  if (typeof _tok === \"number\") {\n    exit = 1;\n  } else {\n    switch (_tok.tag | 0) {\n      case 1 : \n          return _menhir_run10(_menhir_env$1, _menhir_stack$1, /* MenhirState38 */21, _tok[0]);\n      case 2 : \n          return _menhir_run11(_menhir_env$1, _menhir_stack$1, /* MenhirState38 */21, _tok[0]);\n      default:\n        exit = 1;\n    }\n  }\n  if (exit === 1) {\n    if (_menhir_env$1[/* _menhir_error */3]) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"parser.ml\",\n              1043,\n              8\n            ]\n          ];\n    }\n    _menhir_env$1[/* _menhir_error */3] = /* true */1;\n    return _menhir_errorcase(_menhir_env$1, _menhir_stack$1, /* MenhirState38 */21);\n  }\n  \n}\n\nfunction _menhir_run30(_menhir_env, _menhir_stack, _menhir_s) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _menhir_s\n  ];\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  return _menhir_goto_read_object(_menhir_env$1, _menhir_stack$1, /* [] */0);\n}\n\nfunction _menhir_run24(_menhir_env, _menhir_stack, _menhir_s) {\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  return _menhir_goto_read_value(_menhir_env$1, _menhir_stack, _menhir_s, /* `Bool */[\n              737456202,\n              /* true */1\n            ]);\n}\n\nfunction _menhir_run37(_menhir_env, _menhir_stack, _menhir_s) {\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  return _menhir_goto_read_value(_menhir_env$1, _menhir_stack, _menhir_s, /* `Bool */[\n              737456202,\n              /* false */0\n            ]);\n}\n\nfunction _menhir_run36(_menhir_env, _menhir_stack, _menhir_s, _v) {\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  var _v$1 = /* `Float */[\n    365180284,\n    _v\n  ];\n  return _menhir_goto_read_value(_menhir_env$1, _menhir_stack, _menhir_s, _v$1);\n}\n\nfunction _menhir_run27(_menhir_env, _menhir_stack, _menhir_s) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _menhir_s\n  ];\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  return _menhir_goto_read_list(_menhir_env$1, _menhir_stack$1, /* [] */0);\n}\n\nfunction _menhir_goto_read_variable_definitions(_menhir_env, _menhir_stack, _v) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _v\n  ];\n  if (_menhir_env[/* _menhir_error */3]) {\n    throw [\n          Caml_builtin_exceptions.assert_failure,\n          [\n            \"parser.ml\",\n            1127,\n            6\n          ]\n        ];\n  }\n  var _tok = _menhir_env[/* _menhir_token */2];\n  var exit = 0;\n  if (typeof _tok === \"number\") {\n    switch (_tok) {\n      case 8 : \n          var _menhir_stack$2 = /* tuple */[\n            _menhir_stack$1,\n            /* MenhirState68 */8\n          ];\n          var _menhir_env$1 = _menhir_discard(_menhir_env);\n          var _tok$1 = _menhir_env$1[/* _menhir_token */2];\n          var exit$1 = 0;\n          if (typeof _tok$1 === \"number\" && _tok$1 === 14) {\n            return _menhir_run38(_menhir_env$1, _menhir_stack$2, /* MenhirState69 */7);\n          } else {\n            exit$1 = 2;\n          }\n          if (exit$1 === 2) {\n            if (_menhir_env$1[/* _menhir_error */3]) {\n              throw [\n                    Caml_builtin_exceptions.assert_failure,\n                    [\n                      \"parser.ml\",\n                      1141,\n                      12\n                    ]\n                  ];\n            }\n            _menhir_env$1[/* _menhir_error */3] = /* true */1;\n            return _menhir_errorcase(_menhir_env$1, _menhir_stack$2, /* MenhirState69 */7);\n          }\n          break;\n      case 0 : \n      case 1 : \n      case 2 : \n      case 3 : \n      case 4 : \n      case 6 : \n      case 9 : \n      case 12 : \n      case 14 : \n      case 15 : \n      case 16 : \n          exit = 1;\n          break;\n      case 5 : \n      case 7 : \n      case 10 : \n      case 11 : \n      case 13 : \n      case 17 : \n          return _menhir_reduce32(_menhir_env, _menhir_stack$1, /* MenhirState68 */8);\n      \n    }\n  } else {\n    exit = 1;\n  }\n  if (exit === 1) {\n    if (_menhir_env[/* _menhir_error */3]) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"parser.ml\",\n              1147,\n              8\n            ]\n          ];\n    }\n    _menhir_env[/* _menhir_error */3] = /* true */1;\n    return _menhir_errorcase(_menhir_env, _menhir_stack$1, /* MenhirState68 */8);\n  }\n  \n}\n\nfunction _menhir_goto_read_arguments(_menhir_env, _menhir_stack, _menhir_s, _v) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _menhir_s,\n    _v\n  ];\n  if (_menhir_s !== 16) {\n    if (_menhir_s !== 26) {\n      return _menhir_fail(/* () */0);\n    } else {\n      var match = _menhir_stack[0][0];\n      var _v_000 = /* record */[\n        /* name */_menhir_stack[2],\n        /* arguments */_v\n      ];\n      var _v_001 = match[2];\n      var _v$1 = /* :: */[\n        _v_000,\n        _v_001\n      ];\n      return _menhir_goto_read_directives(_menhir_env, match[0], match[1], _v$1);\n    }\n  } else {\n    return _menhir_reduce32(_menhir_env, _menhir_stack$1, /* MenhirState55 */15);\n  }\n}\n\nfunction _menhir_goto_read_definitions(_menhir_env, _menhir_stack, _v) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _v\n  ];\n  if (_menhir_env[/* _menhir_error */3]) {\n    throw [\n          Caml_builtin_exceptions.assert_failure,\n          [\n            \"parser.ml\",\n            2107,\n            6\n          ]\n        ];\n  }\n  var _tok = _menhir_env[/* _menhir_token */2];\n  var exit = 0;\n  if (typeof _tok === \"number\") {\n    switch (_tok) {\n      case 5 : \n          var _menhir_env$1 = _menhir_discard(_menhir_env);\n          return _menhir_goto_read_optype(_menhir_env$1, _menhir_stack$1, /* Query */0);\n      case 7 : \n          var _menhir_env$2 = _menhir_discard(_menhir_env);\n          return _menhir_goto_read_optype(_menhir_env$2, _menhir_stack$1, /* Mutation */1);\n      case 10 : \n          var _menhir_env$3 = _menhir_discard(_menhir_env);\n          return _menhir_reduce44(_menhir_env$3, _menhir_stack$1, /* MenhirState6 */32);\n      case 11 : \n          var _menhir_env$4 = _menhir_discard(_menhir_env);\n          var _tok$1 = _menhir_env$4[/* _menhir_token */2];\n          var exit$1 = 0;\n          if (typeof _tok$1 === \"number\" || _tok$1.tag !== 2) {\n            exit$1 = 2;\n          } else {\n            return _menhir_run13(_menhir_env$4, _menhir_stack$1, /* MenhirState59 */13, _tok$1[0]);\n          }\n          if (exit$1 === 2) {\n            if (_menhir_env$4[/* _menhir_error */3]) {\n              throw [\n                    Caml_builtin_exceptions.assert_failure,\n                    [\n                      \"parser.ml\",\n                      2150,\n                      12\n                    ]\n                  ];\n            }\n            _menhir_env$4[/* _menhir_error */3] = /* true */1;\n            return _menhir_errorcase(_menhir_env$4, _menhir_stack$1, /* MenhirState59 */13);\n          }\n          break;\n      case 13 : \n          var _v$1 = /* Some */[_v];\n          return _menhir_goto_prog(_menhir_env, _menhir_stack, _v$1);\n      case 0 : \n      case 1 : \n      case 2 : \n      case 3 : \n      case 4 : \n      case 6 : \n      case 8 : \n      case 9 : \n      case 12 : \n      case 14 : \n      case 15 : \n      case 16 : \n      case 17 : \n          exit = 1;\n          break;\n      \n    }\n  } else {\n    exit = 1;\n  }\n  if (exit === 1) {\n    if (_menhir_env[/* _menhir_error */3]) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"parser.ml\",\n              2185,\n              8\n            ]\n          ];\n    }\n    _menhir_env[/* _menhir_error */3] = /* true */1;\n    throw $$Error;\n  }\n  \n}\n\nfunction _menhir_run49(_menhir_env, _menhir_stack) {\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  return _menhir_reduce44(_menhir_env$1, _menhir_stack, /* MenhirState49 */18);\n}\n\nfunction _menhir_reduce44(_menhir_env, _menhir_stack, _menhir_s) {\n  return _menhir_goto_read_selection(_menhir_env, _menhir_stack, _menhir_s, /* [] */0);\n}\n\nfunction _menhir_run13(_menhir_env, _menhir_stack, _menhir_s, _v) {\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _menhir_s,\n    _v\n  ];\n  if (_menhir_s !== 13) {\n    if (_menhir_s !== 31) {\n      return _menhir_fail(/* () */0);\n    } else {\n      return _menhir_reduce32(_menhir_env$1, _menhir_stack$1, /* MenhirState15 */29);\n    }\n  } else {\n    if (_menhir_env$1[/* _menhir_error */3]) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"parser.ml\",\n              2090,\n              10\n            ]\n          ];\n    }\n    var _tok = _menhir_env$1[/* _menhir_token */2];\n    var exit = 0;\n    if (typeof _tok === \"number\" || _tok.tag !== 1) {\n      exit = 1;\n    } else {\n      return _menhir_run9(_menhir_env$1, _menhir_stack$1, /* MenhirState60 */12, _tok[0]);\n    }\n    if (exit === 1) {\n      if (_menhir_env$1[/* _menhir_error */3]) {\n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              [\n                \"parser.ml\",\n                2096,\n                12\n              ]\n            ];\n      }\n      _menhir_env$1[/* _menhir_error */3] = /* true */1;\n      return _menhir_errorcase(_menhir_env$1, _menhir_stack$1, /* MenhirState60 */12);\n    }\n    \n  }\n}\n\nfunction _menhir_goto_prog(_, _$1, _v) {\n  return _v;\n}\n\nfunction _menhir_goto_read_optype(_menhir_env, _menhir_stack, _v) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _v\n  ];\n  if (_menhir_env[/* _menhir_error */3]) {\n    throw [\n          Caml_builtin_exceptions.assert_failure,\n          [\n            \"parser.ml\",\n            1846,\n            6\n          ]\n        ];\n  }\n  var _tok = _menhir_env[/* _menhir_token */2];\n  var exit = 0;\n  if (typeof _tok === \"number\") {\n    switch (_tok) {\n      case 5 : \n      case 7 : \n      case 8 : \n      case 10 : \n      case 11 : \n      case 13 : \n      case 17 : \n          exit = 2;\n          break;\n      default:\n        exit = 1;\n    }\n  } else {\n    switch (_tok.tag | 0) {\n      case 1 : \n          return _menhir_run10(_menhir_env, _menhir_stack$1, /* MenhirState65 */9, _tok[0]);\n      case 2 : \n          return _menhir_run11(_menhir_env, _menhir_stack$1, /* MenhirState65 */9, _tok[0]);\n      default:\n        exit = 1;\n    }\n  }\n  switch (exit) {\n    case 1 : \n        if (_menhir_env[/* _menhir_error */3]) {\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"parser.ml\",\n                  1864,\n                  8\n                ]\n              ];\n        }\n        _menhir_env[/* _menhir_error */3] = /* true */1;\n        return _menhir_errorcase(_menhir_env, _menhir_stack$1, /* MenhirState65 */9);\n    case 2 : \n        return _menhir_goto_option_read_name_(_menhir_env, _menhir_stack$1, /* MenhirState65 */9, /* None */0);\n    \n  }\n}\n\nfunction _menhir_goto_read_directives(_menhir_env, _menhir_stack, _menhir_s, _v) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _menhir_s,\n    _v\n  ];\n  switch (_menhir_s) {\n    case 8 : \n        if (_menhir_env[/* _menhir_error */3]) {\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"parser.ml\",\n                  1649,\n                  10\n                ]\n              ];\n        }\n        var _tok = _menhir_env[/* _menhir_token */2];\n        var exit = 0;\n        if (typeof _tok === \"number\") {\n          switch (_tok) {\n            case 5 : \n            case 7 : \n            case 10 : \n            case 11 : \n            case 13 : \n                return _menhir_reduce48(_menhir_env, _menhir_stack$1, /* MenhirState99 */0);\n            case 0 : \n            case 1 : \n            case 2 : \n            case 3 : \n            case 4 : \n            case 6 : \n            case 8 : \n            case 9 : \n            case 12 : \n            case 14 : \n            case 15 : \n            case 16 : \n                exit = 1;\n                break;\n            case 17 : \n                return _menhir_run17(_menhir_env, _menhir_stack$1, /* MenhirState99 */0);\n            \n          }\n        } else {\n          exit = 1;\n        }\n        if (exit === 1) {\n          if (_menhir_env[/* _menhir_error */3]) {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"parser.ml\",\n                    1657,\n                    12\n                  ]\n                ];\n          }\n          _menhir_env[/* _menhir_error */3] = /* true */1;\n          return _menhir_errorcase(_menhir_env, _menhir_stack$1, /* MenhirState99 */0);\n        }\n        break;\n    case 11 : \n        if (_menhir_env[/* _menhir_error */3]) {\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"parser.ml\",\n                  1635,\n                  10\n                ]\n              ];\n        }\n        var _tok$1 = _menhir_env[/* _menhir_token */2];\n        var exit$1 = 0;\n        if (typeof _tok$1 === \"number\") {\n          switch (_tok$1) {\n            case 5 : \n            case 7 : \n            case 10 : \n            case 11 : \n            case 13 : \n                return _menhir_reduce48(_menhir_env, _menhir_stack$1, /* MenhirState62 */10);\n            case 0 : \n            case 1 : \n            case 2 : \n            case 3 : \n            case 4 : \n            case 6 : \n            case 8 : \n            case 9 : \n            case 12 : \n            case 14 : \n            case 15 : \n            case 16 : \n                exit$1 = 1;\n                break;\n            case 17 : \n                return _menhir_run17(_menhir_env, _menhir_stack$1, /* MenhirState62 */10);\n            \n          }\n        } else {\n          exit$1 = 1;\n        }\n        if (exit$1 === 1) {\n          if (_menhir_env[/* _menhir_error */3]) {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"parser.ml\",\n                    1643,\n                    12\n                  ]\n                ];\n          }\n          _menhir_env[/* _menhir_error */3] = /* true */1;\n          return _menhir_errorcase(_menhir_env, _menhir_stack$1, /* MenhirState62 */10);\n        }\n        break;\n    case 15 : \n        if (_menhir_env[/* _menhir_error */3]) {\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"parser.ml\",\n                  1621,\n                  10\n                ]\n              ];\n        }\n        var _tok$2 = _menhir_env[/* _menhir_token */2];\n        var exit$2 = 0;\n        if (typeof _tok$2 === \"number\") {\n          switch (_tok$2) {\n            case 1 : \n            case 4 : \n            case 10 : \n                return _menhir_reduce48(_menhir_env, _menhir_stack$1, /* MenhirState56 */14);\n            case 17 : \n                return _menhir_run17(_menhir_env, _menhir_stack$1, /* MenhirState56 */14);\n            default:\n              exit$2 = 1;\n          }\n        } else {\n          switch (_tok$2.tag | 0) {\n            case 1 : \n            case 2 : \n                return _menhir_reduce48(_menhir_env, _menhir_stack$1, /* MenhirState56 */14);\n            default:\n              exit$2 = 1;\n          }\n        }\n        if (exit$2 === 1) {\n          if (_menhir_env[/* _menhir_error */3]) {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"parser.ml\",\n                    1629,\n                    12\n                  ]\n                ];\n          }\n          _menhir_env[/* _menhir_error */3] = /* true */1;\n          return _menhir_errorcase(_menhir_env, _menhir_stack$1, /* MenhirState56 */14);\n        }\n        break;\n    case 20 : \n        if (_menhir_env[/* _menhir_error */3]) {\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"parser.ml\",\n                  1607,\n                  10\n                ]\n              ];\n        }\n        var _tok$3 = _menhir_env[/* _menhir_token */2];\n        var exit$3 = 0;\n        if (typeof _tok$3 === \"number\") {\n          switch (_tok$3) {\n            case 1 : \n            case 4 : \n            case 10 : \n                return _menhir_reduce48(_menhir_env, _menhir_stack$1, /* MenhirState47 */19);\n            case 17 : \n                return _menhir_run17(_menhir_env, _menhir_stack$1, /* MenhirState47 */19);\n            default:\n              exit$3 = 1;\n          }\n        } else {\n          switch (_tok$3.tag | 0) {\n            case 1 : \n            case 2 : \n                return _menhir_reduce48(_menhir_env, _menhir_stack$1, /* MenhirState47 */19);\n            default:\n              exit$3 = 1;\n          }\n        }\n        if (exit$3 === 1) {\n          if (_menhir_env[/* _menhir_error */3]) {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"parser.ml\",\n                    1615,\n                    12\n                  ]\n                ];\n          }\n          _menhir_env[/* _menhir_error */3] = /* true */1;\n          return _menhir_errorcase(_menhir_env, _menhir_stack$1, /* MenhirState47 */19);\n        }\n        break;\n    case 29 : \n        if (_menhir_env[/* _menhir_error */3]) {\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"parser.ml\",\n                  1580,\n                  10\n                ]\n              ];\n        }\n        var _tok$4 = _menhir_env[/* _menhir_token */2];\n        var exit$4 = 0;\n        if (typeof _tok$4 === \"number\") {\n          switch (_tok$4) {\n            case 1 : \n            case 4 : \n                exit$4 = 2;\n                break;\n            case 17 : \n                return _menhir_run17(_menhir_env, _menhir_stack$1, /* MenhirState16 */28);\n            default:\n              exit$4 = 1;\n          }\n        } else {\n          switch (_tok$4.tag | 0) {\n            case 1 : \n            case 2 : \n                exit$4 = 2;\n                break;\n            default:\n              exit$4 = 1;\n          }\n        }\n        switch (exit$4) {\n          case 1 : \n              if (_menhir_env[/* _menhir_error */3]) {\n                throw [\n                      Caml_builtin_exceptions.assert_failure,\n                      [\n                        \"parser.ml\",\n                        1601,\n                        12\n                      ]\n                    ];\n              }\n              _menhir_env[/* _menhir_error */3] = /* true */1;\n              return _menhir_errorcase(_menhir_env, _menhir_stack$1, /* MenhirState16 */28);\n          case 2 : \n              var match = _menhir_stack[0];\n              var _v_000 = /* FragmentSpread */Block.__(1, [/* record */[\n                    /* name */_menhir_stack[2],\n                    /* directives */_v\n                  ]]);\n              var _v_001 = match[2];\n              var _v$1 = /* :: */[\n                _v_000,\n                _v_001\n              ];\n              return _menhir_goto_read_selection(_menhir_env, match[0], match[1], _v$1);\n          \n        }\n        break;\n    case 0 : \n    case 1 : \n    case 2 : \n    case 3 : \n    case 4 : \n    case 5 : \n    case 6 : \n    case 7 : \n    case 9 : \n    case 10 : \n    case 12 : \n    case 13 : \n    case 14 : \n    case 16 : \n    case 17 : \n    case 18 : \n    case 19 : \n    case 21 : \n    case 22 : \n    case 23 : \n    case 24 : \n    case 25 : \n    case 26 : \n    case 27 : \n    case 28 : \n    case 30 : \n    case 31 : \n    case 32 : \n        return _menhir_fail(/* () */0);\n    \n  }\n}\n\nfunction _menhir_reduce32(_menhir_env, _menhir_stack, _menhir_s) {\n  return _menhir_goto_read_directives(_menhir_env, _menhir_stack, _menhir_s, /* [] */0);\n}\n\nfunction _menhir_goto_read_selection_set(_menhir_env, _menhir_stack, _menhir_s, _v) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _menhir_s,\n    _v\n  ];\n  if (_menhir_s >= 10) {\n    if (_menhir_s >= 20) {\n      return _menhir_fail(/* () */0);\n    } else {\n      switch (_menhir_s - 10 | 0) {\n        case 0 : \n            if (_menhir_env[/* _menhir_error */3]) {\n              throw [\n                    Caml_builtin_exceptions.assert_failure,\n                    [\n                      \"parser.ml\",\n                      1474,\n                      10\n                    ]\n                  ];\n            }\n            var _tok = _menhir_env[/* _menhir_token */2];\n            var exit = 0;\n            if (typeof _tok === \"number\") {\n              switch (_tok) {\n                case 10 : \n                    return _menhir_run49(_menhir_env, _menhir_stack$1);\n                case 5 : \n                case 7 : \n                case 11 : \n                case 13 : \n                    exit = 2;\n                    break;\n                case 0 : \n                case 1 : \n                case 2 : \n                case 3 : \n                case 4 : \n                case 6 : \n                case 8 : \n                case 9 : \n                case 12 : \n                case 14 : \n                case 15 : \n                case 16 : \n                case 17 : \n                    exit = 1;\n                    break;\n                \n              }\n            } else {\n              exit = 1;\n            }\n            switch (exit) {\n              case 1 : \n                  if (_menhir_env[/* _menhir_error */3]) {\n                    throw [\n                          Caml_builtin_exceptions.assert_failure,\n                          [\n                            \"parser.ml\",\n                            1498,\n                            12\n                          ]\n                        ];\n                  }\n                  _menhir_env[/* _menhir_error */3] = /* true */1;\n                  return _menhir_errorcase(_menhir_env, _menhir_stack, _menhir_s);\n              case 2 : \n                  var match = _menhir_stack[0];\n                  var match$1 = match[0];\n                  var match$2 = match$1[0];\n                  var _v_000 = /* Fragment */Block.__(1, [/* record */[\n                        /* name */match$1[2],\n                        /* type_condition */match[2],\n                        /* directives */_menhir_stack[2],\n                        /* selection_set */_v\n                      ]]);\n                  var _v_001 = match$2[1];\n                  var _v$1 = /* :: */[\n                    _v_000,\n                    _v_001\n                  ];\n                  return _menhir_goto_read_definitions(_menhir_env, match$2[0], _v$1);\n              \n            }\n            break;\n        case 4 : \n            if (_menhir_env[/* _menhir_error */3]) {\n              throw [\n                    Caml_builtin_exceptions.assert_failure,\n                    [\n                      \"parser.ml\",\n                      1442,\n                      10\n                    ]\n                  ];\n            }\n            var _tok$1 = _menhir_env[/* _menhir_token */2];\n            var exit$1 = 0;\n            if (typeof _tok$1 === \"number\") {\n              switch (_tok$1) {\n                case 1 : \n                case 4 : \n                    exit$1 = 2;\n                    break;\n                case 10 : \n                    return _menhir_run49(_menhir_env, _menhir_stack$1);\n                default:\n                  exit$1 = 1;\n              }\n            } else {\n              switch (_tok$1.tag | 0) {\n                case 1 : \n                case 2 : \n                    exit$1 = 2;\n                    break;\n                default:\n                  exit$1 = 1;\n              }\n            }\n            switch (exit$1) {\n              case 1 : \n                  if (_menhir_env[/* _menhir_error */3]) {\n                    throw [\n                          Caml_builtin_exceptions.assert_failure,\n                          [\n                            \"parser.ml\",\n                            1465,\n                            12\n                          ]\n                        ];\n                  }\n                  _menhir_env[/* _menhir_error */3] = /* true */1;\n                  return _menhir_errorcase(_menhir_env, _menhir_stack, _menhir_s);\n              case 2 : \n                  var match$3 = _menhir_stack[0];\n                  var match$4 = match$3[0];\n                  var match$5 = match$4[0];\n                  var match$6 = match$5[0];\n                  var _v_000$1 = /* Field */Block.__(0, [/* record */[\n                        /* alias */match$5[1],\n                        /* name */match$4[2],\n                        /* arguments */match$3[2],\n                        /* directives */_menhir_stack[2],\n                        /* selection_set */_v\n                      ]]);\n                  var _v_001$1 = match$6[2];\n                  var _v$2 = /* :: */[\n                    _v_000$1,\n                    _v_001$1\n                  ];\n                  return _menhir_goto_read_selection(_menhir_env, match$6[0], match$6[1], _v$2);\n              \n            }\n            break;\n        case 1 : \n        case 2 : \n        case 3 : \n        case 5 : \n        case 6 : \n        case 7 : \n        case 8 : \n            return _menhir_fail(/* () */0);\n        case 9 : \n            if (_menhir_env[/* _menhir_error */3]) {\n              throw [\n                    Caml_builtin_exceptions.assert_failure,\n                    [\n                      \"parser.ml\",\n                      1410,\n                      10\n                    ]\n                  ];\n            }\n            var _tok$2 = _menhir_env[/* _menhir_token */2];\n            var exit$2 = 0;\n            if (typeof _tok$2 === \"number\") {\n              switch (_tok$2) {\n                case 1 : \n                case 4 : \n                    exit$2 = 2;\n                    break;\n                case 10 : \n                    return _menhir_run49(_menhir_env, _menhir_stack$1);\n                default:\n                  exit$2 = 1;\n              }\n            } else {\n              switch (_tok$2.tag | 0) {\n                case 1 : \n                case 2 : \n                    exit$2 = 2;\n                    break;\n                default:\n                  exit$2 = 1;\n              }\n            }\n            switch (exit$2) {\n              case 1 : \n                  if (_menhir_env[/* _menhir_error */3]) {\n                    throw [\n                          Caml_builtin_exceptions.assert_failure,\n                          [\n                            \"parser.ml\",\n                            1433,\n                            12\n                          ]\n                        ];\n                  }\n                  _menhir_env[/* _menhir_error */3] = /* true */1;\n                  return _menhir_errorcase(_menhir_env, _menhir_stack, _menhir_s);\n              case 2 : \n                  var match$7 = _menhir_stack[0];\n                  var match$8 = match$7[0];\n                  var _v_000$2 = /* InlineFragment */Block.__(2, [/* record */[\n                        /* type_condition */match$7[2],\n                        /* directives */_menhir_stack[2],\n                        /* selection_set */_v\n                      ]]);\n                  var _v_001$2 = match$8[2];\n                  var _v$3 = /* :: */[\n                    _v_000$2,\n                    _v_001$2\n                  ];\n                  return _menhir_goto_read_selection(_menhir_env, match$8[0], match$8[1], _v$3);\n              \n            }\n            break;\n        \n      }\n    }\n  } else if (_menhir_s !== 0) {\n    return _menhir_fail(/* () */0);\n  } else {\n    if (_menhir_env[/* _menhir_error */3]) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"parser.ml\",\n              1507,\n              10\n            ]\n          ];\n    }\n    var _tok$3 = _menhir_env[/* _menhir_token */2];\n    var exit$3 = 0;\n    if (typeof _tok$3 === \"number\") {\n      switch (_tok$3) {\n        case 10 : \n            return _menhir_run49(_menhir_env, _menhir_stack$1);\n        case 5 : \n        case 7 : \n        case 11 : \n        case 13 : \n            exit$3 = 2;\n            break;\n        case 0 : \n        case 1 : \n        case 2 : \n        case 3 : \n        case 4 : \n        case 6 : \n        case 8 : \n        case 9 : \n        case 12 : \n        case 14 : \n        case 15 : \n        case 16 : \n        case 17 : \n            exit$3 = 1;\n            break;\n        \n      }\n    } else {\n      exit$3 = 1;\n    }\n    switch (exit$3) {\n      case 1 : \n          if (_menhir_env[/* _menhir_error */3]) {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"parser.ml\",\n                    1531,\n                    12\n                  ]\n                ];\n          }\n          _menhir_env[/* _menhir_error */3] = /* true */1;\n          return _menhir_errorcase(_menhir_env, _menhir_stack, _menhir_s);\n      case 2 : \n          var match$9 = _menhir_stack[0];\n          var match$10 = match$9[0];\n          var match$11 = match$10[0];\n          var match$12 = match$11[0];\n          var _v_000$3 = /* Operation */Block.__(0, [/* record */[\n                /* optype */match$11[1],\n                /* name */match$10[2],\n                /* variable_definitions */match$9[1],\n                /* directives */_menhir_stack[2],\n                /* selection_set */_v\n              ]]);\n          var _v_001$3 = match$12[1];\n          var _v$4 = /* :: */[\n            _v_000$3,\n            _v_001$3\n          ];\n          return _menhir_goto_read_definitions(_menhir_env, match$12[0], _v$4);\n      \n    }\n  }\n}\n\nfunction _menhir_reduce9(_menhir_env, _menhir_stack) {\n  return _menhir_goto_read_alias(_menhir_env, _menhir_stack, /* None */0);\n}\n\nfunction _menhir_run8(_menhir_env, _menhir_stack) {\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  var _tok = _menhir_env$1[/* _menhir_token */2];\n  var exit = 0;\n  if (typeof _tok === \"number\") {\n    switch (_tok) {\n      case 1 : \n      case 4 : \n      case 10 : \n      case 17 : \n          exit = 2;\n          break;\n      default:\n        exit = 1;\n    }\n  } else {\n    switch (_tok.tag | 0) {\n      case 1 : \n          return _menhir_run9(_menhir_env$1, _menhir_stack, /* MenhirState8 */31, _tok[0]);\n      case 2 : \n          return _menhir_run13(_menhir_env$1, _menhir_stack, /* MenhirState8 */31, _tok[0]);\n      default:\n        exit = 1;\n    }\n  }\n  switch (exit) {\n    case 1 : \n        if (_menhir_env$1[/* _menhir_error */3]) {\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"parser.ml\",\n                  1569,\n                  8\n                ]\n              ];\n        }\n        _menhir_env$1[/* _menhir_error */3] = /* true */1;\n        return _menhir_errorcase(_menhir_env$1, _menhir_stack, /* MenhirState8 */31);\n    case 2 : \n        return _menhir_goto_option_read_type_condition_(_menhir_env$1, _menhir_stack, /* MenhirState8 */31, /* None */0);\n    \n  }\n}\n\nfunction _menhir_goto_option_read_name_(_menhir_env, _menhir_stack, _menhir_s, _v) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _menhir_s,\n    _v\n  ];\n  return _menhir_goto_read_variable_definitions(_menhir_env, _menhir_stack$1, /* [] */0);\n}\n\nfunction _menhir_run9(_menhir_env, _menhir_stack, _menhir_s, _v) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _menhir_s,\n    _v\n  ];\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  var _tok = _menhir_env$1[/* _menhir_token */2];\n  var exit = 0;\n  if (typeof _tok === \"number\") {\n    exit = 1;\n  } else {\n    switch (_tok.tag | 0) {\n      case 1 : \n          return _menhir_run10(_menhir_env$1, _menhir_stack$1, /* MenhirState9 */30, _tok[0]);\n      case 2 : \n          return _menhir_run11(_menhir_env$1, _menhir_stack$1, /* MenhirState9 */30, _tok[0]);\n      default:\n        exit = 1;\n    }\n  }\n  if (exit === 1) {\n    if (_menhir_env$1[/* _menhir_error */3]) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"parser.ml\",\n              1828,\n              8\n            ]\n          ];\n    }\n    _menhir_env$1[/* _menhir_error */3] = /* true */1;\n    return _menhir_errorcase(_menhir_env$1, _menhir_stack$1, /* MenhirState9 */30);\n  }\n  \n}\n\nfunction _menhir_goto_option_read_type_condition_(_menhir_env, _menhir_stack, _menhir_s, _v) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _menhir_s,\n    _v\n  ];\n  return _menhir_reduce32(_menhir_env, _menhir_stack$1, /* MenhirState46 */20);\n}\n\nfunction _menhir_goto_read_alias(_menhir_env, _menhir_stack, _v) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _v\n  ];\n  if (_menhir_env[/* _menhir_error */3]) {\n    throw [\n          Caml_builtin_exceptions.assert_failure,\n          [\n            \"parser.ml\",\n            1079,\n            6\n          ]\n        ];\n  }\n  var _tok = _menhir_env[/* _menhir_token */2];\n  var exit = 0;\n  if (typeof _tok === \"number\") {\n    exit = 1;\n  } else {\n    switch (_tok.tag | 0) {\n      case 1 : \n          return _menhir_run10(_menhir_env, _menhir_stack$1, /* MenhirState52 */17, _tok[0]);\n      case 2 : \n          return _menhir_run11(_menhir_env, _menhir_stack$1, /* MenhirState52 */17, _tok[0]);\n      default:\n        exit = 1;\n    }\n  }\n  if (exit === 1) {\n    if (_menhir_env[/* _menhir_error */3]) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"parser.ml\",\n              1087,\n              8\n            ]\n          ];\n    }\n    _menhir_env[/* _menhir_error */3] = /* true */1;\n    return _menhir_errorcase(_menhir_env, _menhir_stack$1, /* MenhirState52 */17);\n  }\n  \n}\n\nfunction _menhir_goto_read_const_object(_menhir_env, _menhir_stack, _v) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _v\n  ];\n  if (_menhir_env[/* _menhir_error */3]) {\n    throw [\n          Caml_builtin_exceptions.assert_failure,\n          [\n            \"parser.ml\",\n            161,\n            6\n          ]\n        ];\n  }\n  var _tok = _menhir_env[/* _menhir_token */2];\n  var exit = 0;\n  if (typeof _tok === \"number\") {\n    if (_tok === 4) {\n      var _menhir_env$1 = _menhir_discard(_menhir_env);\n      var _v$1 = /* `Assoc */[\n        963043957,\n        _v\n      ];\n      return _menhir_goto_read_const_value(_menhir_env$1, _menhir_stack[0], _menhir_stack[1], _v$1);\n    } else {\n      exit = 1;\n    }\n  } else if (_tok.tag) {\n    exit = 1;\n  } else {\n    var _menhir_stack_001 = _tok[0];\n    var _menhir_stack$2 = /* tuple */[\n      _menhir_stack$1,\n      _menhir_stack_001\n    ];\n    var _menhir_env$2 = _menhir_discard(_menhir_env);\n    var _tok$1 = _menhir_env$2[/* _menhir_token */2];\n    var exit$1 = 0;\n    if (typeof _tok$1 === \"number\" && _tok$1 === 15) {\n      var _menhir_env$3 = _menhir_discard(_menhir_env$2);\n      var _tok$2 = _menhir_env$3[/* _menhir_token */2];\n      if (typeof _tok$2 === \"number\") {\n        switch (_tok$2) {\n          case 0 : \n              return _menhir_run80(_menhir_env$3, _menhir_stack$2, /* MenhirState89 */1);\n          case 6 : \n              return _menhir_run82(_menhir_env$3, _menhir_stack$2, /* MenhirState89 */1);\n          case 9 : \n              return _menhir_run83(_menhir_env$3, _menhir_stack$2, /* MenhirState89 */1);\n          case 10 : \n              return _menhir_run86(_menhir_env$3, _menhir_stack$2, /* MenhirState89 */1);\n          case 12 : \n              return _menhir_run92(_menhir_env$3, _menhir_stack$2, /* MenhirState89 */1);\n          default:\n            if (_menhir_env$3[/* _menhir_error */3]) {\n              throw [\n                    Caml_builtin_exceptions.assert_failure,\n                    [\n                      \"parser.ml\",\n                      222,\n                      16\n                    ]\n                  ];\n            }\n            _menhir_env$3[/* _menhir_error */3] = /* true */1;\n            return _menhir_errorcase(_menhir_env$3, _menhir_stack$2, /* MenhirState89 */1);\n        }\n      } else {\n        switch (_tok$2.tag | 0) {\n          case 0 : \n              return _menhir_run81(_menhir_env$3, _menhir_stack$2, /* MenhirState89 */1, _tok$2[0]);\n          case 1 : \n              return _menhir_run10(_menhir_env$3, _menhir_stack$2, /* MenhirState89 */1, _tok$2[0]);\n          case 2 : \n              return _menhir_run11(_menhir_env$3, _menhir_stack$2, /* MenhirState89 */1, _tok$2[0]);\n          case 3 : \n              return _menhir_run90(_menhir_env$3, _menhir_stack$2, /* MenhirState89 */1, _tok$2[0]);\n          case 4 : \n              return _menhir_run91(_menhir_env$3, _menhir_stack$2, /* MenhirState89 */1, _tok$2[0]);\n          \n        }\n      }\n    } else {\n      exit$1 = 2;\n    }\n    if (exit$1 === 2) {\n      if (_menhir_env$2[/* _menhir_error */3]) {\n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              [\n                \"parser.ml\",\n                226,\n                12\n              ]\n            ];\n      }\n      _menhir_env$2[/* _menhir_error */3] = /* true */1;\n      throw $$Error;\n    }\n    \n  }\n  if (exit === 1) {\n    if (_menhir_env[/* _menhir_error */3]) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"parser.ml\",\n              236,\n              8\n            ]\n          ];\n    }\n    _menhir_env[/* _menhir_error */3] = /* true */1;\n    return _menhir_errorcase(_menhir_env, _menhir_stack[0], _menhir_stack[1]);\n  }\n  \n}\n\nfunction _menhir_goto_option_read_const_value_(_menhir_env, _menhir_stack, _, _v) {\n  var match = _menhir_stack[0];\n  var _menhir_stack$1 = match[0];\n  var _v_000 = /* name */match[2];\n  var _v_001 = /* typ */_menhir_stack[2];\n  var _v$1 = /* record */[\n    _v_000,\n    _v_001,\n    /* default_value */_v\n  ];\n  if (_menhir_env[/* _menhir_error */3]) {\n    throw [\n          Caml_builtin_exceptions.assert_failure,\n          [\n            \"parser.ml\",\n            269,\n            6\n          ]\n        ];\n  }\n  var _tok = _menhir_env[/* _menhir_token */2];\n  var exit = 0;\n  if (typeof _tok === \"number\" && _tok === 2) {\n    var _menhir_env$1 = _menhir_discard(_menhir_env);\n    var match$1 = _menhir_stack$1[0];\n    var _v_001$1 = match$1[1];\n    var _v$2 = /* :: */[\n      _v$1,\n      _v_001$1\n    ];\n    return _menhir_goto_read_variable_definitions(_menhir_env$1, match$1[0], _v$2);\n  } else {\n    exit = 1;\n  }\n  if (exit === 1) {\n    if (_menhir_env[/* _menhir_error */3]) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"parser.ml\",\n              288,\n              8\n            ]\n          ];\n    }\n    _menhir_env[/* _menhir_error */3] = /* true */1;\n    return _menhir_errorcase(_menhir_env, _menhir_stack$1, match[1]);\n  }\n  \n}\n\nfunction _menhir_run77(_menhir_env, _menhir_stack, _) {\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  var _v = /* NonNullType */Block.__(2, [_menhir_stack[2]]);\n  return _menhir_goto_read_type(_menhir_env$1, _menhir_stack[0], _menhir_stack[1], _v);\n}\n\nfunction _menhir_run17(_menhir_env, _menhir_stack, _menhir_s) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _menhir_s\n  ];\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  var _tok = _menhir_env$1[/* _menhir_token */2];\n  var exit = 0;\n  if (typeof _tok === \"number\") {\n    exit = 1;\n  } else {\n    switch (_tok.tag | 0) {\n      case 1 : \n          return _menhir_run10(_menhir_env$1, _menhir_stack$1, /* MenhirState17 */27, _tok[0]);\n      case 2 : \n          return _menhir_run11(_menhir_env$1, _menhir_stack$1, /* MenhirState17 */27, _tok[0]);\n      default:\n        exit = 1;\n    }\n  }\n  if (exit === 1) {\n    if (_menhir_env$1[/* _menhir_error */3]) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"parser.ml\",\n              1118,\n              8\n            ]\n          ];\n    }\n    _menhir_env$1[/* _menhir_error */3] = /* true */1;\n    return _menhir_errorcase(_menhir_env$1, _menhir_stack$1, /* MenhirState17 */27);\n  }\n  \n}\n\nfunction _menhir_reduce48(_menhir_env, _menhir_stack, _menhir_s) {\n  return _menhir_goto_read_selection_set(_menhir_env, _menhir_stack, _menhir_s, /* [] */0);\n}\n\nfunction _menhir_reduce13(_menhir_env, _menhir_stack, _menhir_s) {\n  return _menhir_goto_read_arguments(_menhir_env, _menhir_stack, _menhir_s, /* [] */0);\n}\n\nfunction _menhir_run19(_menhir_env, _menhir_stack, _menhir_s) {\n  var _menhir_stack$1 = /* tuple */[\n    _menhir_stack,\n    _menhir_s\n  ];\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  return _menhir_goto_read_argument(_menhir_env$1, _menhir_stack$1, /* [] */0);\n}\n\nfunction prog(lexer, lexbuf) {\n  var _menhir_env = /* record */[\n    /* _menhir_lexer */lexer,\n    /* _menhir_lexbuf */lexbuf,\n    /* _menhir_token : () */0,\n    /* _menhir_error : false */0\n  ];\n  var _menhir_stack_001 = _menhir_env[/* _menhir_lexbuf */1][/* lex_curr_p */11];\n  var _menhir_stack = /* tuple */[\n    /* () */0,\n    _menhir_stack_001\n  ];\n  var _menhir_env$1 = _menhir_discard(_menhir_env);\n  var _tok = _menhir_env$1[/* _menhir_token */2];\n  var exit = 0;\n  if (typeof _tok === \"number\") {\n    switch (_tok) {\n      case 5 : \n      case 7 : \n      case 10 : \n      case 11 : \n          return _menhir_goto_read_definitions(_menhir_env$1, _menhir_stack, /* [] */0);\n      case 13 : \n          return _menhir_goto_prog(_menhir_env$1, _menhir_stack, /* None */0);\n      case 0 : \n      case 1 : \n      case 2 : \n      case 3 : \n      case 4 : \n      case 6 : \n      case 8 : \n      case 9 : \n      case 12 : \n      case 14 : \n      case 15 : \n      case 16 : \n      case 17 : \n          exit = 1;\n          break;\n      \n    }\n  } else {\n    exit = 1;\n  }\n  if (exit === 1) {\n    if (_menhir_env$1[/* _menhir_error */3]) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"parser.ml\",\n              2277,\n              8\n            ]\n          ];\n    }\n    _menhir_env$1[/* _menhir_error */3] = /* true */1;\n    throw $$Error;\n  }\n  \n}\n\nexports.$$Error = $$Error;\nexports.prog = prog;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./lib/js/parser.js?");

/***/ }),

/***/ "./lib/js/prettify.js":
/*!****************************!*\
  !*** ./lib/js/prettify.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE\n\n\nvar List = __webpack_require__(/*! bs-platform/lib/js/list.js */ \"./node_modules/bs-platform/lib/js/list.js\");\nvar Block = __webpack_require__(/*! bs-platform/lib/js/block.js */ \"./node_modules/bs-platform/lib/js/block.js\");\nvar Curry = __webpack_require__(/*! bs-platform/lib/js/curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Printf = __webpack_require__(/*! bs-platform/lib/js/printf.js */ \"./node_modules/bs-platform/lib/js/printf.js\");\n\nvar spaces = [0];\n\nfunction print_spaces(amount) {\n  for(var i = 1; i <= amount; ++i){\n    Printf.printf(/* Format */[\n          /* Char_literal */Block.__(12, [\n              /* \" \" */32,\n              /* End_of_format */0\n            ]),\n          \" \"\n        ]);\n  }\n  return /* () */0;\n}\n\nfunction print(_definitions) {\n  while(true) {\n    var definitions = _definitions;\n    spaces[0] = 0;\n    if (definitions) {\n      read_definition(definitions[0]);\n      _definitions = definitions[1];\n      continue ;\n      \n    } else {\n      return Printf.printf(/* Format */[\n                  /* Char_literal */Block.__(12, [\n                      /* \"\\n\" */10,\n                      /* End_of_format */0\n                    ]),\n                  \"\\n\"\n                ]);\n    }\n  };\n}\n\nfunction read_definition(def) {\n  if (def.tag) {\n    Printf.printf(/* Format */[\n          /* String_literal */Block.__(11, [\n              \"Fragment\\n\",\n              /* End_of_format */0\n            ]),\n          \"Fragment\\n\"\n        ]);\n    return read_fragment(def[0]);\n  } else {\n    Printf.printf(/* Format */[\n          /* String_literal */Block.__(11, [\n              \"Operation\\n\",\n              /* End_of_format */0\n            ]),\n          \"Operation\\n\"\n        ]);\n    return read_operation(def[0]);\n  }\n}\n\nfunction read_fragment(fr) {\n  spaces[0] = spaces[0] + 2 | 0;\n  print_spaces(spaces[0]);\n  Curry._1(Printf.printf(/* Format */[\n            /* String_literal */Block.__(11, [\n                \"Name: \",\n                /* String */Block.__(2, [\n                    /* No_padding */0,\n                    /* Char_literal */Block.__(12, [\n                        /* \"\\n\" */10,\n                        /* End_of_format */0\n                      ])\n                  ])\n              ]),\n            \"Name: %s\\n\"\n          ]), fr[/* name */0]);\n  print_spaces(spaces[0]);\n  Curry._1(Printf.printf(/* Format */[\n            /* String_literal */Block.__(11, [\n                \"Type Condition: \",\n                /* String */Block.__(2, [\n                    /* No_padding */0,\n                    /* Char_literal */Block.__(12, [\n                        /* \"\\n\" */10,\n                        /* End_of_format */0\n                      ])\n                  ])\n              ]),\n            \"Type Condition: %s\\n\"\n          ]), fr[/* type_condition */1]);\n  spaces[0] = spaces[0] + 2 | 0;\n  read_directives(fr[/* directives */2]);\n  read_selection_set(fr[/* selection_set */3]);\n  spaces[0] = spaces[0] - 4 | 0;\n  return /* () */0;\n}\n\nfunction read_operation(op) {\n  var name = op[/* name */1];\n  spaces[0] = spaces[0] + 2 | 0;\n  print_spaces(spaces[0]);\n  switch (op[/* optype */0]) {\n    case 0 : \n        Printf.printf(/* Format */[\n              /* String_literal */Block.__(11, [\n                  \"Query\\n\",\n                  /* End_of_format */0\n                ]),\n              \"Query\\n\"\n            ]);\n        break;\n    case 1 : \n        Printf.printf(/* Format */[\n              /* String_literal */Block.__(11, [\n                  \"Mutation\\n\",\n                  /* End_of_format */0\n                ]),\n              \"Mutation\\n\"\n            ]);\n        break;\n    case 2 : \n        Printf.printf(/* Format */[\n              /* String_literal */Block.__(11, [\n                  \"Subscription\\n\",\n                  /* End_of_format */0\n                ]),\n              \"Subscription\\n\"\n            ]);\n        break;\n    \n  }\n  print_spaces(spaces[0]);\n  if (name) {\n    Curry._1(Printf.printf(/* Format */[\n              /* String_literal */Block.__(11, [\n                  \"Name: \",\n                  /* String */Block.__(2, [\n                      /* No_padding */0,\n                      /* Char_literal */Block.__(12, [\n                          /* \"\\n\" */10,\n                          /* End_of_format */0\n                        ])\n                    ])\n                ]),\n              \"Name: %s\\n\"\n            ]), name[0]);\n  } else {\n    Printf.printf(/* Format */[\n          /* String_literal */Block.__(11, [\n              \"Shorthand Query\\n\",\n              /* End_of_format */0\n            ]),\n          \"Shorthand Query\\n\"\n        ]);\n  }\n  spaces[0] = spaces[0] + 2 | 0;\n  read_var_defs(op[/* variable_definitions */2]);\n  read_directives(op[/* directives */3]);\n  read_selection_set(op[/* selection_set */4]);\n  spaces[0] = spaces[0] - 4 | 0;\n  return /* () */0;\n}\n\nfunction read_selection_set(_selection_set) {\n  while(true) {\n    var selection_set = _selection_set;\n    if (selection_set) {\n      var selection = selection_set[0];\n      print_spaces(spaces[0]);\n      spaces[0] = spaces[0] + 2 | 0;\n      switch (selection.tag | 0) {\n        case 0 : \n            read_field(selection[0]);\n            break;\n        case 1 : \n            read_frag_spread(selection[0]);\n            break;\n        case 2 : \n            read_inline_frag(selection[0]);\n            break;\n        \n      }\n      spaces[0] = spaces[0] - 2 | 0;\n      _selection_set = selection_set[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_frag_spread(spread) {\n  Printf.printf(/* Format */[\n        /* String_literal */Block.__(11, [\n            \"Fragment Spread\\n\",\n            /* End_of_format */0\n          ]),\n        \"Fragment Spread\\n\"\n      ]);\n  print_spaces(spaces[0]);\n  Curry._1(Printf.printf(/* Format */[\n            /* String_literal */Block.__(11, [\n                \"Name: \",\n                /* String */Block.__(2, [\n                    /* No_padding */0,\n                    /* Char_literal */Block.__(12, [\n                        /* \"\\n\" */10,\n                        /* End_of_format */0\n                      ])\n                  ])\n              ]),\n            \"Name: %s\\n\"\n          ]), spread[/* name */0]);\n  return read_directives(spread[/* directives */1]);\n}\n\nfunction read_inline_frag(frag) {\n  Printf.printf(/* Format */[\n        /* String_literal */Block.__(11, [\n            \"Inline Fragment\\n\",\n            /* End_of_format */0\n          ]),\n        \"Inline Fragment\\n\"\n      ]);\n  print_spaces(spaces[0]);\n  var type_condition = frag[/* type_condition */0];\n  if (type_condition) {\n    Curry._1(Printf.printf(/* Format */[\n              /* String_literal */Block.__(11, [\n                  \"Type Condition: \",\n                  /* String */Block.__(2, [\n                      /* No_padding */0,\n                      /* Char_literal */Block.__(12, [\n                          /* \"\\n\" */10,\n                          /* End_of_format */0\n                        ])\n                    ])\n                ]),\n              \"Type Condition: %s\\n\"\n            ]), type_condition[0]);\n  } else {\n    Printf.printf(/* Format */[\n          /* End_of_format */0,\n          \"\"\n        ]);\n  }\n  read_directives(frag[/* directives */1]);\n  return read_selection_set(frag[/* selection_set */2]);\n}\n\nfunction read_field(field) {\n  var alias = field[/* alias */0];\n  if (alias) {\n    Curry._1(Printf.printf(/* Format */[\n              /* String_literal */Block.__(11, [\n                  \"Alias: \",\n                  /* String */Block.__(2, [\n                      /* No_padding */0,\n                      /* Char_literal */Block.__(12, [\n                          /* \"\\n\" */10,\n                          /* End_of_format */0\n                        ])\n                    ])\n                ]),\n              \"Alias: %s\\n\"\n            ]), alias[0]);\n    print_spaces(spaces[0]);\n  } else {\n    Printf.printf(/* Format */[\n          /* End_of_format */0,\n          \"\"\n        ]);\n  }\n  Curry._1(Printf.printf(/* Format */[\n            /* String_literal */Block.__(11, [\n                \"Name: \",\n                /* String */Block.__(2, [\n                    /* No_padding */0,\n                    /* Char_literal */Block.__(12, [\n                        /* \"\\n\" */10,\n                        /* End_of_format */0\n                      ])\n                  ])\n              ]),\n            \"Name: %s\\n\"\n          ]), field[/* name */1]);\n  read_arguments(field[/* arguments */2], 0);\n  return read_selection_set(field[/* selection_set */4]);\n}\n\nfunction read_directives(_directives) {\n  while(true) {\n    var directives = _directives;\n    if (directives) {\n      var direc = directives[0];\n      Curry._1(Printf.printf(/* Format */[\n                /* String_literal */Block.__(11, [\n                    \"Name: \",\n                    /* String */Block.__(2, [\n                        /* No_padding */0,\n                        /* Char_literal */Block.__(12, [\n                            /* \"\\n\" */10,\n                            /* End_of_format */0\n                          ])\n                      ])\n                  ]),\n                \"Name: %s\\n\"\n              ]), direc[/* name */0]);\n      print_spaces(spaces[0] - (spaces[0] - 2 | 0) | 0);\n      read_arguments(direc[/* arguments */1], 0);\n      _directives = directives[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_arguments($$arguments, i) {\n  var length = List.length($$arguments);\n  if (length > 0) {\n    if (i === 0) {\n      print_spaces(spaces[0]);\n    }\n    if (i < 1) {\n      Printf.printf(/* Format */[\n            /* String_literal */Block.__(11, [\n                \"Arguments: (\",\n                /* End_of_format */0\n              ]),\n            \"Arguments: (\"\n          ]);\n    }\n    \n  }\n  if ($$arguments) {\n    var arg = $$arguments[0];\n    Curry._1(Printf.printf(/* Format */[\n              /* String */Block.__(2, [\n                  /* No_padding */0,\n                  /* String_literal */Block.__(11, [\n                      \": \",\n                      /* End_of_format */0\n                    ])\n                ]),\n              \"%s: \"\n            ]), arg[0]);\n    read_value(arg[1]);\n    if (i < (length - 1 | 0)) {\n      Printf.printf(/* Format */[\n            /* String_literal */Block.__(11, [\n                \", \",\n                /* End_of_format */0\n              ]),\n            \", \"\n          ]);\n    } else {\n      Printf.printf(/* Format */[\n            /* End_of_format */0,\n            \"\"\n          ]);\n    }\n    read_arguments($$arguments[1], i + 1 | 0);\n    if (i === 0) {\n      return Printf.printf(/* Format */[\n                  /* String_literal */Block.__(11, [\n                      \")\\n\",\n                      /* End_of_format */0\n                    ]),\n                  \")\\n\"\n                ]);\n    } else {\n      return 0;\n    }\n  } else {\n    return /* () */0;\n  }\n}\n\nfunction read_value(value) {\n  if (typeof value === \"number\") {\n    return Printf.printf(/* Format */[\n                /* String_literal */Block.__(11, [\n                    \"Null\",\n                    /* End_of_format */0\n                  ]),\n                \"Null\"\n              ]);\n  } else {\n    var variant = value[0];\n    if (variant >= 737456202) {\n      if (variant >= 848054398) {\n        if (variant >= 963043957) {\n          return read_assoc(value[1], 0);\n        } else {\n          return read_list(value[1], 0);\n        }\n      } else if (variant >= 770676513) {\n        return Curry._1(Printf.printf(/* Format */[\n                        /* String */Block.__(2, [\n                            /* No_padding */0,\n                            /* End_of_format */0\n                          ]),\n                        \"%s\"\n                      ]), value[1]);\n      } else if (value[1] !== 0) {\n        return Printf.printf(/* Format */[\n                    /* String_literal */Block.__(11, [\n                        \"true\",\n                        /* End_of_format */0\n                      ]),\n                    \"true\"\n                  ]);\n      } else {\n        return Printf.printf(/* Format */[\n                    /* String_literal */Block.__(11, [\n                        \"false\",\n                        /* End_of_format */0\n                      ]),\n                    \"false\"\n                  ]);\n      }\n    } else if (variant !== 3654863) {\n      if (variant >= 365180284) {\n        return Curry._1(Printf.printf(/* Format */[\n                        /* Float */Block.__(8, [\n                            /* Float_f */0,\n                            /* No_padding */0,\n                            /* No_precision */0,\n                            /* End_of_format */0\n                          ]),\n                        \"%f\"\n                      ]), value[1]);\n      } else {\n        return Curry._1(Printf.printf(/* Format */[\n                        /* String */Block.__(2, [\n                            /* No_padding */0,\n                            /* End_of_format */0\n                          ]),\n                        \"%s\"\n                      ]), value[1]);\n      }\n    } else {\n      return Curry._1(Printf.printf(/* Format */[\n                      /* Int */Block.__(4, [\n                          /* Int_d */0,\n                          /* No_padding */0,\n                          /* No_precision */0,\n                          /* End_of_format */0\n                        ]),\n                      \"%d\"\n                    ]), value[1]);\n    }\n  }\n}\n\nfunction read_list(ls, i) {\n  var length = List.length(ls);\n  if (i < 1) {\n    Printf.printf(/* Format */[\n          /* Char_literal */Block.__(12, [\n              /* \"[\" */91,\n              /* End_of_format */0\n            ]),\n          \"[\"\n        ]);\n  }\n  if (ls) {\n    read_value(ls[0]);\n    if (i < (length - 1 | 0)) {\n      Printf.printf(/* Format */[\n            /* String_literal */Block.__(11, [\n                \", \",\n                /* End_of_format */0\n              ]),\n            \", \"\n          ]);\n    } else {\n      Printf.printf(/* Format */[\n            /* End_of_format */0,\n            \"\"\n          ]);\n    }\n    read_list(ls[1], i + 1 | 0);\n    if (i === 0) {\n      return Printf.printf(/* Format */[\n                  /* Char_literal */Block.__(12, [\n                      /* \"]\" */93,\n                      /* End_of_format */0\n                    ]),\n                  \"]\"\n                ]);\n    } else {\n      return 0;\n    }\n  } else {\n    return /* () */0;\n  }\n}\n\nfunction read_assoc(ls, i) {\n  var length = List.length(ls);\n  if (i < 1) {\n    Printf.printf(/* Format */[\n          /* String_literal */Block.__(11, [\n              \"{ \",\n              /* End_of_format */0\n            ]),\n          \"{ \"\n        ]);\n  }\n  if (ls) {\n    var obj = ls[0];\n    Curry._1(Printf.printf(/* Format */[\n              /* String */Block.__(2, [\n                  /* No_padding */0,\n                  /* String_literal */Block.__(11, [\n                      \" : \",\n                      /* End_of_format */0\n                    ])\n                ]),\n              \"%s : \"\n            ]), obj[0]);\n    read_value(obj[1]);\n    if (i < (length - 1 | 0)) {\n      Printf.printf(/* Format */[\n            /* String_literal */Block.__(11, [\n                \", \",\n                /* End_of_format */0\n              ]),\n            \", \"\n          ]);\n    } else {\n      Printf.printf(/* Format */[\n            /* End_of_format */0,\n            \"\"\n          ]);\n    }\n    read_assoc(ls[1], i + 1 | 0);\n  }\n  if (i === 0) {\n    return Printf.printf(/* Format */[\n                /* String_literal */Block.__(11, [\n                    \" }\",\n                    /* End_of_format */0\n                  ]),\n                \" }\"\n              ]);\n  } else {\n    return 0;\n  }\n}\n\nfunction read_var_defs(_defs) {\n  while(true) {\n    var defs = _defs;\n    var length = List.length(defs);\n    if (length > 0) {\n      print_spaces(spaces[0]);\n    }\n    if (defs) {\n      var de = defs[0];\n      Curry._1(Printf.printf(/* Format */[\n                /* String_literal */Block.__(11, [\n                    \"Name: \",\n                    /* String */Block.__(2, [\n                        /* No_padding */0,\n                        /* Char_literal */Block.__(12, [\n                            /* \"\\n\" */10,\n                            /* End_of_format */0\n                          ])\n                      ])\n                  ]),\n                \"Name: %s\\n\"\n              ]), de[/* name */0]);\n      read_type(de[/* typ */1]);\n      _defs = defs[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction read_type(_typ) {\n  while(true) {\n    var typ = _typ;\n    switch (typ.tag | 0) {\n      case 0 : \n          return Curry._1(Printf.printf(/* Format */[\n                          /* String_literal */Block.__(11, [\n                              \"Type: \",\n                              /* String */Block.__(2, [\n                                  /* No_padding */0,\n                                  /* Char_literal */Block.__(12, [\n                                      /* \"\\n\" */10,\n                                      /* End_of_format */0\n                                    ])\n                                ])\n                            ]),\n                          \"Type: %s\\n\"\n                        ]), typ[0]);\n      case 1 : \n      case 2 : \n          _typ = typ[0];\n          continue ;\n          \n    }\n  };\n}\n\nexports.spaces = spaces;\nexports.print_spaces = print_spaces;\nexports.print = print;\nexports.read_definition = read_definition;\nexports.read_fragment = read_fragment;\nexports.read_operation = read_operation;\nexports.read_selection_set = read_selection_set;\nexports.read_frag_spread = read_frag_spread;\nexports.read_inline_frag = read_inline_frag;\nexports.read_field = read_field;\nexports.read_directives = read_directives;\nexports.read_arguments = read_arguments;\nexports.read_value = read_value;\nexports.read_list = read_list;\nexports.read_assoc = read_assoc;\nexports.read_var_defs = read_var_defs;\nexports.read_type = read_type;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./lib/js/prettify.js?");

/***/ }),

/***/ "./lib/js/validate.js":
/*!****************************!*\
  !*** ./lib/js/validate.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE\n\n\nvar Parse = __webpack_require__(/*! ./parse.js */ \"./lib/js/parse.js\");\nvar Lexing = __webpack_require__(/*! bs-platform/lib/js/lexing.js */ \"./node_modules/bs-platform/lib/js/lexing.js\");\nvar NonNullArguments = __webpack_require__(/*! ./NonNullArguments.js */ \"./lib/js/NonNullArguments.js\");\nvar ArgumentUniqueness = __webpack_require__(/*! ./ArgumentUniqueness.js */ \"./lib/js/ArgumentUniqueness.js\");\nvar UniqueOperationNames = __webpack_require__(/*! ./UniqueOperationNames.js */ \"./lib/js/UniqueOperationNames.js\");\nvar FieldSelectionMerging = __webpack_require__(/*! ./FieldSelectionMerging.js */ \"./lib/js/FieldSelectionMerging.js\");\nvar FragmentNameUniqueness = __webpack_require__(/*! ./FragmentNameUniqueness.js */ \"./lib/js/FragmentNameUniqueness.js\");\nvar LoneAnonymousOperation = __webpack_require__(/*! ./LoneAnonymousOperation.js */ \"./lib/js/LoneAnonymousOperation.js\");\n\nvar error = [/* false */0];\n\nfunction validate(str) {\n  error[0] = /* false */0;\n  var lexbuf = Lexing.from_string(str);\n  var init = lexbuf[/* lex_curr_p */11];\n  lexbuf[/* lex_curr_p */11] = /* record */[\n    /* pos_fname */str,\n    /* pos_lnum */init[/* pos_lnum */1],\n    /* pos_bol */init[/* pos_bol */2],\n    /* pos_cnum */init[/* pos_cnum */3]\n  ];\n  var ast = Parse.parse_from_buf(lexbuf);\n  if (UniqueOperationNames.validate(ast)) {\n    error[0] = /* true */1;\n  }\n  if (LoneAnonymousOperation.validate(ast)) {\n    error[0] = /* true */1;\n  }\n  if (FieldSelectionMerging.validate(ast)) {\n    error[0] = /* true */1;\n  }\n  if (ArgumentUniqueness.validate(ast)) {\n    error[0] = /* true */1;\n  }\n  if (NonNullArguments.validate(ast)) {\n    error[0] = /* true */1;\n  }\n  if (FragmentNameUniqueness.validate(ast)) {\n    error[0] = /* true */1;\n  }\n  return error[0];\n}\n\nexports.error = error;\nexports.validate = validate;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./lib/js/validate.js?");

/***/ }),

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/axios */ \"./node_modules/axios/lib/axios.js\");\n\n//# sourceURL=webpack:///./node_modules/axios/index.js?");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/http.js":
/*!*************************************************!*\
  !*** ./node_modules/axios/lib/adapters/http.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./node_modules/axios/lib/core/settle.js\");\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar http = __webpack_require__(/*! http */ \"http\");\nvar https = __webpack_require__(/*! https */ \"https\");\nvar httpFollow = __webpack_require__(/*! follow-redirects */ \"./node_modules/follow-redirects/index.js\").http;\nvar httpsFollow = __webpack_require__(/*! follow-redirects */ \"./node_modules/follow-redirects/index.js\").https;\nvar url = __webpack_require__(/*! url */ \"url\");\nvar zlib = __webpack_require__(/*! zlib */ \"zlib\");\nvar pkg = __webpack_require__(/*! ./../../package.json */ \"./node_modules/axios/package.json\");\nvar createError = __webpack_require__(/*! ../core/createError */ \"./node_modules/axios/lib/core/createError.js\");\nvar enhanceError = __webpack_require__(/*! ../core/enhanceError */ \"./node_modules/axios/lib/core/enhanceError.js\");\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolve, reject) {\n    var data = config.data;\n    var headers = config.headers;\n    var timer;\n\n    // Set User-Agent (required by some servers)\n    // Only set header if it hasn't been set in config\n    // See https://github.com/axios/axios/issues/69\n    if (!headers['User-Agent'] && !headers['user-agent']) {\n      headers['User-Agent'] = 'axios/' + pkg.version;\n    }\n\n    if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = new Buffer(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = new Buffer(data, 'utf-8');\n      } else {\n        return reject(createError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers['Content-Length'] = data.length;\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var parsed = url.parse(config.url);\n    var protocol = parsed.protocol || 'http:';\n\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    if (auth) {\n      delete headers.Authorization;\n    }\n\n    var isHttps = protocol === 'https:';\n    var agent = isHttps ? config.httpsAgent : config.httpAgent;\n\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method,\n      headers: headers,\n      agent: agent,\n      auth: auth\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        proxy = {\n          host: parsedProxyUrl.hostname,\n          port: parsedProxyUrl.port\n        };\n\n        if (parsedProxyUrl.auth) {\n          var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n          proxy.auth = {\n            username: proxyUrlAuth[0],\n            password: proxyUrlAuth[1]\n          };\n        }\n      }\n    }\n\n    if (proxy) {\n      options.hostname = proxy.host;\n      options.host = proxy.host;\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      options.port = proxy.port;\n      options.path = protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path;\n\n      // Basic proxy authorization\n      if (proxy.auth) {\n        var base64 = new Buffer(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n        options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n      }\n    }\n\n    var transport;\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttps ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      transport = isHttps ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxContentLength && config.maxContentLength > -1) {\n      options.maxBodyLength = config.maxContentLength;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // Response has been received so kill timer that handles request timeout\n      clearTimeout(timer);\n      timer = null;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n      switch (res.headers['content-encoding']) {\n      /*eslint default-case:0*/\n      case 'gzip':\n      case 'compress':\n      case 'deflate':\n        // add the unzipper to the body stream processing pipeline\n        stream = stream.pipe(zlib.createUnzip());\n\n        // remove the content-encoding in order to not confuse downstream operations\n        delete res.headers['content-encoding'];\n        break;\n      }\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && Buffer.concat(responseBuffer).length > config.maxContentLength) {\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              config, null, lastRequest));\n          }\n        });\n\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(enhanceError(err, config, null, lastRequest));\n        });\n\n        stream.on('end', function handleStreamEnd() {\n          var responseData = Buffer.concat(responseBuffer);\n          if (config.responseType !== 'arraybuffer') {\n            responseData = responseData.toString('utf8');\n          }\n\n          response.data = responseData;\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      if (req.aborted) return;\n      reject(enhanceError(err, config, null, req));\n    });\n\n    // Handle request timeout\n    if (config.timeout && !timer) {\n      timer = setTimeout(function handleRequestTimeout() {\n        req.abort();\n        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', req));\n      }, config.timeout);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (req.aborted) return;\n\n        req.abort();\n        reject(cancel);\n      });\n    }\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/adapters/http.js?");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./node_modules/axios/lib/core/settle.js\");\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./node_modules/axios/lib/helpers/parseHeaders.js\");\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./node_modules/axios/lib/helpers/isURLSameOrigin.js\");\nvar createError = __webpack_require__(/*! ../core/createError */ \"./node_modules/axios/lib/core/createError.js\");\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(/*! ./../helpers/btoa */ \"./node_modules/axios/lib/helpers/btoa.js\");\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (\"development\" !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./node_modules/axios/lib/helpers/cookies.js\");\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/adapters/xhr.js?");

/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./node_modules/axios/lib/core/Axios.js\");\nvar defaults = __webpack_require__(/*! ./defaults */ \"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./node_modules/axios/lib/cancel/CancelToken.js\");\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./node_modules/axios/lib/helpers/spread.js\");\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/axios.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/Cancel.js":
/*!*************************************************!*\
  !*** ./node_modules/axios/lib/cancel/Cancel.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/cancel/Cancel.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/cancel/CancelToken.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/cancel/isCancel.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar defaults = __webpack_require__(/*! ./../defaults */ \"./node_modules/axios/lib/defaults.js\");\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./node_modules/axios/lib/core/InterceptorManager.js\");\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./node_modules/axios/lib/core/dispatchRequest.js\");\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/Axios.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/InterceptorManager.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/createError.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/createError.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./node_modules/axios/lib/core/enhanceError.js\");\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/createError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar transformData = __webpack_require__(/*! ./transformData */ \"./node_modules/axios/lib/core/transformData.js\");\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"./node_modules/axios/lib/defaults.js\");\nvar isAbsoluteURL = __webpack_require__(/*! ./../helpers/isAbsoluteURL */ \"./node_modules/axios/lib/helpers/isAbsoluteURL.js\");\nvar combineURLs = __webpack_require__(/*! ./../helpers/combineURLs */ \"./node_modules/axios/lib/helpers/combineURLs.js\");\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/dispatchRequest.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/enhanceError.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/enhanceError.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/enhanceError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar createError = __webpack_require__(/*! ./createError */ \"./node_modules/axios/lib/core/createError.js\");\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/settle.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/transformData.js?");

/***/ }),

/***/ "./node_modules/axios/lib/defaults.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/defaults.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./node_modules/axios/lib/helpers/normalizeHeaderName.js\");\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./node_modules/axios/lib/adapters/http.js\");\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/defaults.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/bind.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/btoa.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/btoa.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/btoa.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/buildURL.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/combineURLs.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/cookies.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/parseHeaders.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/spread.js?");

/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\nvar isBuffer = __webpack_require__(/*! is-buffer */ \"./node_modules/is-buffer/index.js\");\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/utils.js?");

/***/ }),

/***/ "./node_modules/axios/package.json":
/*!*****************************************!*\
  !*** ./node_modules/axios/package.json ***!
  \*****************************************/
/*! exports provided: _args, _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _spec, _where, author, browser, bugs, bundlesize, dependencies, description, devDependencies, homepage, keywords, license, main, name, repository, scripts, typings, version, default */
/***/ (function(module) {

eval("module.exports = {\"_args\":[[\"axios@0.18.0\",\"/mnt/c/Users/tahni/Git/graphqlx\"]],\"_from\":\"axios@0.18.0\",\"_id\":\"axios@0.18.0\",\"_inBundle\":false,\"_integrity\":\"sha1-MtU+SFHv3AoRmTts0AB4nXDAUQI=\",\"_location\":\"/axios\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"axios@0.18.0\",\"name\":\"axios\",\"escapedName\":\"axios\",\"rawSpec\":\"0.18.0\",\"saveSpec\":null,\"fetchSpec\":\"0.18.0\"},\"_requiredBy\":[\"/\"],\"_resolved\":\"https://registry.npmjs.org/axios/-/axios-0.18.0.tgz\",\"_spec\":\"0.18.0\",\"_where\":\"/mnt/c/Users/tahni/Git/graphqlx\",\"author\":{\"name\":\"Matt Zabriskie\"},\"browser\":{\"./lib/adapters/http.js\":\"./lib/adapters/xhr.js\"},\"bugs\":{\"url\":\"https://github.com/axios/axios/issues\"},\"bundlesize\":[{\"path\":\"./dist/axios.min.js\",\"threshold\":\"5kB\"}],\"dependencies\":{\"follow-redirects\":\"^1.3.0\",\"is-buffer\":\"^1.1.5\"},\"description\":\"Promise based HTTP client for the browser and node.js\",\"devDependencies\":{\"bundlesize\":\"^0.5.7\",\"coveralls\":\"^2.11.9\",\"es6-promise\":\"^4.0.5\",\"grunt\":\"^1.0.1\",\"grunt-banner\":\"^0.6.0\",\"grunt-cli\":\"^1.2.0\",\"grunt-contrib-clean\":\"^1.0.0\",\"grunt-contrib-nodeunit\":\"^1.0.0\",\"grunt-contrib-watch\":\"^1.0.0\",\"grunt-eslint\":\"^19.0.0\",\"grunt-karma\":\"^2.0.0\",\"grunt-ts\":\"^6.0.0-beta.3\",\"grunt-webpack\":\"^1.0.18\",\"istanbul-instrumenter-loader\":\"^1.0.0\",\"jasmine-core\":\"^2.4.1\",\"karma\":\"^1.3.0\",\"karma-chrome-launcher\":\"^2.0.0\",\"karma-coverage\":\"^1.0.0\",\"karma-firefox-launcher\":\"^1.0.0\",\"karma-jasmine\":\"^1.0.2\",\"karma-jasmine-ajax\":\"^0.1.13\",\"karma-opera-launcher\":\"^1.0.0\",\"karma-safari-launcher\":\"^1.0.0\",\"karma-sauce-launcher\":\"^1.1.0\",\"karma-sinon\":\"^1.0.5\",\"karma-sourcemap-loader\":\"^0.3.7\",\"karma-webpack\":\"^1.7.0\",\"load-grunt-tasks\":\"^3.5.2\",\"minimist\":\"^1.2.0\",\"sinon\":\"^1.17.4\",\"typescript\":\"^2.0.3\",\"url-search-params\":\"^0.6.1\",\"webpack\":\"^1.13.1\",\"webpack-dev-server\":\"^1.14.1\"},\"homepage\":\"https://github.com/axios/axios\",\"keywords\":[\"xhr\",\"http\",\"ajax\",\"promise\",\"node\"],\"license\":\"MIT\",\"main\":\"index.js\",\"name\":\"axios\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/axios/axios.git\"},\"scripts\":{\"build\":\"NODE_ENV=production grunt build\",\"coveralls\":\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\",\"examples\":\"node ./examples/server.js\",\"postversion\":\"git push && git push --tags\",\"preversion\":\"npm test\",\"start\":\"node ./sandbox/server.js\",\"test\":\"grunt test && bundlesize\",\"version\":\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\"},\"typings\":\"./index.d.ts\",\"version\":\"0.18.0\"};\n\n//# sourceURL=webpack:///./node_modules/axios/package.json?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/block.js":
/*!**************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/block.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nfunction __(tag, block) {\n  block.tag = tag;\n  return block;\n}\n\nexports.__ = __;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/block.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/buffer.js":
/*!***************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/buffer.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Bytes = __webpack_require__(/*! ./bytes.js */ \"./node_modules/bs-platform/lib/js/bytes.js\");\nvar Curry = __webpack_require__(/*! ./curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar $$String = __webpack_require__(/*! ./string.js */ \"./node_modules/bs-platform/lib/js/string.js\");\nvar Pervasives = __webpack_require__(/*! ./pervasives.js */ \"./node_modules/bs-platform/lib/js/pervasives.js\");\nvar Caml_string = __webpack_require__(/*! ./caml_string.js */ \"./node_modules/bs-platform/lib/js/caml_string.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction create(n) {\n  var n$1 = n < 1 ? 1 : n;\n  var s = Caml_string.caml_create_string(n$1);\n  return /* record */[\n          /* buffer */s,\n          /* position */0,\n          /* length */n$1,\n          /* initial_buffer */s\n        ];\n}\n\nfunction contents(b) {\n  return Bytes.sub_string(b[/* buffer */0], 0, b[/* position */1]);\n}\n\nfunction to_bytes(b) {\n  return Bytes.sub(b[/* buffer */0], 0, b[/* position */1]);\n}\n\nfunction sub(b, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (b[/* position */1] - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Buffer.sub\"\n        ];\n  } else {\n    return Bytes.sub_string(b[/* buffer */0], ofs, len);\n  }\n}\n\nfunction blit(src, srcoff, dst, dstoff, len) {\n  if (len < 0 || srcoff < 0 || srcoff > (src[/* position */1] - len | 0) || dstoff < 0 || dstoff > (dst.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Buffer.blit\"\n        ];\n  } else {\n    return Bytes.blit(src[/* buffer */0], srcoff, dst, dstoff, len);\n  }\n}\n\nfunction nth(b, ofs) {\n  if (ofs < 0 || ofs >= b[/* position */1]) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Buffer.nth\"\n        ];\n  } else {\n    return b[/* buffer */0][ofs];\n  }\n}\n\nfunction length(b) {\n  return b[/* position */1];\n}\n\nfunction clear(b) {\n  b[/* position */1] = 0;\n  return /* () */0;\n}\n\nfunction reset(b) {\n  b[/* position */1] = 0;\n  b[/* buffer */0] = b[/* initial_buffer */3];\n  b[/* length */2] = b[/* buffer */0].length;\n  return /* () */0;\n}\n\nfunction resize(b, more) {\n  var len = b[/* length */2];\n  var new_len = len;\n  while((b[/* position */1] + more | 0) > new_len) {\n    new_len = (new_len << 1);\n  };\n  var new_buffer = Caml_string.caml_create_string(new_len);\n  Bytes.blit(b[/* buffer */0], 0, new_buffer, 0, b[/* position */1]);\n  b[/* buffer */0] = new_buffer;\n  b[/* length */2] = new_len;\n  return /* () */0;\n}\n\nfunction add_char(b, c) {\n  var pos = b[/* position */1];\n  if (pos >= b[/* length */2]) {\n    resize(b, 1);\n  }\n  b[/* buffer */0][pos] = c;\n  b[/* position */1] = pos + 1 | 0;\n  return /* () */0;\n}\n\nfunction add_substring(b, s, offset, len) {\n  if (offset < 0 || len < 0 || (offset + len | 0) > s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Buffer.add_substring/add_subbytes\"\n        ];\n  }\n  var new_position = b[/* position */1] + len | 0;\n  if (new_position > b[/* length */2]) {\n    resize(b, len);\n  }\n  Bytes.blit_string(s, offset, b[/* buffer */0], b[/* position */1], len);\n  b[/* position */1] = new_position;\n  return /* () */0;\n}\n\nfunction add_subbytes(b, s, offset, len) {\n  return add_substring(b, Caml_string.bytes_to_string(s), offset, len);\n}\n\nfunction add_string(b, s) {\n  var len = s.length;\n  var new_position = b[/* position */1] + len | 0;\n  if (new_position > b[/* length */2]) {\n    resize(b, len);\n  }\n  Bytes.blit_string(s, 0, b[/* buffer */0], b[/* position */1], len);\n  b[/* position */1] = new_position;\n  return /* () */0;\n}\n\nfunction add_bytes(b, s) {\n  return add_string(b, Caml_string.bytes_to_string(s));\n}\n\nfunction add_buffer(b, bs) {\n  return add_subbytes(b, bs[/* buffer */0], 0, bs[/* position */1]);\n}\n\nfunction add_channel(b, ic, len) {\n  if (len < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Buffer.add_channel\"\n        ];\n  }\n  if ((b[/* position */1] + len | 0) > b[/* length */2]) {\n    resize(b, len);\n  }\n  Pervasives.really_input(ic, b[/* buffer */0], b[/* position */1], len);\n  b[/* position */1] = b[/* position */1] + len | 0;\n  return /* () */0;\n}\n\nfunction output_buffer(oc, b) {\n  return Pervasives.output(oc, b[/* buffer */0], 0, b[/* position */1]);\n}\n\nfunction closing(param) {\n  if (param !== 40) {\n    if (param !== 123) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"buffer.ml\",\n              126,\n              9\n            ]\n          ];\n    } else {\n      return /* \"}\" */125;\n    }\n  } else {\n    return /* \")\" */41;\n  }\n}\n\nfunction advance_to_closing(opening, closing, k, s, start) {\n  var _k = k;\n  var _i = start;\n  var lim = s.length;\n  while(true) {\n    var i = _i;\n    var k$1 = _k;\n    if (i >= lim) {\n      throw Caml_builtin_exceptions.not_found;\n    } else if (Caml_string.get(s, i) === opening) {\n      _i = i + 1 | 0;\n      _k = k$1 + 1 | 0;\n      continue ;\n      \n    } else if (Caml_string.get(s, i) === closing) {\n      if (k$1 === 0) {\n        return i;\n      } else {\n        _i = i + 1 | 0;\n        _k = k$1 - 1 | 0;\n        continue ;\n        \n      }\n    } else {\n      _i = i + 1 | 0;\n      continue ;\n      \n    }\n  };\n}\n\nfunction advance_to_non_alpha(s, start) {\n  var _i = start;\n  var lim = s.length;\n  while(true) {\n    var i = _i;\n    if (i >= lim) {\n      return lim;\n    } else {\n      var match = Caml_string.get(s, i);\n      var exit = 0;\n      if (match >= 91) {\n        if (match >= 97) {\n          if (match >= 123) {\n            return i;\n          } else {\n            exit = 1;\n          }\n        } else if (match !== 95) {\n          return i;\n        } else {\n          exit = 1;\n        }\n      } else if (match >= 58) {\n        if (match >= 65) {\n          exit = 1;\n        } else {\n          return i;\n        }\n      } else if (match >= 48) {\n        exit = 1;\n      } else {\n        return i;\n      }\n      if (exit === 1) {\n        _i = i + 1 | 0;\n        continue ;\n        \n      }\n      \n    }\n  };\n}\n\nfunction find_ident(s, start, lim) {\n  if (start >= lim) {\n    throw Caml_builtin_exceptions.not_found;\n  } else {\n    var c = Caml_string.get(s, start);\n    var exit = 0;\n    if (c !== 40 && c !== 123) {\n      var stop = advance_to_non_alpha(s, start + 1 | 0);\n      return /* tuple */[\n              $$String.sub(s, start, stop - start | 0),\n              stop\n            ];\n    } else {\n      exit = 1;\n    }\n    if (exit === 1) {\n      var new_start = start + 1 | 0;\n      var stop$1 = advance_to_closing(c, closing(c), 0, s, new_start);\n      return /* tuple */[\n              $$String.sub(s, new_start, (stop$1 - start | 0) - 1 | 0),\n              stop$1 + 1 | 0\n            ];\n    }\n    \n  }\n}\n\nfunction add_substitute(b, f, s) {\n  var lim = s.length;\n  var _previous = /* \" \" */32;\n  var _i = 0;\n  while(true) {\n    var i = _i;\n    var previous = _previous;\n    if (i < lim) {\n      var current = Caml_string.get(s, i);\n      if (current !== 36) {\n        if (previous === /* \"\\\\\" */92) {\n          add_char(b, /* \"\\\\\" */92);\n          add_char(b, current);\n          _i = i + 1 | 0;\n          _previous = /* \" \" */32;\n          continue ;\n          \n        } else if (current !== 92) {\n          add_char(b, current);\n          _i = i + 1 | 0;\n          _previous = current;\n          continue ;\n          \n        } else {\n          _i = i + 1 | 0;\n          _previous = current;\n          continue ;\n          \n        }\n      } else if (previous === /* \"\\\\\" */92) {\n        add_char(b, current);\n        _i = i + 1 | 0;\n        _previous = /* \" \" */32;\n        continue ;\n        \n      } else {\n        var j = i + 1 | 0;\n        var match = find_ident(s, j, lim);\n        add_string(b, Curry._1(f, match[0]));\n        _i = match[1];\n        _previous = /* \" \" */32;\n        continue ;\n        \n      }\n    } else if (previous === /* \"\\\\\" */92) {\n      return add_char(b, previous);\n    } else {\n      return 0;\n    }\n  };\n}\n\nexports.create = create;\nexports.contents = contents;\nexports.to_bytes = to_bytes;\nexports.sub = sub;\nexports.blit = blit;\nexports.nth = nth;\nexports.length = length;\nexports.clear = clear;\nexports.reset = reset;\nexports.add_char = add_char;\nexports.add_string = add_string;\nexports.add_bytes = add_bytes;\nexports.add_substring = add_substring;\nexports.add_subbytes = add_subbytes;\nexports.add_substitute = add_substitute;\nexports.add_buffer = add_buffer;\nexports.add_channel = add_channel;\nexports.output_buffer = output_buffer;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/buffer.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/bytes.js":
/*!**************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/bytes.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Char = __webpack_require__(/*! ./char.js */ \"./node_modules/bs-platform/lib/js/char.js\");\nvar List = __webpack_require__(/*! ./list.js */ \"./node_modules/bs-platform/lib/js/list.js\");\nvar Curry = __webpack_require__(/*! ./curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Caml_obj = __webpack_require__(/*! ./caml_obj.js */ \"./node_modules/bs-platform/lib/js/caml_obj.js\");\nvar Caml_int32 = __webpack_require__(/*! ./caml_int32.js */ \"./node_modules/bs-platform/lib/js/caml_int32.js\");\nvar Caml_string = __webpack_require__(/*! ./caml_string.js */ \"./node_modules/bs-platform/lib/js/caml_string.js\");\nvar Caml_primitive = __webpack_require__(/*! ./caml_primitive.js */ \"./node_modules/bs-platform/lib/js/caml_primitive.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction make(n, c) {\n  var s = Caml_string.caml_create_string(n);\n  Caml_string.caml_fill_string(s, 0, n, c);\n  return s;\n}\n\nfunction init(n, f) {\n  var s = Caml_string.caml_create_string(n);\n  for(var i = 0 ,i_finish = n - 1 | 0; i <= i_finish; ++i){\n    s[i] = Curry._1(f, i);\n  }\n  return s;\n}\n\nvar empty = [];\n\nfunction copy(s) {\n  var len = s.length;\n  var r = Caml_string.caml_create_string(len);\n  Caml_string.caml_blit_bytes(s, 0, r, 0, len);\n  return r;\n}\n\nfunction to_string(b) {\n  return Caml_string.bytes_to_string(copy(b));\n}\n\nfunction of_string(s) {\n  return copy(Caml_string.bytes_of_string(s));\n}\n\nfunction sub(s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.sub / Bytes.sub\"\n        ];\n  } else {\n    var r = Caml_string.caml_create_string(len);\n    Caml_string.caml_blit_bytes(s, ofs, r, 0, len);\n    return r;\n  }\n}\n\nfunction sub_string(b, ofs, len) {\n  return Caml_string.bytes_to_string(sub(b, ofs, len));\n}\n\nfunction extend(s, left, right) {\n  var len = (s.length + left | 0) + right | 0;\n  var r = Caml_string.caml_create_string(len);\n  var match = left < 0 ? /* tuple */[\n      -left | 0,\n      0\n    ] : /* tuple */[\n      0,\n      left\n    ];\n  var dstoff = match[1];\n  var srcoff = match[0];\n  var cpylen = Caml_primitive.caml_int_min(s.length - srcoff | 0, len - dstoff | 0);\n  if (cpylen > 0) {\n    Caml_string.caml_blit_bytes(s, srcoff, r, dstoff, cpylen);\n  }\n  return r;\n}\n\nfunction fill(s, ofs, len, c) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.fill / Bytes.fill\"\n        ];\n  } else {\n    return Caml_string.caml_fill_string(s, ofs, len, c);\n  }\n}\n\nfunction blit(s1, ofs1, s2, ofs2, len) {\n  if (len < 0 || ofs1 < 0 || ofs1 > (s1.length - len | 0) || ofs2 < 0 || ofs2 > (s2.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Bytes.blit\"\n        ];\n  } else {\n    return Caml_string.caml_blit_bytes(s1, ofs1, s2, ofs2, len);\n  }\n}\n\nfunction blit_string(s1, ofs1, s2, ofs2, len) {\n  if (len < 0 || ofs1 < 0 || ofs1 > (s1.length - len | 0) || ofs2 < 0 || ofs2 > (s2.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.blit / Bytes.blit_string\"\n        ];\n  } else {\n    return Caml_string.caml_blit_string(s1, ofs1, s2, ofs2, len);\n  }\n}\n\nfunction iter(f, a) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    Curry._1(f, a[i]);\n  }\n  return /* () */0;\n}\n\nfunction iteri(f, a) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    Curry._2(f, i, a[i]);\n  }\n  return /* () */0;\n}\n\nfunction concat(sep, l) {\n  if (l) {\n    var hd = l[0];\n    var num = [0];\n    var len = [0];\n    List.iter((function (s) {\n            num[0] = num[0] + 1 | 0;\n            len[0] = len[0] + s.length | 0;\n            return /* () */0;\n          }), l);\n    var r = Caml_string.caml_create_string(len[0] + Caml_int32.imul(sep.length, num[0] - 1 | 0) | 0);\n    Caml_string.caml_blit_bytes(hd, 0, r, 0, hd.length);\n    var pos = [hd.length];\n    List.iter((function (s) {\n            Caml_string.caml_blit_bytes(sep, 0, r, pos[0], sep.length);\n            pos[0] = pos[0] + sep.length | 0;\n            Caml_string.caml_blit_bytes(s, 0, r, pos[0], s.length);\n            pos[0] = pos[0] + s.length | 0;\n            return /* () */0;\n          }), l[1]);\n    return r;\n  } else {\n    return empty;\n  }\n}\n\nfunction cat(s1, s2) {\n  var l1 = s1.length;\n  var l2 = s2.length;\n  var r = Caml_string.caml_create_string(l1 + l2 | 0);\n  Caml_string.caml_blit_bytes(s1, 0, r, 0, l1);\n  Caml_string.caml_blit_bytes(s2, 0, r, l1, l2);\n  return r;\n}\n\nfunction is_space(param) {\n  var switcher = param - 9 | 0;\n  if (switcher > 4 || switcher < 0) {\n    if (switcher !== 23) {\n      return /* false */0;\n    } else {\n      return /* true */1;\n    }\n  } else if (switcher !== 2) {\n    return /* true */1;\n  } else {\n    return /* false */0;\n  }\n}\n\nfunction trim(s) {\n  var len = s.length;\n  var i = 0;\n  while(i < len && is_space(s[i])) {\n    i = i + 1 | 0;\n  };\n  var j = len - 1 | 0;\n  while(j >= i && is_space(s[j])) {\n    j = j - 1 | 0;\n  };\n  if (j >= i) {\n    return sub(s, i, (j - i | 0) + 1 | 0);\n  } else {\n    return empty;\n  }\n}\n\nfunction escaped(s) {\n  var n = 0;\n  for(var i = 0 ,i_finish = s.length - 1 | 0; i <= i_finish; ++i){\n    var match = s[i];\n    var tmp;\n    if (match >= 32) {\n      var switcher = match - 34 | 0;\n      tmp = switcher > 58 || switcher < 0 ? (\n          switcher >= 93 ? 4 : 1\n        ) : (\n          switcher > 57 || switcher < 1 ? 2 : 1\n        );\n    } else {\n      tmp = match >= 11 ? (\n          match !== 13 ? 4 : 2\n        ) : (\n          match >= 8 ? 2 : 4\n        );\n    }\n    n = n + tmp | 0;\n  }\n  if (n === s.length) {\n    return copy(s);\n  } else {\n    var s$prime = Caml_string.caml_create_string(n);\n    n = 0;\n    for(var i$1 = 0 ,i_finish$1 = s.length - 1 | 0; i$1 <= i_finish$1; ++i$1){\n      var c = s[i$1];\n      var exit = 0;\n      if (c >= 35) {\n        if (c !== 92) {\n          if (c >= 127) {\n            exit = 1;\n          } else {\n            s$prime[n] = c;\n          }\n        } else {\n          exit = 2;\n        }\n      } else if (c >= 32) {\n        if (c >= 34) {\n          exit = 2;\n        } else {\n          s$prime[n] = c;\n        }\n      } else if (c >= 14) {\n        exit = 1;\n      } else {\n        switch (c) {\n          case 8 : \n              s$prime[n] = /* \"\\\\\" */92;\n              n = n + 1 | 0;\n              s$prime[n] = /* \"b\" */98;\n              break;\n          case 9 : \n              s$prime[n] = /* \"\\\\\" */92;\n              n = n + 1 | 0;\n              s$prime[n] = /* \"t\" */116;\n              break;\n          case 10 : \n              s$prime[n] = /* \"\\\\\" */92;\n              n = n + 1 | 0;\n              s$prime[n] = /* \"n\" */110;\n              break;\n          case 0 : \n          case 1 : \n          case 2 : \n          case 3 : \n          case 4 : \n          case 5 : \n          case 6 : \n          case 7 : \n          case 11 : \n          case 12 : \n              exit = 1;\n              break;\n          case 13 : \n              s$prime[n] = /* \"\\\\\" */92;\n              n = n + 1 | 0;\n              s$prime[n] = /* \"r\" */114;\n              break;\n          \n        }\n      }\n      switch (exit) {\n        case 1 : \n            s$prime[n] = /* \"\\\\\" */92;\n            n = n + 1 | 0;\n            s$prime[n] = 48 + (c / 100 | 0) | 0;\n            n = n + 1 | 0;\n            s$prime[n] = 48 + (c / 10 | 0) % 10 | 0;\n            n = n + 1 | 0;\n            s$prime[n] = 48 + c % 10 | 0;\n            break;\n        case 2 : \n            s$prime[n] = /* \"\\\\\" */92;\n            n = n + 1 | 0;\n            s$prime[n] = c;\n            break;\n        \n      }\n      n = n + 1 | 0;\n    }\n    return s$prime;\n  }\n}\n\nfunction map(f, s) {\n  var l = s.length;\n  if (l === 0) {\n    return s;\n  } else {\n    var r = Caml_string.caml_create_string(l);\n    for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      r[i] = Curry._1(f, s[i]);\n    }\n    return r;\n  }\n}\n\nfunction mapi(f, s) {\n  var l = s.length;\n  if (l === 0) {\n    return s;\n  } else {\n    var r = Caml_string.caml_create_string(l);\n    for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      r[i] = Curry._2(f, i, s[i]);\n    }\n    return r;\n  }\n}\n\nfunction uppercase(s) {\n  return map(Char.uppercase, s);\n}\n\nfunction lowercase(s) {\n  return map(Char.lowercase, s);\n}\n\nfunction apply1(f, s) {\n  if (s.length === 0) {\n    return s;\n  } else {\n    var r = copy(s);\n    r[0] = Curry._1(f, s[0]);\n    return r;\n  }\n}\n\nfunction capitalize(s) {\n  return apply1(Char.uppercase, s);\n}\n\nfunction uncapitalize(s) {\n  return apply1(Char.lowercase, s);\n}\n\nfunction index_rec(s, lim, _i, c) {\n  while(true) {\n    var i = _i;\n    if (i >= lim) {\n      throw Caml_builtin_exceptions.not_found;\n    } else if (s[i] === c) {\n      return i;\n    } else {\n      _i = i + 1 | 0;\n      continue ;\n      \n    }\n  };\n}\n\nfunction index(s, c) {\n  return index_rec(s, s.length, 0, c);\n}\n\nfunction index_from(s, i, c) {\n  var l = s.length;\n  if (i < 0 || i > l) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.index_from / Bytes.index_from\"\n        ];\n  } else {\n    return index_rec(s, l, i, c);\n  }\n}\n\nfunction rindex_rec(s, _i, c) {\n  while(true) {\n    var i = _i;\n    if (i < 0) {\n      throw Caml_builtin_exceptions.not_found;\n    } else if (s[i] === c) {\n      return i;\n    } else {\n      _i = i - 1 | 0;\n      continue ;\n      \n    }\n  };\n}\n\nfunction rindex(s, c) {\n  return rindex_rec(s, s.length - 1 | 0, c);\n}\n\nfunction rindex_from(s, i, c) {\n  if (i < -1 || i >= s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.rindex_from / Bytes.rindex_from\"\n        ];\n  } else {\n    return rindex_rec(s, i, c);\n  }\n}\n\nfunction contains_from(s, i, c) {\n  var l = s.length;\n  if (i < 0 || i > l) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.contains_from / Bytes.contains_from\"\n        ];\n  } else {\n    try {\n      index_rec(s, l, i, c);\n      return /* true */1;\n    }\n    catch (exn){\n      if (exn === Caml_builtin_exceptions.not_found) {\n        return /* false */0;\n      } else {\n        throw exn;\n      }\n    }\n  }\n}\n\nfunction contains(s, c) {\n  return contains_from(s, 0, c);\n}\n\nfunction rcontains_from(s, i, c) {\n  if (i < 0 || i >= s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.rcontains_from / Bytes.rcontains_from\"\n        ];\n  } else {\n    try {\n      rindex_rec(s, i, c);\n      return /* true */1;\n    }\n    catch (exn){\n      if (exn === Caml_builtin_exceptions.not_found) {\n        return /* false */0;\n      } else {\n        throw exn;\n      }\n    }\n  }\n}\n\nvar compare = Caml_obj.caml_compare;\n\nvar unsafe_to_string = Caml_string.bytes_to_string;\n\nvar unsafe_of_string = Caml_string.bytes_of_string;\n\nexports.make = make;\nexports.init = init;\nexports.empty = empty;\nexports.copy = copy;\nexports.of_string = of_string;\nexports.to_string = to_string;\nexports.sub = sub;\nexports.sub_string = sub_string;\nexports.extend = extend;\nexports.fill = fill;\nexports.blit = blit;\nexports.blit_string = blit_string;\nexports.concat = concat;\nexports.cat = cat;\nexports.iter = iter;\nexports.iteri = iteri;\nexports.map = map;\nexports.mapi = mapi;\nexports.trim = trim;\nexports.escaped = escaped;\nexports.index = index;\nexports.rindex = rindex;\nexports.index_from = index_from;\nexports.rindex_from = rindex_from;\nexports.contains = contains;\nexports.contains_from = contains_from;\nexports.rcontains_from = rcontains_from;\nexports.uppercase = uppercase;\nexports.lowercase = lowercase;\nexports.capitalize = capitalize;\nexports.uncapitalize = uncapitalize;\nexports.compare = compare;\nexports.unsafe_to_string = unsafe_to_string;\nexports.unsafe_of_string = unsafe_of_string;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/bytes.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_array.js":
/*!*******************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_array.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction caml_array_sub(x, offset, len) {\n  var result = new Array(len);\n  var j = 0;\n  var i = offset;\n  while(j < len) {\n    result[j] = x[i];\n    j = j + 1 | 0;\n    i = i + 1 | 0;\n  };\n  return result;\n}\n\nfunction len(_acc, _l) {\n  while(true) {\n    var l = _l;\n    var acc = _acc;\n    if (l) {\n      _l = l[1];\n      _acc = l[0].length + acc | 0;\n      continue ;\n      \n    } else {\n      return acc;\n    }\n  };\n}\n\nfunction fill(arr, _i, _l) {\n  while(true) {\n    var l = _l;\n    var i = _i;\n    if (l) {\n      var x = l[0];\n      var l$1 = x.length;\n      var k = i;\n      var j = 0;\n      while(j < l$1) {\n        arr[k] = x[j];\n        k = k + 1 | 0;\n        j = j + 1 | 0;\n      };\n      _l = l[1];\n      _i = k;\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction caml_array_concat(l) {\n  var v = len(0, l);\n  var result = new Array(v);\n  fill(result, 0, l);\n  return result;\n}\n\nfunction caml_array_set(xs, index, newval) {\n  if (index < 0 || index >= xs.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    xs[index] = newval;\n    return /* () */0;\n  }\n}\n\nfunction caml_array_get(xs, index) {\n  if (index < 0 || index >= xs.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    return xs[index];\n  }\n}\n\nfunction caml_make_vect(len, init) {\n  var b = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    b[i] = init;\n  }\n  return b;\n}\n\nfunction caml_make_float_vect(len) {\n  var b = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    b[i] = 0;\n  }\n  return b;\n}\n\nfunction caml_array_blit(a1, i1, a2, i2, len) {\n  if (i2 <= i1) {\n    for(var j = 0 ,j_finish = len - 1 | 0; j <= j_finish; ++j){\n      a2[j + i2 | 0] = a1[j + i1 | 0];\n    }\n    return /* () */0;\n  } else {\n    for(var j$1 = len - 1 | 0; j$1 >= 0; --j$1){\n      a2[j$1 + i2 | 0] = a1[j$1 + i1 | 0];\n    }\n    return /* () */0;\n  }\n}\n\nexports.caml_array_sub = caml_array_sub;\nexports.caml_array_concat = caml_array_concat;\nexports.caml_make_vect = caml_make_vect;\nexports.caml_make_float_vect = caml_make_float_vect;\nexports.caml_array_blit = caml_array_blit;\nexports.caml_array_get = caml_array_get;\nexports.caml_array_set = caml_array_set;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_array.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js":
/*!********************************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nvar out_of_memory = /* tuple */[\n  \"Out_of_memory\",\n  0\n];\n\nvar sys_error = /* tuple */[\n  \"Sys_error\",\n  -1\n];\n\nvar failure = /* tuple */[\n  \"Failure\",\n  -2\n];\n\nvar invalid_argument = /* tuple */[\n  \"Invalid_argument\",\n  -3\n];\n\nvar end_of_file = /* tuple */[\n  \"End_of_file\",\n  -4\n];\n\nvar division_by_zero = /* tuple */[\n  \"Division_by_zero\",\n  -5\n];\n\nvar not_found = /* tuple */[\n  \"Not_found\",\n  -6\n];\n\nvar match_failure = /* tuple */[\n  \"Match_failure\",\n  -7\n];\n\nvar stack_overflow = /* tuple */[\n  \"Stack_overflow\",\n  -8\n];\n\nvar sys_blocked_io = /* tuple */[\n  \"Sys_blocked_io\",\n  -9\n];\n\nvar assert_failure = /* tuple */[\n  \"Assert_failure\",\n  -10\n];\n\nvar undefined_recursive_module = /* tuple */[\n  \"Undefined_recursive_module\",\n  -11\n];\n\nout_of_memory.tag = 248;\n\nsys_error.tag = 248;\n\nfailure.tag = 248;\n\ninvalid_argument.tag = 248;\n\nend_of_file.tag = 248;\n\ndivision_by_zero.tag = 248;\n\nnot_found.tag = 248;\n\nmatch_failure.tag = 248;\n\nstack_overflow.tag = 248;\n\nsys_blocked_io.tag = 248;\n\nassert_failure.tag = 248;\n\nundefined_recursive_module.tag = 248;\n\nexports.out_of_memory = out_of_memory;\nexports.sys_error = sys_error;\nexports.failure = failure;\nexports.invalid_argument = invalid_argument;\nexports.end_of_file = end_of_file;\nexports.division_by_zero = division_by_zero;\nexports.not_found = not_found;\nexports.match_failure = match_failure;\nexports.stack_overflow = stack_overflow;\nexports.sys_blocked_io = sys_blocked_io;\nexports.assert_failure = assert_failure;\nexports.undefined_recursive_module = undefined_recursive_module;\n/*  Not a pure module */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_bytes.js":
/*!*******************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_bytes.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction get(s, i) {\n  if (i < 0 || i >= s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    return s[i];\n  }\n}\n\nexports.get = get;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_bytes.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_exceptions.js":
/*!************************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_exceptions.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nvar id = [0];\n\nfunction caml_set_oo_id(b) {\n  b[1] = id[0];\n  id[0] += 1;\n  return b;\n}\n\nfunction get_id() {\n  id[0] += 1;\n  return id[0];\n}\n\nfunction create(str) {\n  var v_001 = get_id(/* () */0);\n  var v = /* tuple */[\n    str,\n    v_001\n  ];\n  v.tag = 248;\n  return v;\n}\n\nfunction isCamlExceptionOrOpenVariant(e) {\n  if (e === undefined) {\n    return /* false */0;\n  } else if (e.tag === 248) {\n    return /* true */1;\n  } else {\n    var slot = e[0];\n    if (slot !== undefined) {\n      return +(slot.tag === 248);\n    } else {\n      return /* false */0;\n    }\n  }\n}\n\nexports.caml_set_oo_id = caml_set_oo_id;\nexports.get_id = get_id;\nexports.create = create;\nexports.isCamlExceptionOrOpenVariant = isCamlExceptionOrOpenVariant;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_exceptions.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_float.js":
/*!*******************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_float.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nfunction caml_int32_float_of_bits(x) {\n  var int32 = new Int32Array(/* array */[x]);\n  var float32 = new Float32Array(int32.buffer);\n  return float32[0];\n}\n\nfunction caml_int32_bits_of_float(x) {\n  var float32 = new Float32Array(/* float array */[x]);\n  return new Int32Array(float32.buffer)[0];\n}\n\nfunction caml_classify_float(x) {\n  if (isFinite(x)) {\n    if (Math.abs(x) >= 2.2250738585072014e-308) {\n      return /* FP_normal */0;\n    } else if (x !== 0) {\n      return /* FP_subnormal */1;\n    } else {\n      return /* FP_zero */2;\n    }\n  } else if (isNaN(x)) {\n    return /* FP_nan */4;\n  } else {\n    return /* FP_infinite */3;\n  }\n}\n\nfunction caml_modf_float(x) {\n  if (isFinite(x)) {\n    var neg = +(1 / x < 0);\n    var x$1 = Math.abs(x);\n    var i = Math.floor(x$1);\n    var f = x$1 - i;\n    if (neg) {\n      return /* tuple */[\n              -f,\n              -i\n            ];\n    } else {\n      return /* tuple */[\n              f,\n              i\n            ];\n    }\n  } else if (isNaN(x)) {\n    return /* tuple */[\n            NaN,\n            NaN\n          ];\n  } else {\n    return /* tuple */[\n            1 / x,\n            x\n          ];\n  }\n}\n\nfunction caml_ldexp_float(x, exp) {\n  var x$prime = x;\n  var exp$prime = exp;\n  if (exp$prime > 1023) {\n    exp$prime -= 1023;\n    x$prime = x$prime * Math.pow(2, 1023);\n    if (exp$prime > 1023) {\n      exp$prime -= 1023;\n      x$prime = x$prime * Math.pow(2, 1023);\n    }\n    \n  } else if (exp$prime < -1023) {\n    exp$prime += 1023;\n    x$prime = x$prime * Math.pow(2, -1023);\n  }\n  return x$prime * Math.pow(2, exp$prime);\n}\n\nfunction caml_frexp_float(x) {\n  if (x === 0 || !isFinite(x)) {\n    return /* tuple */[\n            x,\n            0\n          ];\n  } else {\n    var neg = +(x < 0);\n    var x$prime = Math.abs(x);\n    var exp = Math.floor(Math.LOG2E * Math.log(x$prime)) + 1;\n    x$prime = x$prime * Math.pow(2, -exp);\n    if (x$prime < 0.5) {\n      x$prime = x$prime * 2;\n      exp -= 1;\n    }\n    if (neg) {\n      x$prime = -x$prime;\n    }\n    return /* tuple */[\n            x$prime,\n            exp | 0\n          ];\n  }\n}\n\nfunction caml_copysign_float(x, y) {\n  var x$1 = Math.abs(x);\n  var y$1 = y === 0 ? 1 / y : y;\n  if (y$1 < 0) {\n    return -x$1;\n  } else {\n    return x$1;\n  }\n}\n\nfunction caml_expm1_float(x) {\n  var y = Math.exp(x);\n  var z = y - 1;\n  if (Math.abs(x) > 1) {\n    return z;\n  } else if (z === 0) {\n    return x;\n  } else {\n    return x * z / Math.log(y);\n  }\n}\n\nfunction caml_hypot_float(x, y) {\n  var x0 = Math.abs(x);\n  var y0 = Math.abs(y);\n  var a = Math.max(x0, y0);\n  var b = Math.min(x0, y0) / (\n    a !== 0 ? a : 1\n  );\n  return a * Math.sqrt(1 + b * b);\n}\n\nfunction caml_log10_float(x) {\n  return Math.LOG10E * Math.log(x);\n}\n\nexports.caml_int32_float_of_bits = caml_int32_float_of_bits;\nexports.caml_int32_bits_of_float = caml_int32_bits_of_float;\nexports.caml_classify_float = caml_classify_float;\nexports.caml_modf_float = caml_modf_float;\nexports.caml_ldexp_float = caml_ldexp_float;\nexports.caml_frexp_float = caml_frexp_float;\nexports.caml_copysign_float = caml_copysign_float;\nexports.caml_expm1_float = caml_expm1_float;\nexports.caml_hypot_float = caml_hypot_float;\nexports.caml_log10_float = caml_log10_float;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_float.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_format.js":
/*!********************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_format.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Curry = __webpack_require__(/*! ./curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Caml_int32 = __webpack_require__(/*! ./caml_int32.js */ \"./node_modules/bs-platform/lib/js/caml_int32.js\");\nvar Caml_int64 = __webpack_require__(/*! ./caml_int64.js */ \"./node_modules/bs-platform/lib/js/caml_int64.js\");\nvar Caml_utils = __webpack_require__(/*! ./caml_utils.js */ \"./node_modules/bs-platform/lib/js/caml_utils.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction caml_failwith(s) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        s\n      ];\n}\n\nfunction parse_digit(c) {\n  if (c >= 65) {\n    if (c >= 97) {\n      if (c >= 123) {\n        return -1;\n      } else {\n        return c - 87 | 0;\n      }\n    } else if (c >= 91) {\n      return -1;\n    } else {\n      return c - 55 | 0;\n    }\n  } else if (c > 57 || c < 48) {\n    return -1;\n  } else {\n    return c - /* \"0\" */48 | 0;\n  }\n}\n\nfunction int_of_string_base(param) {\n  switch (param) {\n    case 0 : \n        return 8;\n    case 1 : \n        return 16;\n    case 2 : \n        return 10;\n    case 3 : \n        return 2;\n    \n  }\n}\n\nfunction parse_sign_and_base(s) {\n  var sign = 1;\n  var base = /* Dec */2;\n  var i = 0;\n  if (s[i] === \"-\") {\n    sign = -1;\n    i = i + 1 | 0;\n  }\n  var match = s.charCodeAt(i);\n  var match$1 = s.charCodeAt(i + 1 | 0);\n  if (match === 48) {\n    if (match$1 >= 89) {\n      if (match$1 !== 98) {\n        if (match$1 !== 111) {\n          if (match$1 === 120) {\n            base = /* Hex */1;\n            i = i + 2 | 0;\n          }\n          \n        } else {\n          base = /* Oct */0;\n          i = i + 2 | 0;\n        }\n      } else {\n        base = /* Bin */3;\n        i = i + 2 | 0;\n      }\n    } else if (match$1 !== 66) {\n      if (match$1 !== 79) {\n        if (match$1 >= 88) {\n          base = /* Hex */1;\n          i = i + 2 | 0;\n        }\n        \n      } else {\n        base = /* Oct */0;\n        i = i + 2 | 0;\n      }\n    } else {\n      base = /* Bin */3;\n      i = i + 2 | 0;\n    }\n  }\n  return /* tuple */[\n          i,\n          sign,\n          base\n        ];\n}\n\nfunction caml_int_of_string(s) {\n  var match = parse_sign_and_base(s);\n  var i = match[0];\n  var base = int_of_string_base(match[2]);\n  var threshold = 4294967295;\n  var len = s.length;\n  var c = i < len ? s.charCodeAt(i) : /* \"\\000\" */0;\n  var d = parse_digit(c);\n  if (d < 0 || d >= base) {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"int_of_string\"\n        ];\n  }\n  var aux = function (_acc, _k) {\n    while(true) {\n      var k = _k;\n      var acc = _acc;\n      if (k === len) {\n        return acc;\n      } else {\n        var a = s.charCodeAt(k);\n        if (a === /* \"_\" */95) {\n          _k = k + 1 | 0;\n          continue ;\n          \n        } else {\n          var v = parse_digit(a);\n          if (v < 0 || v >= base) {\n            throw [\n                  Caml_builtin_exceptions.failure,\n                  \"int_of_string\"\n                ];\n          } else {\n            var acc$1 = base * acc + v;\n            if (acc$1 > threshold) {\n              throw [\n                    Caml_builtin_exceptions.failure,\n                    \"int_of_string\"\n                  ];\n            } else {\n              _k = k + 1 | 0;\n              _acc = acc$1;\n              continue ;\n              \n            }\n          }\n        }\n      }\n    };\n  };\n  var res = match[1] * aux(d, i + 1 | 0);\n  var or_res = res | 0;\n  if (base === 10 && res !== or_res) {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"int_of_string\"\n        ];\n  }\n  return or_res;\n}\n\nfunction caml_int64_of_string(s) {\n  var match = parse_sign_and_base(s);\n  var hbase = match[2];\n  var i = match[0];\n  var base = Caml_int64.of_int32(int_of_string_base(hbase));\n  var sign = Caml_int64.of_int32(match[1]);\n  var threshold;\n  switch (hbase) {\n    case 0 : \n        threshold = /* int64 */[\n          /* hi */536870911,\n          /* lo */4294967295\n        ];\n        break;\n    case 1 : \n        threshold = /* int64 */[\n          /* hi */268435455,\n          /* lo */4294967295\n        ];\n        break;\n    case 2 : \n        threshold = /* int64 */[\n          /* hi */429496729,\n          /* lo */2576980377\n        ];\n        break;\n    case 3 : \n        threshold = /* int64 */[\n          /* hi */2147483647,\n          /* lo */4294967295\n        ];\n        break;\n    \n  }\n  var len = s.length;\n  var c = i < len ? s.charCodeAt(i) : /* \"\\000\" */0;\n  var d = Caml_int64.of_int32(parse_digit(c));\n  if (Caml_int64.lt(d, /* int64 */[\n          /* hi */0,\n          /* lo */0\n        ]) || Caml_int64.ge(d, base)) {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"int64_of_string\"\n        ];\n  }\n  var aux = function (_acc, _k) {\n    while(true) {\n      var k = _k;\n      var acc = _acc;\n      if (k === len) {\n        return acc;\n      } else {\n        var a = s.charCodeAt(k);\n        if (a === /* \"_\" */95) {\n          _k = k + 1 | 0;\n          continue ;\n          \n        } else {\n          var v = Caml_int64.of_int32(parse_digit(a));\n          if (Caml_int64.lt(v, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ]) || Caml_int64.ge(v, base) || Caml_int64.gt(acc, threshold)) {\n            throw [\n                  Caml_builtin_exceptions.failure,\n                  \"int64_of_string\"\n                ];\n          } else {\n            var acc$1 = Caml_int64.add(Caml_int64.mul(base, acc), v);\n            _k = k + 1 | 0;\n            _acc = acc$1;\n            continue ;\n            \n          }\n        }\n      }\n    };\n  };\n  var res = Caml_int64.mul(sign, aux(d, i + 1 | 0));\n  var or_res = Caml_int64.or_(res, /* int64 */[\n        /* hi */0,\n        /* lo */0\n      ]);\n  if (Caml_int64.eq(base, /* int64 */[\n          /* hi */0,\n          /* lo */10\n        ]) && Caml_int64.neq(res, or_res)) {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"int64_of_string\"\n        ];\n  }\n  return or_res;\n}\n\nfunction int_of_base(param) {\n  switch (param) {\n    case 0 : \n        return 8;\n    case 1 : \n        return 16;\n    case 2 : \n        return 10;\n    \n  }\n}\n\nfunction lowercase(c) {\n  if (c >= /* \"A\" */65 && c <= /* \"Z\" */90 || c >= /* \"\\192\" */192 && c <= /* \"\\214\" */214 || c >= /* \"\\216\" */216 && c <= /* \"\\222\" */222) {\n    return c + 32 | 0;\n  } else {\n    return c;\n  }\n}\n\nfunction parse_format(fmt) {\n  var len = fmt.length;\n  if (len > 31) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"format_int: format too long\"\n        ];\n  }\n  var f = /* record */[\n    /* justify */\"+\",\n    /* signstyle */\"-\",\n    /* filter */\" \",\n    /* alternate : false */0,\n    /* base : Dec */2,\n    /* signedconv : false */0,\n    /* width */0,\n    /* uppercase : false */0,\n    /* sign */1,\n    /* prec */-1,\n    /* conv */\"f\"\n  ];\n  var _i = 0;\n  while(true) {\n    var i = _i;\n    if (i >= len) {\n      return f;\n    } else {\n      var c = fmt.charCodeAt(i);\n      var exit = 0;\n      if (c >= 69) {\n        if (c >= 88) {\n          if (c >= 121) {\n            exit = 1;\n          } else {\n            switch (c - 88 | 0) {\n              case 0 : \n                  f[/* base */4] = /* Hex */1;\n                  f[/* uppercase */7] = /* true */1;\n                  _i = i + 1 | 0;\n                  continue ;\n                  case 13 : \n              case 14 : \n              case 15 : \n                  exit = 5;\n                  break;\n              case 12 : \n              case 17 : \n                  exit = 4;\n                  break;\n              case 23 : \n                  f[/* base */4] = /* Oct */0;\n                  _i = i + 1 | 0;\n                  continue ;\n                  case 29 : \n                  f[/* base */4] = /* Dec */2;\n                  _i = i + 1 | 0;\n                  continue ;\n                  case 1 : \n              case 2 : \n              case 3 : \n              case 4 : \n              case 5 : \n              case 6 : \n              case 7 : \n              case 8 : \n              case 9 : \n              case 10 : \n              case 11 : \n              case 16 : \n              case 18 : \n              case 19 : \n              case 20 : \n              case 21 : \n              case 22 : \n              case 24 : \n              case 25 : \n              case 26 : \n              case 27 : \n              case 28 : \n              case 30 : \n              case 31 : \n                  exit = 1;\n                  break;\n              case 32 : \n                  f[/* base */4] = /* Hex */1;\n                  _i = i + 1 | 0;\n                  continue ;\n                  \n            }\n          }\n        } else if (c >= 72) {\n          exit = 1;\n        } else {\n          f[/* signedconv */5] = /* true */1;\n          f[/* uppercase */7] = /* true */1;\n          f[/* conv */10] = String.fromCharCode(lowercase(c));\n          _i = i + 1 | 0;\n          continue ;\n          \n        }\n      } else {\n        var switcher = c - 32 | 0;\n        if (switcher > 25 || switcher < 0) {\n          exit = 1;\n        } else {\n          switch (switcher) {\n            case 3 : \n                f[/* alternate */3] = /* true */1;\n                _i = i + 1 | 0;\n                continue ;\n                case 0 : \n            case 11 : \n                exit = 2;\n                break;\n            case 13 : \n                f[/* justify */0] = \"-\";\n                _i = i + 1 | 0;\n                continue ;\n                case 14 : \n                f[/* prec */9] = 0;\n                var j = i + 1 | 0;\n                while((function(j){\n                    return function () {\n                      var w = fmt.charCodeAt(j) - /* \"0\" */48 | 0;\n                      return +(w >= 0 && w <= 9);\n                    }\n                    }(j))()) {\n                  f[/* prec */9] = (Caml_int32.imul(f[/* prec */9], 10) + fmt.charCodeAt(j) | 0) - /* \"0\" */48 | 0;\n                  j = j + 1 | 0;\n                };\n                _i = j;\n                continue ;\n                case 1 : \n            case 2 : \n            case 4 : \n            case 5 : \n            case 6 : \n            case 7 : \n            case 8 : \n            case 9 : \n            case 10 : \n            case 12 : \n            case 15 : \n                exit = 1;\n                break;\n            case 16 : \n                f[/* filter */2] = \"0\";\n                _i = i + 1 | 0;\n                continue ;\n                case 17 : \n            case 18 : \n            case 19 : \n            case 20 : \n            case 21 : \n            case 22 : \n            case 23 : \n            case 24 : \n            case 25 : \n                exit = 3;\n                break;\n            \n          }\n        }\n      }\n      switch (exit) {\n        case 1 : \n            _i = i + 1 | 0;\n            continue ;\n            case 2 : \n            f[/* signstyle */1] = String.fromCharCode(c);\n            _i = i + 1 | 0;\n            continue ;\n            case 3 : \n            f[/* width */6] = 0;\n            var j$1 = i;\n            while((function(j$1){\n                return function () {\n                  var w = fmt.charCodeAt(j$1) - /* \"0\" */48 | 0;\n                  return +(w >= 0 && w <= 9);\n                }\n                }(j$1))()) {\n              f[/* width */6] = (Caml_int32.imul(f[/* width */6], 10) + fmt.charCodeAt(j$1) | 0) - /* \"0\" */48 | 0;\n              j$1 = j$1 + 1 | 0;\n            };\n            _i = j$1;\n            continue ;\n            case 4 : \n            f[/* signedconv */5] = /* true */1;\n            f[/* base */4] = /* Dec */2;\n            _i = i + 1 | 0;\n            continue ;\n            case 5 : \n            f[/* signedconv */5] = /* true */1;\n            f[/* conv */10] = String.fromCharCode(c);\n            _i = i + 1 | 0;\n            continue ;\n            \n      }\n    }\n  };\n}\n\nfunction finish_formatting(param, rawbuffer) {\n  var justify = param[/* justify */0];\n  var signstyle = param[/* signstyle */1];\n  var filter = param[/* filter */2];\n  var alternate = param[/* alternate */3];\n  var base = param[/* base */4];\n  var signedconv = param[/* signedconv */5];\n  var width = param[/* width */6];\n  var uppercase = param[/* uppercase */7];\n  var sign = param[/* sign */8];\n  var len = rawbuffer.length;\n  if (signedconv && (sign < 0 || signstyle !== \"-\")) {\n    len = len + 1 | 0;\n  }\n  if (alternate) {\n    if (base === /* Oct */0) {\n      len = len + 1 | 0;\n    } else if (base === /* Hex */1) {\n      len = len + 2 | 0;\n    }\n    \n  }\n  var buffer = \"\";\n  if (justify === \"+\" && filter === \" \") {\n    for(var i = len ,i_finish = width - 1 | 0; i <= i_finish; ++i){\n      buffer = buffer + filter;\n    }\n  }\n  if (signedconv) {\n    if (sign < 0) {\n      buffer = buffer + \"-\";\n    } else if (signstyle !== \"-\") {\n      buffer = buffer + signstyle;\n    }\n    \n  }\n  if (alternate && base === /* Oct */0) {\n    buffer = buffer + \"0\";\n  }\n  if (alternate && base === /* Hex */1) {\n    buffer = buffer + \"0x\";\n  }\n  if (justify === \"+\" && filter === \"0\") {\n    for(var i$1 = len ,i_finish$1 = width - 1 | 0; i$1 <= i_finish$1; ++i$1){\n      buffer = buffer + filter;\n    }\n  }\n  buffer = uppercase ? buffer + rawbuffer.toUpperCase() : buffer + rawbuffer;\n  if (justify === \"-\") {\n    for(var i$2 = len ,i_finish$2 = width - 1 | 0; i$2 <= i_finish$2; ++i$2){\n      buffer = buffer + \" \";\n    }\n  }\n  return buffer;\n}\n\nfunction caml_format_int(fmt, i) {\n  if (fmt === \"%d\") {\n    return String(i);\n  } else {\n    var f = parse_format(fmt);\n    var f$1 = f;\n    var i$1 = i;\n    var i$2 = i$1 < 0 ? (\n        f$1[/* signedconv */5] ? (f$1[/* sign */8] = -1, -i$1) : (i$1 >>> 0)\n      ) : i$1;\n    var s = i$2.toString(int_of_base(f$1[/* base */4]));\n    if (f$1[/* prec */9] >= 0) {\n      f$1[/* filter */2] = \" \";\n      var n = f$1[/* prec */9] - s.length | 0;\n      if (n > 0) {\n        s = Caml_utils.repeat(n, \"0\") + s;\n      }\n      \n    }\n    return finish_formatting(f$1, s);\n  }\n}\n\nfunction caml_int64_format(fmt, x) {\n  var f = parse_format(fmt);\n  var x$1 = f[/* signedconv */5] && Caml_int64.lt(x, /* int64 */[\n        /* hi */0,\n        /* lo */0\n      ]) ? (f[/* sign */8] = -1, Caml_int64.neg(x)) : x;\n  var s = \"\";\n  var match = f[/* base */4];\n  switch (match) {\n    case 0 : \n        var wbase = /* int64 */[\n          /* hi */0,\n          /* lo */8\n        ];\n        var cvtbl = \"01234567\";\n        if (Caml_int64.lt(x$1, /* int64 */[\n                /* hi */0,\n                /* lo */0\n              ])) {\n          var y = Caml_int64.discard_sign(x$1);\n          var match$1 = Caml_int64.div_mod(y, wbase);\n          var quotient = Caml_int64.add(/* int64 */[\n                /* hi */268435456,\n                /* lo */0\n              ], match$1[0]);\n          var modulus = match$1[1];\n          s = String.fromCharCode(cvtbl.charCodeAt(modulus[1] | 0)) + s;\n          while(Caml_int64.neq(quotient, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ])) {\n            var match$2 = Caml_int64.div_mod(quotient, wbase);\n            quotient = match$2[0];\n            modulus = match$2[1];\n            s = String.fromCharCode(cvtbl.charCodeAt(modulus[1] | 0)) + s;\n          };\n        } else {\n          var match$3 = Caml_int64.div_mod(x$1, wbase);\n          var quotient$1 = match$3[0];\n          var modulus$1 = match$3[1];\n          s = String.fromCharCode(cvtbl.charCodeAt(modulus$1[1] | 0)) + s;\n          while(Caml_int64.neq(quotient$1, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ])) {\n            var match$4 = Caml_int64.div_mod(quotient$1, wbase);\n            quotient$1 = match$4[0];\n            modulus$1 = match$4[1];\n            s = String.fromCharCode(cvtbl.charCodeAt(modulus$1[1] | 0)) + s;\n          };\n        }\n        break;\n    case 1 : \n        s = Caml_int64.to_hex(x$1) + s;\n        break;\n    case 2 : \n        var wbase$1 = /* int64 */[\n          /* hi */0,\n          /* lo */10\n        ];\n        var cvtbl$1 = \"0123456789\";\n        if (Caml_int64.lt(x$1, /* int64 */[\n                /* hi */0,\n                /* lo */0\n              ])) {\n          var y$1 = Caml_int64.discard_sign(x$1);\n          var match$5 = Caml_int64.div_mod(y$1, wbase$1);\n          var match$6 = Caml_int64.div_mod(Caml_int64.add(/* int64 */[\n                    /* hi */0,\n                    /* lo */8\n                  ], match$5[1]), wbase$1);\n          var quotient$2 = Caml_int64.add(Caml_int64.add(/* int64 */[\n                    /* hi */214748364,\n                    /* lo */3435973836\n                  ], match$5[0]), match$6[0]);\n          var modulus$2 = match$6[1];\n          s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$2[1] | 0)) + s;\n          while(Caml_int64.neq(quotient$2, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ])) {\n            var match$7 = Caml_int64.div_mod(quotient$2, wbase$1);\n            quotient$2 = match$7[0];\n            modulus$2 = match$7[1];\n            s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$2[1] | 0)) + s;\n          };\n        } else {\n          var match$8 = Caml_int64.div_mod(x$1, wbase$1);\n          var quotient$3 = match$8[0];\n          var modulus$3 = match$8[1];\n          s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$3[1] | 0)) + s;\n          while(Caml_int64.neq(quotient$3, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ])) {\n            var match$9 = Caml_int64.div_mod(quotient$3, wbase$1);\n            quotient$3 = match$9[0];\n            modulus$3 = match$9[1];\n            s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$3[1] | 0)) + s;\n          };\n        }\n        break;\n    \n  }\n  if (f[/* prec */9] >= 0) {\n    f[/* filter */2] = \" \";\n    var n = f[/* prec */9] - s.length | 0;\n    if (n > 0) {\n      s = Caml_utils.repeat(n, \"0\") + s;\n    }\n    \n  }\n  return finish_formatting(f, s);\n}\n\nfunction caml_format_float(fmt, x) {\n  var f = parse_format(fmt);\n  var prec = f[/* prec */9] < 0 ? 6 : f[/* prec */9];\n  var x$1 = x < 0 ? (f[/* sign */8] = -1, -x) : x;\n  var s = \"\";\n  if (isNaN(x$1)) {\n    s = \"nan\";\n    f[/* filter */2] = \" \";\n  } else if (isFinite(x$1)) {\n    var match = f[/* conv */10];\n    switch (match) {\n      case \"e\" : \n          s = x$1.toExponential(prec);\n          var i = s.length;\n          if (s[i - 3 | 0] === \"e\") {\n            s = s.slice(0, i - 1 | 0) + (\"0\" + s.slice(i - 1 | 0));\n          }\n          break;\n      case \"f\" : \n          s = x$1.toFixed(prec);\n          break;\n      case \"g\" : \n          var prec$1 = prec !== 0 ? prec : 1;\n          s = x$1.toExponential(prec$1 - 1 | 0);\n          var j = s.indexOf(\"e\");\n          var exp = Number(s.slice(j + 1 | 0)) | 0;\n          if (exp < -4 || x$1 >= 1e21 || x$1.toFixed().length > prec$1) {\n            var i$1 = j - 1 | 0;\n            while(s[i$1] === \"0\") {\n              i$1 = i$1 - 1 | 0;\n            };\n            if (s[i$1] === \".\") {\n              i$1 = i$1 - 1 | 0;\n            }\n            s = s.slice(0, i$1 + 1 | 0) + s.slice(j);\n            var i$2 = s.length;\n            if (s[i$2 - 3 | 0] === \"e\") {\n              s = s.slice(0, i$2 - 1 | 0) + (\"0\" + s.slice(i$2 - 1 | 0));\n            }\n            \n          } else {\n            var p = prec$1;\n            if (exp < 0) {\n              p = p - (exp + 1 | 0) | 0;\n              s = x$1.toFixed(p);\n            } else {\n              while((function () {\n                      s = x$1.toFixed(p);\n                      return +(s.length > (prec$1 + 1 | 0));\n                    })()) {\n                p = p - 1 | 0;\n              };\n            }\n            if (p !== 0) {\n              var k = s.length - 1 | 0;\n              while(s[k] === \"0\") {\n                k = k - 1 | 0;\n              };\n              if (s[k] === \".\") {\n                k = k - 1 | 0;\n              }\n              s = s.slice(0, k + 1 | 0);\n            }\n            \n          }\n          break;\n      default:\n        \n    }\n  } else {\n    s = \"inf\";\n    f[/* filter */2] = \" \";\n  }\n  return finish_formatting(f, s);\n}\n\nvar float_of_string = (\n  function (s, caml_failwith) {\n    var res = +s;\n    if ((s.length > 0) && (res === res))\n        return res;\n    s = s.replace(/_/g, \"\");\n    res = +s;\n    if (((s.length > 0) && (res === res)) || /^[+-]?nan$/i.test(s)) {\n        return res;\n    }\n    ;\n    if (/^ *0x[0-9a-f_]+p[+-]?[0-9_]+/i.test(s)) {\n        var pidx = s.indexOf('p');\n        pidx = (pidx == -1) ? s.indexOf('P') : pidx;\n        var exp = +s.substring(pidx + 1);\n        res = +s.substring(0, pidx);\n        return res * Math.pow(2, exp);\n    }\n    if (/^\\+?inf(inity)?$/i.test(s))\n        return Infinity;\n    if (/^-inf(inity)?$/i.test(s))\n        return -Infinity;\n    caml_failwith(\"float_of_string\");\n}\n\n);\n\nfunction caml_float_of_string(s) {\n  return Curry._2(float_of_string, s, caml_failwith);\n}\n\nvar caml_nativeint_format = caml_format_int;\n\nvar caml_int32_format = caml_format_int;\n\nvar caml_int32_of_string = caml_int_of_string;\n\nvar caml_nativeint_of_string = caml_int_of_string;\n\nexports.caml_format_float = caml_format_float;\nexports.caml_format_int = caml_format_int;\nexports.caml_nativeint_format = caml_nativeint_format;\nexports.caml_int32_format = caml_int32_format;\nexports.caml_float_of_string = caml_float_of_string;\nexports.caml_int64_format = caml_int64_format;\nexports.caml_int_of_string = caml_int_of_string;\nexports.caml_int32_of_string = caml_int32_of_string;\nexports.caml_int64_of_string = caml_int64_of_string;\nexports.caml_nativeint_of_string = caml_nativeint_of_string;\n/* float_of_string Not a pure module */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_format.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_int32.js":
/*!*******************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_int32.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction div(x, y) {\n  if (y === 0) {\n    throw Caml_builtin_exceptions.division_by_zero;\n  } else {\n    return x / y | 0;\n  }\n}\n\nfunction mod_(x, y) {\n  if (y === 0) {\n    throw Caml_builtin_exceptions.division_by_zero;\n  } else {\n    return x % y;\n  }\n}\n\nfunction caml_bswap16(x) {\n  return ((x & 255) << 8) | ((x & 65280) >>> 8);\n}\n\nfunction caml_int32_bswap(x) {\n  return ((x & 255) << 24) | ((x & 65280) << 8) | ((x & 16711680) >>> 8) | ((x & 4278190080) >>> 24);\n}\n\nvar imul = ( Math.imul || function (x,y) {\n  y |= 0; return ((((x >> 16) * y) << 16) + (x & 0xffff) * y)|0; \n}\n);\n\nvar caml_nativeint_bswap = caml_int32_bswap;\n\nexports.div = div;\nexports.mod_ = mod_;\nexports.caml_bswap16 = caml_bswap16;\nexports.caml_int32_bswap = caml_int32_bswap;\nexports.caml_nativeint_bswap = caml_nativeint_bswap;\nexports.imul = imul;\n/* imul Not a pure module */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_int32.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_int64.js":
/*!*******************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_int64.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_int32 = __webpack_require__(/*! ./caml_int32.js */ \"./node_modules/bs-platform/lib/js/caml_int32.js\");\nvar Caml_utils = __webpack_require__(/*! ./caml_utils.js */ \"./node_modules/bs-platform/lib/js/caml_utils.js\");\nvar Caml_primitive = __webpack_require__(/*! ./caml_primitive.js */ \"./node_modules/bs-platform/lib/js/caml_primitive.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nvar min_int = /* record */[\n  /* hi */-2147483648,\n  /* lo */0\n];\n\nvar max_int = /* record */[\n  /* hi */2147483647,\n  /* lo */1\n];\n\nvar one = /* record */[\n  /* hi */0,\n  /* lo */1\n];\n\nvar zero = /* record */[\n  /* hi */0,\n  /* lo */0\n];\n\nvar neg_one = /* record */[\n  /* hi */-1,\n  /* lo */4294967295\n];\n\nfunction neg_signed(x) {\n  return +((x & 2147483648) !== 0);\n}\n\nfunction add(param, param$1) {\n  var other_low_ = param$1[/* lo */1];\n  var this_low_ = param[/* lo */1];\n  var lo = this_low_ + other_low_ & 4294967295;\n  var overflow = neg_signed(this_low_) && (neg_signed(other_low_) || !neg_signed(lo)) || neg_signed(other_low_) && !neg_signed(lo) ? 1 : 0;\n  var hi = param[/* hi */0] + param$1[/* hi */0] + overflow & 4294967295;\n  return /* record */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nfunction not(param) {\n  var hi = param[/* hi */0] ^ -1;\n  var lo = param[/* lo */1] ^ -1;\n  return /* record */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nfunction eq(x, y) {\n  if (x[/* hi */0] === y[/* hi */0]) {\n    return +(x[/* lo */1] === y[/* lo */1]);\n  } else {\n    return /* false */0;\n  }\n}\n\nfunction equal_null(x, y) {\n  if (y !== null) {\n    return eq(x, y);\n  } else {\n    return /* false */0;\n  }\n}\n\nfunction equal_undefined(x, y) {\n  if (y !== undefined) {\n    return eq(x, y);\n  } else {\n    return /* false */0;\n  }\n}\n\nfunction equal_nullable(x, y) {\n  if (y == null) {\n    return /* false */0;\n  } else {\n    return eq(x, y);\n  }\n}\n\nfunction neg(x) {\n  if (eq(x, min_int)) {\n    return min_int;\n  } else {\n    return add(not(x), one);\n  }\n}\n\nfunction sub(x, y) {\n  return add(x, neg(y));\n}\n\nfunction lsl_(x, numBits) {\n  if (numBits === 0) {\n    return x;\n  } else {\n    var lo = x[/* lo */1];\n    if (numBits >= 32) {\n      return /* record */[\n              /* hi */(lo << (numBits - 32 | 0)),\n              /* lo */0\n            ];\n    } else {\n      var hi = (lo >>> (32 - numBits | 0)) | (x[/* hi */0] << numBits);\n      return /* record */[\n              /* hi */hi,\n              /* lo */((lo << numBits) >>> 0)\n            ];\n    }\n  }\n}\n\nfunction lsr_(x, numBits) {\n  if (numBits === 0) {\n    return x;\n  } else {\n    var hi = x[/* hi */0];\n    var offset = numBits - 32 | 0;\n    if (offset === 0) {\n      return /* record */[\n              /* hi */0,\n              /* lo */(hi >>> 0)\n            ];\n    } else if (offset > 0) {\n      var lo = (hi >>> offset);\n      return /* record */[\n              /* hi */0,\n              /* lo */(lo >>> 0)\n            ];\n    } else {\n      var hi$1 = (hi >>> numBits);\n      var lo$1 = (hi << (-offset | 0)) | (x[/* lo */1] >>> numBits);\n      return /* record */[\n              /* hi */hi$1,\n              /* lo */(lo$1 >>> 0)\n            ];\n    }\n  }\n}\n\nfunction asr_(x, numBits) {\n  if (numBits === 0) {\n    return x;\n  } else {\n    var hi = x[/* hi */0];\n    if (numBits < 32) {\n      var hi$1 = (hi >> numBits);\n      var lo = (hi << (32 - numBits | 0)) | (x[/* lo */1] >>> numBits);\n      return /* record */[\n              /* hi */hi$1,\n              /* lo */(lo >>> 0)\n            ];\n    } else {\n      var lo$1 = (hi >> (numBits - 32 | 0));\n      return /* record */[\n              /* hi */hi >= 0 ? 0 : -1,\n              /* lo */(lo$1 >>> 0)\n            ];\n    }\n  }\n}\n\nfunction is_zero(param) {\n  if (param[/* hi */0] !== 0 || param[/* lo */1] !== 0) {\n    return /* false */0;\n  } else {\n    return /* true */1;\n  }\n}\n\nfunction mul(_this, _other) {\n  while(true) {\n    var other = _other;\n    var $$this = _this;\n    var exit = 0;\n    var lo;\n    var this_hi = $$this[/* hi */0];\n    var exit$1 = 0;\n    var exit$2 = 0;\n    var exit$3 = 0;\n    if (this_hi !== 0 || $$this[/* lo */1] !== 0) {\n      exit$3 = 4;\n    } else {\n      return zero;\n    }\n    if (exit$3 === 4) {\n      if (other[/* hi */0] !== 0 || other[/* lo */1] !== 0) {\n        exit$2 = 3;\n      } else {\n        return zero;\n      }\n    }\n    if (exit$2 === 3) {\n      if (this_hi !== -2147483648 || $$this[/* lo */1] !== 0) {\n        exit$1 = 2;\n      } else {\n        lo = other[/* lo */1];\n        exit = 1;\n      }\n    }\n    if (exit$1 === 2) {\n      var other_hi = other[/* hi */0];\n      var lo$1 = $$this[/* lo */1];\n      var exit$4 = 0;\n      if (other_hi !== -2147483648 || other[/* lo */1] !== 0) {\n        exit$4 = 3;\n      } else {\n        lo = lo$1;\n        exit = 1;\n      }\n      if (exit$4 === 3) {\n        var other_lo = other[/* lo */1];\n        if (this_hi < 0) {\n          if (other_hi < 0) {\n            _other = neg(other);\n            _this = neg($$this);\n            continue ;\n            \n          } else {\n            return neg(mul(neg($$this), other));\n          }\n        } else if (other_hi < 0) {\n          return neg(mul($$this, neg(other)));\n        } else {\n          var a48 = (this_hi >>> 16);\n          var a32 = this_hi & 65535;\n          var a16 = (lo$1 >>> 16);\n          var a00 = lo$1 & 65535;\n          var b48 = (other_hi >>> 16);\n          var b32 = other_hi & 65535;\n          var b16 = (other_lo >>> 16);\n          var b00 = other_lo & 65535;\n          var c48 = 0;\n          var c32 = 0;\n          var c16 = 0;\n          var c00 = a00 * b00;\n          c16 = (c00 >>> 16) + a16 * b00;\n          c32 = (c16 >>> 16);\n          c16 = (c16 & 65535) + a00 * b16;\n          c32 = c32 + (c16 >>> 16) + a32 * b00;\n          c48 = (c32 >>> 16);\n          c32 = (c32 & 65535) + a16 * b16;\n          c48 += (c32 >>> 16);\n          c32 = (c32 & 65535) + a00 * b32;\n          c48 += (c32 >>> 16);\n          c32 = c32 & 65535;\n          c48 = c48 + (a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48) & 65535;\n          var hi = c32 | (c48 << 16);\n          var lo$2 = c00 & 65535 | ((c16 & 65535) << 16);\n          return /* record */[\n                  /* hi */hi,\n                  /* lo */(lo$2 >>> 0)\n                ];\n        }\n      }\n      \n    }\n    if (exit === 1) {\n      if ((lo & 1) === 0) {\n        return zero;\n      } else {\n        return min_int;\n      }\n    }\n    \n  };\n}\n\nfunction swap(param) {\n  var hi = Caml_int32.caml_int32_bswap(param[/* lo */1]);\n  var lo = Caml_int32.caml_int32_bswap(param[/* hi */0]);\n  return /* record */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nfunction xor(param, param$1) {\n  return /* record */[\n          /* hi */param[/* hi */0] ^ param$1[/* hi */0],\n          /* lo */((param[/* lo */1] ^ param$1[/* lo */1]) >>> 0)\n        ];\n}\n\nfunction or_(param, param$1) {\n  return /* record */[\n          /* hi */param[/* hi */0] | param$1[/* hi */0],\n          /* lo */((param[/* lo */1] | param$1[/* lo */1]) >>> 0)\n        ];\n}\n\nfunction and_(param, param$1) {\n  return /* record */[\n          /* hi */param[/* hi */0] & param$1[/* hi */0],\n          /* lo */((param[/* lo */1] & param$1[/* lo */1]) >>> 0)\n        ];\n}\n\nfunction ge(param, param$1) {\n  var other_hi = param$1[/* hi */0];\n  var hi = param[/* hi */0];\n  if (hi > other_hi) {\n    return /* true */1;\n  } else if (hi < other_hi) {\n    return /* false */0;\n  } else {\n    return +(param[/* lo */1] >= param$1[/* lo */1]);\n  }\n}\n\nfunction neq(x, y) {\n  return 1 - eq(x, y);\n}\n\nfunction lt(x, y) {\n  return 1 - ge(x, y);\n}\n\nfunction gt(x, y) {\n  if (x[/* hi */0] > y[/* hi */0]) {\n    return /* true */1;\n  } else if (x[/* hi */0] < y[/* hi */0]) {\n    return /* false */0;\n  } else {\n    return +(x[/* lo */1] > y[/* lo */1]);\n  }\n}\n\nfunction le(x, y) {\n  return 1 - gt(x, y);\n}\n\nfunction min(x, y) {\n  if (ge(x, y)) {\n    return y;\n  } else {\n    return x;\n  }\n}\n\nfunction max(x, y) {\n  if (gt(x, y)) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction to_float(param) {\n  return param[/* hi */0] * (0x100000000) + param[/* lo */1];\n}\n\nvar two_ptr_32_dbl = Math.pow(2, 32);\n\nvar two_ptr_63_dbl = Math.pow(2, 63);\n\nvar neg_two_ptr_63 = -Math.pow(2, 63);\n\nfunction of_float(x) {\n  if (isNaN(x) || !isFinite(x)) {\n    return zero;\n  } else if (x <= neg_two_ptr_63) {\n    return min_int;\n  } else if (x + 1 >= two_ptr_63_dbl) {\n    return max_int;\n  } else if (x < 0) {\n    return neg(of_float(-x));\n  } else {\n    var hi = x / two_ptr_32_dbl | 0;\n    var lo = x % two_ptr_32_dbl | 0;\n    return /* record */[\n            /* hi */hi,\n            /* lo */(lo >>> 0)\n          ];\n  }\n}\n\nfunction div(_self, _other) {\n  while(true) {\n    var other = _other;\n    var self = _self;\n    var self_hi = self[/* hi */0];\n    var exit = 0;\n    var exit$1 = 0;\n    if (other[/* hi */0] !== 0 || other[/* lo */1] !== 0) {\n      exit$1 = 2;\n    } else {\n      throw Caml_builtin_exceptions.division_by_zero;\n    }\n    if (exit$1 === 2) {\n      if (self_hi !== -2147483648) {\n        if (self_hi !== 0 || self[/* lo */1] !== 0) {\n          exit = 1;\n        } else {\n          return zero;\n        }\n      } else if (self[/* lo */1] !== 0) {\n        exit = 1;\n      } else if (eq(other, one) || eq(other, neg_one)) {\n        return self;\n      } else if (eq(other, min_int)) {\n        return one;\n      } else {\n        var other_hi = other[/* hi */0];\n        var half_this = asr_(self, 1);\n        var approx = lsl_(div(half_this, other), 1);\n        var exit$2 = 0;\n        if (approx[/* hi */0] !== 0 || approx[/* lo */1] !== 0) {\n          exit$2 = 3;\n        } else if (other_hi < 0) {\n          return one;\n        } else {\n          return neg(one);\n        }\n        if (exit$2 === 3) {\n          var y = mul(other, approx);\n          var rem = add(self, neg(y));\n          return add(approx, div(rem, other));\n        }\n        \n      }\n    }\n    if (exit === 1) {\n      var other_hi$1 = other[/* hi */0];\n      var exit$3 = 0;\n      if (other_hi$1 !== -2147483648 || other[/* lo */1] !== 0) {\n        exit$3 = 2;\n      } else {\n        return zero;\n      }\n      if (exit$3 === 2) {\n        if (self_hi < 0) {\n          if (other_hi$1 < 0) {\n            _other = neg(other);\n            _self = neg(self);\n            continue ;\n            \n          } else {\n            return neg(div(neg(self), other));\n          }\n        } else if (other_hi$1 < 0) {\n          return neg(div(self, neg(other)));\n        } else {\n          var res = zero;\n          var rem$1 = self;\n          while(ge(rem$1, other)) {\n            var approx$1 = Caml_primitive.caml_float_max(1, Math.floor(to_float(rem$1) / to_float(other)));\n            var log2 = Math.ceil(Math.log(approx$1) / Math.LN2);\n            var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n            var approxRes = of_float(approx$1);\n            var approxRem = mul(approxRes, other);\n            while(approxRem[/* hi */0] < 0 || gt(approxRem, rem$1)) {\n              approx$1 -= delta;\n              approxRes = of_float(approx$1);\n              approxRem = mul(approxRes, other);\n            };\n            if (is_zero(approxRes)) {\n              approxRes = one;\n            }\n            res = add(res, approxRes);\n            rem$1 = add(rem$1, neg(approxRem));\n          };\n          return res;\n        }\n      }\n      \n    }\n    \n  };\n}\n\nfunction mod_(self, other) {\n  var y = mul(div(self, other), other);\n  return add(self, neg(y));\n}\n\nfunction div_mod(self, other) {\n  var quotient = div(self, other);\n  var y = mul(quotient, other);\n  return /* tuple */[\n          quotient,\n          add(self, neg(y))\n        ];\n}\n\nfunction compare(self, other) {\n  var v = Caml_primitive.caml_nativeint_compare(self[/* hi */0], other[/* hi */0]);\n  if (v === 0) {\n    return Caml_primitive.caml_nativeint_compare(self[/* lo */1], other[/* lo */1]);\n  } else {\n    return v;\n  }\n}\n\nfunction of_int32(lo) {\n  return /* record */[\n          /* hi */lo < 0 ? -1 : 0,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nfunction to_int32(x) {\n  return x[/* lo */1] | 0;\n}\n\nfunction to_hex(x) {\n  var aux = function (v) {\n    return (v >>> 0).toString(16);\n  };\n  var match = x[/* hi */0];\n  var match$1 = x[/* lo */1];\n  var exit = 0;\n  if (match !== 0 || match$1 !== 0) {\n    exit = 1;\n  } else {\n    return \"0\";\n  }\n  if (exit === 1) {\n    if (match$1 !== 0) {\n      if (match !== 0) {\n        var lo = aux(x[/* lo */1]);\n        var pad = 8 - lo.length | 0;\n        if (pad <= 0) {\n          return aux(x[/* hi */0]) + lo;\n        } else {\n          return aux(x[/* hi */0]) + (Caml_utils.repeat(pad, \"0\") + lo);\n        }\n      } else {\n        return aux(x[/* lo */1]);\n      }\n    } else {\n      return aux(x[/* hi */0]) + \"00000000\";\n    }\n  }\n  \n}\n\nfunction discard_sign(x) {\n  return /* record */[\n          /* hi */2147483647 & x[/* hi */0],\n          /* lo */x[/* lo */1]\n        ];\n}\n\nfunction float_of_bits(x) {\n  var int32 = new Int32Array(/* array */[\n        x[/* lo */1],\n        x[/* hi */0]\n      ]);\n  return new Float64Array(int32.buffer)[0];\n}\n\nfunction bits_of_float(x) {\n  var u = new Float64Array(/* float array */[x]);\n  var int32 = new Int32Array(u.buffer);\n  var x$1 = int32[1];\n  var hi = x$1;\n  var x$2 = int32[0];\n  var lo = x$2;\n  return /* record */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nfunction get64(s, i) {\n  var hi = (s.charCodeAt(i + 4 | 0) << 32) | (s.charCodeAt(i + 5 | 0) << 40) | (s.charCodeAt(i + 6 | 0) << 48) | (s.charCodeAt(i + 7 | 0) << 56);\n  var lo = s.charCodeAt(i) | (s.charCodeAt(i + 1 | 0) << 8) | (s.charCodeAt(i + 2 | 0) << 16) | (s.charCodeAt(i + 3 | 0) << 24);\n  return /* record */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nexports.min_int = min_int;\nexports.max_int = max_int;\nexports.one = one;\nexports.zero = zero;\nexports.not = not;\nexports.of_int32 = of_int32;\nexports.to_int32 = to_int32;\nexports.add = add;\nexports.neg = neg;\nexports.sub = sub;\nexports.lsl_ = lsl_;\nexports.lsr_ = lsr_;\nexports.asr_ = asr_;\nexports.is_zero = is_zero;\nexports.mul = mul;\nexports.xor = xor;\nexports.or_ = or_;\nexports.and_ = and_;\nexports.swap = swap;\nexports.ge = ge;\nexports.eq = eq;\nexports.neq = neq;\nexports.lt = lt;\nexports.gt = gt;\nexports.le = le;\nexports.equal_null = equal_null;\nexports.equal_undefined = equal_undefined;\nexports.equal_nullable = equal_nullable;\nexports.min = min;\nexports.max = max;\nexports.to_float = to_float;\nexports.of_float = of_float;\nexports.div = div;\nexports.mod_ = mod_;\nexports.div_mod = div_mod;\nexports.compare = compare;\nexports.to_hex = to_hex;\nexports.discard_sign = discard_sign;\nexports.float_of_bits = float_of_bits;\nexports.bits_of_float = bits_of_float;\nexports.get64 = get64;\n/* two_ptr_32_dbl Not a pure module */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_int64.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_io.js":
/*!****************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_io.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Curry = __webpack_require__(/*! ./curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction $caret(prim, prim$1) {\n  return prim + prim$1;\n}\n\nvar stdout = /* record */[\n  /* buffer */\"\",\n  /* output */(function (_, s) {\n      var v = s.length - 1 | 0;\n      if (( (typeof process !== \"undefined\") && process.stdout && process.stdout.write)) {\n        return ( process.stdout.write )(s);\n      } else if (s[v] === \"\\n\") {\n        console.log(s.slice(0, v));\n        return /* () */0;\n      } else {\n        console.log(s);\n        return /* () */0;\n      }\n    })\n];\n\nvar stderr = /* record */[\n  /* buffer */\"\",\n  /* output */(function (_, s) {\n      var v = s.length - 1 | 0;\n      if (s[v] === \"\\n\") {\n        console.log(s.slice(0, v));\n        return /* () */0;\n      } else {\n        console.log(s);\n        return /* () */0;\n      }\n    })\n];\n\nfunction caml_ml_open_descriptor_in() {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_ml_open_descriptor_in not implemented\"\n      ];\n}\n\nfunction caml_ml_open_descriptor_out() {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_ml_open_descriptor_out not implemented\"\n      ];\n}\n\nfunction caml_ml_flush(oc) {\n  if (oc[/* buffer */0] !== \"\") {\n    Curry._2(oc[/* output */1], oc, oc[/* buffer */0]);\n    oc[/* buffer */0] = \"\";\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nvar node_std_output = (function (s){\n   return (typeof process !== \"undefined\") && process.stdout && (process.stdout.write(s), true);\n   }\n);\n\nfunction caml_ml_output(oc, str, offset, len) {\n  var str$1 = offset === 0 && len === str.length ? str : str.slice(offset, len);\n  if (( (typeof process !== \"undefined\") && process.stdout && process.stdout.write ) && oc === stdout) {\n    return ( process.stdout.write )(str$1);\n  } else {\n    var id = str$1.lastIndexOf(\"\\n\");\n    if (id < 0) {\n      oc[/* buffer */0] = oc[/* buffer */0] + str$1;\n      return /* () */0;\n    } else {\n      oc[/* buffer */0] = oc[/* buffer */0] + str$1.slice(0, id + 1 | 0);\n      caml_ml_flush(oc);\n      oc[/* buffer */0] = oc[/* buffer */0] + str$1.slice(id + 1 | 0);\n      return /* () */0;\n    }\n  }\n}\n\nfunction caml_ml_output_char(oc, $$char) {\n  return caml_ml_output(oc, String.fromCharCode($$char), 0, 1);\n}\n\nfunction caml_ml_input(_, _$1, _$2, _$3) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_ml_input ic not implemented\"\n      ];\n}\n\nfunction caml_ml_input_char() {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_ml_input_char not implemnted\"\n      ];\n}\n\nfunction caml_ml_out_channels_list() {\n  return /* :: */[\n          stdout,\n          /* :: */[\n            stderr,\n            /* [] */0\n          ]\n        ];\n}\n\nvar stdin = undefined;\n\nexports.$caret = $caret;\nexports.stdin = stdin;\nexports.stdout = stdout;\nexports.stderr = stderr;\nexports.caml_ml_open_descriptor_in = caml_ml_open_descriptor_in;\nexports.caml_ml_open_descriptor_out = caml_ml_open_descriptor_out;\nexports.caml_ml_flush = caml_ml_flush;\nexports.node_std_output = node_std_output;\nexports.caml_ml_output = caml_ml_output;\nexports.caml_ml_output_char = caml_ml_output_char;\nexports.caml_ml_input = caml_ml_input;\nexports.caml_ml_input_char = caml_ml_input_char;\nexports.caml_ml_out_channels_list = caml_ml_out_channels_list;\n/* node_std_output Not a pure module */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_io.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_lexer.js":
/*!*******************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_lexer.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction fail() {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"lexing: empty token\"\n      ];\n}\n\n \n\n/***********************************************************************/\n/*                                                                     */\n/*                           Objective Caml                            */\n/*                                                                     */\n/*            Xavier Leroy, projet Cristal, INRIA Rocquencourt         */\n/*                                                                     */\n/*  Copyright 1996 Institut National de Recherche en Informatique et   */\n/*  en Automatique.  All rights reserved.  This file is distributed    */\n/*  under the terms of the GNU Library General Public License, with    */\n/*  the special exception on linking described in file ../LICENSE.     */\n/*                                                                     */\n/***********************************************************************/\n\n/* $Id: lexing.c 6045 2004-01-01 16:42:43Z doligez $ */\n\n/* The table-driven automaton for lexers generated by camllex. */\n\nfunction caml_lex_array(s) {\n    var l = s.length / 2;\n    var a = new Array(l);\n    // when s.charCodeAt(2 * i + 1 ) > 128 (0x80)\n    // a[i] < 0  \n    // for(var i = 0 ; i <= 0xffff; ++i) { if (i << 16 >> 16 !==i){console.log(i<<16>>16, 'vs',i)}}\n    // \n    for (var i = 0; i < l; i++)\n        a[i] = (s.charCodeAt(2 * i) | (s.charCodeAt(2 * i + 1) << 8)) << 16 >> 16;\n    return a;\n}\n/**\n * external c_engine  : lex_tables -> int -> lexbuf -> int\n * lexing.ml\n * type lex_tables = {\n *   lex_base : string;\n *   lex_backtrk : string;\n *   lex_default : string;\n *   lex_trans : string;\n *   lex_check : string;\n *   lex_base_code : string;\n *   lex_backtrk_code : string;\n *   lex_default_code : string;\n *   lex_trans_code : string;\n *   lex_check_code : string;\n *   lex_code : string;\n * }\n *\n * type lexbuf = {\n *   refill_buff : lexbuf -> unit ;\n *   mutable lex_buffer : bytes;\n *   mutable lex_buffer_len : int;\n *   mutable lex_abs_pos : int;\n *   mutable lex_start_pos : int;\n *   mutable lex_curr_pos : int;\n *   mutable lex_last_pos : int;\n *   mutable lex_last_action : int;\n *   mutable lex_eof_reached : bool;\n *   mutable lex_mem : int array;\n *   mutable lex_start_p : position;\n *   mutable lex_curr_p;\n * }\n * @param tbl\n * @param start_state\n * @param lexbuf\n * @returns {any}\n */\nfunction $$caml_lex_engine(tbl, start_state, lexbuf) {\n    // Lexing.lexbuf\n    var lex_buffer = 1;\n    var lex_buffer_len = 2;\n    var lex_start_pos = 4;\n    var lex_curr_pos = 5;\n    var lex_last_pos = 6;\n    var lex_last_action = 7;\n    var lex_eof_reached = 8;\n    // Lexing.lex_tables\n    var lex_base = 0;\n    var lex_backtrk = 1;\n    var lex_default = 2;\n    var lex_trans = 3;\n    var lex_check = 4;\n    if (!tbl.lex_default) {\n        tbl.lex_base = caml_lex_array(tbl[lex_base]);\n        tbl.lex_backtrk = caml_lex_array(tbl[lex_backtrk]);\n        tbl.lex_check = caml_lex_array(tbl[lex_check]);\n        tbl.lex_trans = caml_lex_array(tbl[lex_trans]);\n        tbl.lex_default = caml_lex_array(tbl[lex_default]);\n    }\n    var c;\n    var state = start_state;\n    //var buffer = bytes_of_string(lexbuf[lex_buffer]);\n    var buffer = lexbuf[lex_buffer];\n    if (state >= 0) {\n        /* First entry */\n        lexbuf[lex_last_pos] = lexbuf[lex_start_pos] = lexbuf[lex_curr_pos];\n        lexbuf[lex_last_action] = -1;\n    }\n    else {\n        /* Reentry after refill */\n        state = -state - 1;\n    }\n    for (;;) {\n        /* Lookup base address or action number for current state */\n        var base = tbl.lex_base[state];\n        if (base < 0)\n            return -base - 1;\n        /* See if it's a backtrack point */\n        var backtrk = tbl.lex_backtrk[state];\n        if (backtrk >= 0) {\n            lexbuf[lex_last_pos] = lexbuf[lex_curr_pos];\n            lexbuf[lex_last_action] = backtrk;\n        }\n        /* See if we need a refill */\n        if (lexbuf[lex_curr_pos] >= lexbuf[lex_buffer_len]) {\n            if (lexbuf[lex_eof_reached] === 0)\n                return -state - 1;\n            else\n                c = 256;\n        }\n        else {\n            /* Read next input char */\n            c = buffer[lexbuf[lex_curr_pos]];\n            lexbuf[lex_curr_pos]++;\n        }\n        /* Determine next state */\n        if (tbl.lex_check[base + c] === state) {\n            state = tbl.lex_trans[base + c];\n        }\n        else {\n            state = tbl.lex_default[state];\n        }\n        /* If no transition on this char, return to last backtrack point */\n        if (state < 0) {\n            lexbuf[lex_curr_pos] = lexbuf[lex_last_pos];\n            if (lexbuf[lex_last_action] == -1)\n                fail();\n            else\n                return lexbuf[lex_last_action];\n        }\n        else {\n            /* Erase the EOF condition only if the EOF pseudo-character was\n             consumed by the automaton (i.e. there was no backtrack above)\n             */\n            if (c == 256)\n                lexbuf[lex_eof_reached] = 0;\n        }\n    }\n}\n\n/***********************************************/\n/* New lexer engine, with memory of positions  */\n/***********************************************/\n\n/**\n * s -> Lexing.lex_tables.lex_code\n * mem -> Lexing.lexbuf.lex_mem (* int array *)\n */          \n          \nfunction caml_lex_run_mem(s, i, mem, curr_pos) {\n    for (;;) {\n        var dst = s.charCodeAt(i);\n        i++;\n        if (dst == 0xff)\n            return;\n        var src = s.charCodeAt(i);\n        i++;\n        if (src == 0xff)\n            mem[dst] = curr_pos;\n        else\n            mem[dst] = mem[src];\n    }\n}\n\n\n/**\n * s -> Lexing.lex_tables.lex_code\n * mem -> Lexing.lexbuf.lex_mem (* int array *)\n */\n  \nfunction caml_lex_run_tag(s, i, mem) {\n    for (;;) {\n        var dst = s.charCodeAt(i);\n        i++;\n        if (dst == 0xff)\n            return;\n        var src = s.charCodeAt(i);\n        i++;\n        if (src == 0xff)\n            mem[dst] = -1;\n        else\n            mem[dst] = mem[src];\n    }\n}\n/**\n * external c_new_engine : lex_tables -> int -> lexbuf -> int = \"caml_new_lex_engine\"\n * @param tbl\n * @param start_state\n * @param lexbuf\n * @returns {any}\n */\nfunction $$caml_new_lex_engine(tbl, start_state, lexbuf) {\n    // Lexing.lexbuf\n    var lex_buffer = 1;\n    var lex_buffer_len = 2;\n    var lex_start_pos = 4;\n    var lex_curr_pos = 5;\n    var lex_last_pos = 6;\n    var lex_last_action = 7;\n    var lex_eof_reached = 8;\n    var lex_mem = 9;\n    // Lexing.lex_tables\n    var lex_base = 0;\n    var lex_backtrk = 1;\n    var lex_default = 2;\n    var lex_trans = 3;\n    var lex_check = 4;\n    var lex_base_code = 5;\n    var lex_backtrk_code = 6;\n    var lex_default_code = 7;\n    var lex_trans_code = 8;\n    var lex_check_code = 9;\n    var lex_code = 10;\n    if (!tbl.lex_default) {\n        tbl.lex_base = caml_lex_array(tbl[lex_base]);\n        tbl.lex_backtrk = caml_lex_array(tbl[lex_backtrk]);\n        tbl.lex_check = caml_lex_array(tbl[lex_check]);\n        tbl.lex_trans = caml_lex_array(tbl[lex_trans]);\n        tbl.lex_default = caml_lex_array(tbl[lex_default]);\n    }\n    if (!tbl.lex_default_code) {\n        tbl.lex_base_code = caml_lex_array(tbl[lex_base_code]);\n        tbl.lex_backtrk_code = caml_lex_array(tbl[lex_backtrk_code]);\n        tbl.lex_check_code = caml_lex_array(tbl[lex_check_code]);\n        tbl.lex_trans_code = caml_lex_array(tbl[lex_trans_code]);\n        tbl.lex_default_code = caml_lex_array(tbl[lex_default_code]);\n    }\n    if (tbl.lex_code == null) {\n        //tbl.lex_code = caml_bytes_of_string(tbl[lex_code]);\n        tbl.lex_code = (tbl[lex_code]);\n    }\n    var c, state = start_state;\n    //var buffer = caml_bytes_of_string(lexbuf[lex_buffer]);\n    var buffer = lexbuf[lex_buffer];\n    if (state >= 0) {\n        /* First entry */\n        lexbuf[lex_last_pos] = lexbuf[lex_start_pos] = lexbuf[lex_curr_pos];\n        lexbuf[lex_last_action] = -1;\n    }\n    else {\n        /* Reentry after refill */\n        state = -state - 1;\n    }\n    for (;;) {\n        /* Lookup base address or action number for current state */\n        var base = tbl.lex_base[state];\n        if (base < 0) {\n            var pc_off = tbl.lex_base_code[state];\n            caml_lex_run_tag(tbl.lex_code, pc_off, lexbuf[lex_mem]);\n            return -base - 1;\n        }\n        /* See if it's a backtrack point */\n        var backtrk = tbl.lex_backtrk[state];\n        if (backtrk >= 0) {\n            var pc_off = tbl.lex_backtrk_code[state];\n            caml_lex_run_tag(tbl.lex_code, pc_off, lexbuf[lex_mem]);\n            lexbuf[lex_last_pos] = lexbuf[lex_curr_pos];\n            lexbuf[lex_last_action] = backtrk;\n        }\n        /* See if we need a refill */\n        if (lexbuf[lex_curr_pos] >= lexbuf[lex_buffer_len]) {\n            if (lexbuf[lex_eof_reached] == 0)\n                return -state - 1;\n            else\n                c = 256;\n        }\n        else {\n            /* Read next input char */\n            c = buffer[lexbuf[lex_curr_pos]];\n            lexbuf[lex_curr_pos]++;\n        }\n        /* Determine next state */\n        var pstate = state;\n        if (tbl.lex_check[base + c] == state)\n            state = tbl.lex_trans[base + c];\n        else\n            state = tbl.lex_default[state];\n        /* If no transition on this char, return to last backtrack point */\n        if (state < 0) {\n            lexbuf[lex_curr_pos] = lexbuf[lex_last_pos];\n            if (lexbuf[lex_last_action] == -1)\n                fail();\n            else\n                return lexbuf[lex_last_action];\n        }\n        else {\n            /* If some transition, get and perform memory moves */\n            var base_code = tbl.lex_base_code[pstate], pc_off;\n            if (tbl.lex_check_code[base_code + c] == pstate)\n                pc_off = tbl.lex_trans_code[base_code + c];\n            else\n                pc_off = tbl.lex_default_code[pstate];\n            if (pc_off > 0)\n                caml_lex_run_mem(tbl.lex_code, pc_off, lexbuf[lex_mem], lexbuf[lex_curr_pos]);\n            /* Erase the EOF condition only if the EOF pseudo-character was\n             consumed by the automaton (i.e. there was no backtrack above)\n             */\n            if (c == 256)\n                lexbuf[lex_eof_reached] = 0;\n        }\n    }\n}\n\n;\n\nfunction caml_lex_engine(prim, prim$1, prim$2) {\n  return $$caml_lex_engine(prim, prim$1, prim$2);\n}\n\nfunction caml_new_lex_engine(prim, prim$1, prim$2) {\n  return $$caml_new_lex_engine(prim, prim$1, prim$2);\n}\n\nexports.fail = fail;\nexports.caml_lex_engine = caml_lex_engine;\nexports.caml_new_lex_engine = caml_new_lex_engine;\n/*  Not a pure module */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_lexer.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_missing_polyfill.js":
/*!******************************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_missing_polyfill.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nvar not_implemented = (function (s){ throw new Error(s)});\n\nexports.not_implemented = not_implemented;\n/* not_implemented Not a pure module */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_missing_polyfill.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_obj.js":
/*!*****************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_obj.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Block = __webpack_require__(/*! ./block.js */ \"./node_modules/bs-platform/lib/js/block.js\");\nvar Caml_primitive = __webpack_require__(/*! ./caml_primitive.js */ \"./node_modules/bs-platform/lib/js/caml_primitive.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction caml_obj_block(tag, size) {\n  var v = new Array(size);\n  v.tag = tag;\n  return v;\n}\n\nfunction caml_obj_dup(x) {\n  var len = x.length | 0;\n  var v = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    v[i] = x[i];\n  }\n  v.tag = x.tag | 0;\n  return v;\n}\n\nfunction caml_obj_truncate(x, new_size) {\n  var len = x.length | 0;\n  if (new_size <= 0 || new_size > len) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Obj.truncate\"\n        ];\n  } else if (len !== new_size) {\n    for(var i = new_size ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n      x[i] = 0;\n    }\n    x.length = new_size;\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_lazy_make_forward(x) {\n  return Block.__(250, [x]);\n}\n\nfunction caml_update_dummy(x, y) {\n  var len = y.length | 0;\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    x[i] = y[i];\n  }\n  var y_tag = y.tag | 0;\n  if (y_tag !== 0) {\n    x.tag = y_tag;\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_compare(_a, _b) {\n  while(true) {\n    var b = _b;\n    var a = _a;\n    if (a === b) {\n      return 0;\n    } else {\n      var a_type = typeof a;\n      var b_type = typeof b;\n      if (a_type === \"string\") {\n        return Caml_primitive.caml_string_compare(a, b);\n      } else {\n        var is_a_number = +(a_type === \"number\");\n        var is_b_number = +(b_type === \"number\");\n        if (is_a_number !== 0) {\n          if (is_b_number !== 0) {\n            return Caml_primitive.caml_int_compare(a, b);\n          } else {\n            return -1;\n          }\n        } else if (is_b_number !== 0) {\n          return 1;\n        } else if (a_type === \"boolean\" || a_type === \"undefined\" || a === null) {\n          var x = a;\n          var y = b;\n          if (x === y) {\n            return 0;\n          } else if (x < y) {\n            return -1;\n          } else {\n            return 1;\n          }\n        } else if (a_type === \"function\" || b_type === \"function\") {\n          throw [\n                Caml_builtin_exceptions.invalid_argument,\n                \"compare: functional value\"\n              ];\n        } else {\n          var tag_a = a.tag | 0;\n          var tag_b = b.tag | 0;\n          if (tag_a === 250) {\n            _a = a[0];\n            continue ;\n            \n          } else if (tag_b === 250) {\n            _b = b[0];\n            continue ;\n            \n          } else if (tag_a === 248) {\n            return Caml_primitive.caml_int_compare(a[1], b[1]);\n          } else if (tag_a === 251) {\n            throw [\n                  Caml_builtin_exceptions.invalid_argument,\n                  \"equal: abstract value\"\n                ];\n          } else if (tag_a !== tag_b) {\n            if (tag_a < tag_b) {\n              return -1;\n            } else {\n              return 1;\n            }\n          } else {\n            var len_a = a.length | 0;\n            var len_b = b.length | 0;\n            if (len_a === len_b) {\n              var a$1 = a;\n              var b$1 = b;\n              var _i = 0;\n              var same_length = len_a;\n              while(true) {\n                var i = _i;\n                if (i === same_length) {\n                  return 0;\n                } else {\n                  var res = caml_compare(a$1[i], b$1[i]);\n                  if (res !== 0) {\n                    return res;\n                  } else {\n                    _i = i + 1 | 0;\n                    continue ;\n                    \n                  }\n                }\n              };\n            } else if (len_a < len_b) {\n              var a$2 = a;\n              var b$2 = b;\n              var _i$1 = 0;\n              var short_length = len_a;\n              while(true) {\n                var i$1 = _i$1;\n                if (i$1 === short_length) {\n                  return -1;\n                } else {\n                  var res$1 = caml_compare(a$2[i$1], b$2[i$1]);\n                  if (res$1 !== 0) {\n                    return res$1;\n                  } else {\n                    _i$1 = i$1 + 1 | 0;\n                    continue ;\n                    \n                  }\n                }\n              };\n            } else {\n              var a$3 = a;\n              var b$3 = b;\n              var _i$2 = 0;\n              var short_length$1 = len_b;\n              while(true) {\n                var i$2 = _i$2;\n                if (i$2 === short_length$1) {\n                  return 1;\n                } else {\n                  var res$2 = caml_compare(a$3[i$2], b$3[i$2]);\n                  if (res$2 !== 0) {\n                    return res$2;\n                  } else {\n                    _i$2 = i$2 + 1 | 0;\n                    continue ;\n                    \n                  }\n                }\n              };\n            }\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction caml_equal(_a, _b) {\n  while(true) {\n    var b = _b;\n    var a = _a;\n    if (a === b) {\n      return /* true */1;\n    } else {\n      var a_type = typeof a;\n      if (a_type === \"string\" || a_type === \"number\" || a_type === \"boolean\" || a_type === \"undefined\" || a === null) {\n        return /* false */0;\n      } else {\n        var b_type = typeof b;\n        if (a_type === \"function\" || b_type === \"function\") {\n          throw [\n                Caml_builtin_exceptions.invalid_argument,\n                \"equal: functional value\"\n              ];\n        } else if (b_type === \"number\" || b_type === \"undefined\" || b === null) {\n          return /* false */0;\n        } else {\n          var tag_a = a.tag | 0;\n          var tag_b = b.tag | 0;\n          if (tag_a === 250) {\n            _a = a[0];\n            continue ;\n            \n          } else if (tag_b === 250) {\n            _b = b[0];\n            continue ;\n            \n          } else if (tag_a === 248) {\n            return +(a[1] === b[1]);\n          } else if (tag_a === 251) {\n            throw [\n                  Caml_builtin_exceptions.invalid_argument,\n                  \"equal: abstract value\"\n                ];\n          } else if (tag_a !== tag_b) {\n            return /* false */0;\n          } else {\n            var len_a = a.length | 0;\n            var len_b = b.length | 0;\n            if (len_a === len_b) {\n              var a$1 = a;\n              var b$1 = b;\n              var _i = 0;\n              var same_length = len_a;\n              while(true) {\n                var i = _i;\n                if (i === same_length) {\n                  return /* true */1;\n                } else if (caml_equal(a$1[i], b$1[i])) {\n                  _i = i + 1 | 0;\n                  continue ;\n                  \n                } else {\n                  return /* false */0;\n                }\n              };\n            } else {\n              return /* false */0;\n            }\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction caml_equal_null(x, y) {\n  if (y !== null) {\n    return caml_equal(x, y);\n  } else {\n    return +(x === y);\n  }\n}\n\nfunction caml_equal_undefined(x, y) {\n  if (y !== undefined) {\n    return caml_equal(x, y);\n  } else {\n    return +(x === y);\n  }\n}\n\nfunction caml_equal_nullable(x, y) {\n  if (y == null) {\n    return +(x === y);\n  } else {\n    return caml_equal(x, y);\n  }\n}\n\nfunction caml_notequal(a, b) {\n  return 1 - caml_equal(a, b);\n}\n\nfunction caml_greaterequal(a, b) {\n  return +(caml_compare(a, b) >= 0);\n}\n\nfunction caml_greaterthan(a, b) {\n  return +(caml_compare(a, b) > 0);\n}\n\nfunction caml_lessequal(a, b) {\n  return +(caml_compare(a, b) <= 0);\n}\n\nfunction caml_lessthan(a, b) {\n  return +(caml_compare(a, b) < 0);\n}\n\nfunction caml_min(x, y) {\n  if (caml_compare(x, y) <= 0) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_max(x, y) {\n  if (caml_compare(x, y) >= 0) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nexports.caml_obj_block = caml_obj_block;\nexports.caml_obj_dup = caml_obj_dup;\nexports.caml_obj_truncate = caml_obj_truncate;\nexports.caml_lazy_make_forward = caml_lazy_make_forward;\nexports.caml_update_dummy = caml_update_dummy;\nexports.caml_compare = caml_compare;\nexports.caml_equal = caml_equal;\nexports.caml_equal_null = caml_equal_null;\nexports.caml_equal_undefined = caml_equal_undefined;\nexports.caml_equal_nullable = caml_equal_nullable;\nexports.caml_notequal = caml_notequal;\nexports.caml_greaterequal = caml_greaterequal;\nexports.caml_greaterthan = caml_greaterthan;\nexports.caml_lessthan = caml_lessthan;\nexports.caml_lessequal = caml_lessequal;\nexports.caml_min = caml_min;\nexports.caml_max = caml_max;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_obj.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_primitive.js":
/*!***********************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_primitive.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nfunction caml_int_compare(x, y) {\n  if (x < y) {\n    return -1;\n  } else if (x === y) {\n    return 0;\n  } else {\n    return 1;\n  }\n}\n\nfunction caml_float_compare(x, y) {\n  if (x === y) {\n    return 0;\n  } else if (x < y) {\n    return -1;\n  } else if (x > y || x === x) {\n    return 1;\n  } else if (y === y) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_string_compare(s1, s2) {\n  if (s1 === s2) {\n    return 0;\n  } else if (s1 < s2) {\n    return -1;\n  } else {\n    return 1;\n  }\n}\n\nfunction caml_int_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_float_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_string_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_nativeint_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_int32_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_int_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_float_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_string_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_nativeint_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_int32_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nvar caml_nativeint_compare = caml_int_compare;\n\nvar caml_int32_compare = caml_int_compare;\n\nexports.caml_int_compare = caml_int_compare;\nexports.caml_float_compare = caml_float_compare;\nexports.caml_nativeint_compare = caml_nativeint_compare;\nexports.caml_string_compare = caml_string_compare;\nexports.caml_int32_compare = caml_int32_compare;\nexports.caml_int_min = caml_int_min;\nexports.caml_float_min = caml_float_min;\nexports.caml_string_min = caml_string_min;\nexports.caml_nativeint_min = caml_nativeint_min;\nexports.caml_int32_min = caml_int32_min;\nexports.caml_int_max = caml_int_max;\nexports.caml_float_max = caml_float_max;\nexports.caml_string_max = caml_string_max;\nexports.caml_nativeint_max = caml_nativeint_max;\nexports.caml_int32_max = caml_int32_max;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_primitive.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_string.js":
/*!********************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_string.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction string_of_char(prim) {\n  return String.fromCharCode(prim);\n}\n\nfunction caml_string_get(s, i) {\n  if (i >= s.length || i < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    return s.charCodeAt(i);\n  }\n}\n\nfunction caml_create_string(len) {\n  if (len < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.create\"\n        ];\n  } else {\n    var result = new Array(len);\n    for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n      result[i] = /* \"\\000\" */0;\n    }\n    return result;\n  }\n}\n\nfunction caml_fill_string(s, i, l, c) {\n  if (l > 0) {\n    for(var k = i ,k_finish = (l + i | 0) - 1 | 0; k <= k_finish; ++k){\n      s[k] = c;\n    }\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_blit_string(s1, i1, s2, i2, len) {\n  if (len > 0) {\n    var off1 = s1.length - i1 | 0;\n    if (len <= off1) {\n      for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n        s2[i2 + i | 0] = s1.charCodeAt(i1 + i | 0);\n      }\n      return /* () */0;\n    } else {\n      for(var i$1 = 0 ,i_finish$1 = off1 - 1 | 0; i$1 <= i_finish$1; ++i$1){\n        s2[i2 + i$1 | 0] = s1.charCodeAt(i1 + i$1 | 0);\n      }\n      for(var i$2 = off1 ,i_finish$2 = len - 1 | 0; i$2 <= i_finish$2; ++i$2){\n        s2[i2 + i$2 | 0] = /* \"\\000\" */0;\n      }\n      return /* () */0;\n    }\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_blit_bytes(s1, i1, s2, i2, len) {\n  if (len > 0) {\n    if (s1 === s2) {\n      var s1$1 = s1;\n      var i1$1 = i1;\n      var i2$1 = i2;\n      var len$1 = len;\n      if (i1$1 < i2$1) {\n        var range_a = (s1$1.length - i2$1 | 0) - 1 | 0;\n        var range_b = len$1 - 1 | 0;\n        var range = range_a > range_b ? range_b : range_a;\n        for(var j = range; j >= 0; --j){\n          s1$1[i2$1 + j | 0] = s1$1[i1$1 + j | 0];\n        }\n        return /* () */0;\n      } else if (i1$1 > i2$1) {\n        var range_a$1 = (s1$1.length - i1$1 | 0) - 1 | 0;\n        var range_b$1 = len$1 - 1 | 0;\n        var range$1 = range_a$1 > range_b$1 ? range_b$1 : range_a$1;\n        for(var k = 0; k <= range$1; ++k){\n          s1$1[i2$1 + k | 0] = s1$1[i1$1 + k | 0];\n        }\n        return /* () */0;\n      } else {\n        return 0;\n      }\n    } else {\n      var off1 = s1.length - i1 | 0;\n      if (len <= off1) {\n        for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n          s2[i2 + i | 0] = s1[i1 + i | 0];\n        }\n        return /* () */0;\n      } else {\n        for(var i$1 = 0 ,i_finish$1 = off1 - 1 | 0; i$1 <= i_finish$1; ++i$1){\n          s2[i2 + i$1 | 0] = s1[i1 + i$1 | 0];\n        }\n        for(var i$2 = off1 ,i_finish$2 = len - 1 | 0; i$2 <= i_finish$2; ++i$2){\n          s2[i2 + i$2 | 0] = /* \"\\000\" */0;\n        }\n        return /* () */0;\n      }\n    }\n  } else {\n    return 0;\n  }\n}\n\nfunction bytes_of_string(s) {\n  var len = s.length;\n  var res = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    res[i] = s.charCodeAt(i);\n  }\n  return res;\n}\n\nfunction bytes_to_string(a) {\n  var bytes = a;\n  var i = 0;\n  var len = a.length;\n  var s = \"\";\n  var s_len = len;\n  if (i === 0 && len <= 4096 && len === bytes.length) {\n    return String.fromCharCode.apply(null,bytes);\n  } else {\n    var offset = 0;\n    while(s_len > 0) {\n      var next = s_len < 1024 ? s_len : 1024;\n      var tmp_bytes = new Array(next);\n      caml_blit_bytes(bytes, offset, tmp_bytes, 0, next);\n      s = s + String.fromCharCode.apply(null,tmp_bytes);\n      s_len = s_len - next | 0;\n      offset = offset + next | 0;\n    };\n    return s;\n  }\n}\n\nfunction caml_string_of_char_array(chars) {\n  var len = chars.length;\n  var bytes = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    bytes[i] = chars[i];\n  }\n  return bytes_to_string(bytes);\n}\n\nfunction caml_is_printable(c) {\n  if (c > 31) {\n    return +(c < 127);\n  } else {\n    return /* false */0;\n  }\n}\n\nfunction caml_string_get16(s, i) {\n  return s.charCodeAt(i) + (s.charCodeAt(i + 1 | 0) << 8) | 0;\n}\n\nfunction caml_string_get32(s, i) {\n  return ((s.charCodeAt(i) + (s.charCodeAt(i + 1 | 0) << 8) | 0) + (s.charCodeAt(i + 2 | 0) << 16) | 0) + (s.charCodeAt(i + 3 | 0) << 24) | 0;\n}\n\nfunction get(s, i) {\n  if (i < 0 || i >= s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    return s.charCodeAt(i);\n  }\n}\n\nexports.bytes_of_string = bytes_of_string;\nexports.bytes_to_string = bytes_to_string;\nexports.caml_is_printable = caml_is_printable;\nexports.caml_string_of_char_array = caml_string_of_char_array;\nexports.caml_string_get = caml_string_get;\nexports.caml_create_string = caml_create_string;\nexports.caml_fill_string = caml_fill_string;\nexports.caml_blit_string = caml_blit_string;\nexports.caml_blit_bytes = caml_blit_bytes;\nexports.caml_string_get16 = caml_string_get16;\nexports.caml_string_get32 = caml_string_get32;\nexports.string_of_char = string_of_char;\nexports.get = get;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_string.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_sys.js":
/*!*****************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_sys.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction caml_sys_getenv(s) {\n  var match = typeof (process) === \"undefined\" ? undefined : (process);\n  if (match !== undefined) {\n    var match$1 = match.env[s];\n    if (match$1 !== undefined) {\n      return match$1;\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  } else {\n    throw Caml_builtin_exceptions.not_found;\n  }\n}\n\nfunction caml_sys_time() {\n  var match = typeof (process) === \"undefined\" ? undefined : (process);\n  if (match !== undefined) {\n    return match.uptime();\n  } else {\n    return -1;\n  }\n}\n\nfunction caml_sys_random_seed() {\n  return /* array */[((Date.now() | 0) ^ 4294967295) * Math.random() | 0];\n}\n\nfunction caml_sys_system_command() {\n  return 127;\n}\n\nfunction caml_sys_getcwd() {\n  var match = typeof (process) === \"undefined\" ? undefined : (process);\n  if (match !== undefined) {\n    return match.cwd();\n  } else {\n    return \"/\";\n  }\n}\n\nfunction caml_sys_get_argv() {\n  var match = typeof (process) === \"undefined\" ? undefined : (process);\n  if (match !== undefined) {\n    if (match.argv == null) {\n      return /* tuple */[\n              \"\",\n              /* array */[\"\"]\n            ];\n    } else {\n      return /* tuple */[\n              match.argv[0],\n              match.argv\n            ];\n    }\n  } else {\n    return /* tuple */[\n            \"\",\n            /* array */[\"\"]\n          ];\n  }\n}\n\nfunction caml_sys_exit(exit_code) {\n  var match = typeof (process) === \"undefined\" ? undefined : (process);\n  if (match !== undefined) {\n    return match.exit(exit_code);\n  } else {\n    return /* () */0;\n  }\n}\n\nfunction caml_sys_is_directory() {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_sys_is_directory not implemented\"\n      ];\n}\n\nfunction caml_sys_file_exists() {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_sys_file_exists not implemented\"\n      ];\n}\n\nexports.caml_sys_getenv = caml_sys_getenv;\nexports.caml_sys_time = caml_sys_time;\nexports.caml_sys_random_seed = caml_sys_random_seed;\nexports.caml_sys_system_command = caml_sys_system_command;\nexports.caml_sys_getcwd = caml_sys_getcwd;\nexports.caml_sys_get_argv = caml_sys_get_argv;\nexports.caml_sys_exit = caml_sys_exit;\nexports.caml_sys_is_directory = caml_sys_is_directory;\nexports.caml_sys_file_exists = caml_sys_file_exists;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_sys.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/caml_utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/caml_utils.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n\nvar repeat = ( (String.prototype.repeat && function (count,self){return self.repeat(count)}) ||\n                                                  function(count , self) {\n        if (self.length == 0 || count == 0) {\n            return '';\n        }\n        // Ensuring count is a 31-bit integer allows us to heavily optimize the\n        // main part. But anyway, most current (August 2014) browsers can't handle\n        // strings 1 << 28 chars or longer, so:\n        if (self.length * count >= 1 << 28) {\n            throw new RangeError('repeat count must not overflow maximum string size');\n        }\n        var rpt = '';\n        for (;;) {\n            if ((count & 1) == 1) {\n                rpt += self;\n            }\n            count >>>= 1;\n            if (count == 0) {\n                break;\n            }\n            self += self;\n        }\n        return rpt;\n    }\n);\n\nexports.repeat = repeat;\n/* repeat Not a pure module */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/caml_utils.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/camlinternalFormat.js":
/*!***************************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/camlinternalFormat.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Char = __webpack_require__(/*! ./char.js */ \"./node_modules/bs-platform/lib/js/char.js\");\nvar Block = __webpack_require__(/*! ./block.js */ \"./node_modules/bs-platform/lib/js/block.js\");\nvar Bytes = __webpack_require__(/*! ./bytes.js */ \"./node_modules/bs-platform/lib/js/bytes.js\");\nvar Curry = __webpack_require__(/*! ./curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Buffer = __webpack_require__(/*! ./buffer.js */ \"./node_modules/bs-platform/lib/js/buffer.js\");\nvar Js_exn = __webpack_require__(/*! ./js_exn.js */ \"./node_modules/bs-platform/lib/js/js_exn.js\");\nvar $$String = __webpack_require__(/*! ./string.js */ \"./node_modules/bs-platform/lib/js/string.js\");\nvar Caml_io = __webpack_require__(/*! ./caml_io.js */ \"./node_modules/bs-platform/lib/js/caml_io.js\");\nvar Caml_obj = __webpack_require__(/*! ./caml_obj.js */ \"./node_modules/bs-platform/lib/js/caml_obj.js\");\nvar Caml_bytes = __webpack_require__(/*! ./caml_bytes.js */ \"./node_modules/bs-platform/lib/js/caml_bytes.js\");\nvar Caml_float = __webpack_require__(/*! ./caml_float.js */ \"./node_modules/bs-platform/lib/js/caml_float.js\");\nvar Caml_int32 = __webpack_require__(/*! ./caml_int32.js */ \"./node_modules/bs-platform/lib/js/caml_int32.js\");\nvar Pervasives = __webpack_require__(/*! ./pervasives.js */ \"./node_modules/bs-platform/lib/js/pervasives.js\");\nvar Caml_format = __webpack_require__(/*! ./caml_format.js */ \"./node_modules/bs-platform/lib/js/caml_format.js\");\nvar Caml_string = __webpack_require__(/*! ./caml_string.js */ \"./node_modules/bs-platform/lib/js/caml_string.js\");\nvar Caml_primitive = __webpack_require__(/*! ./caml_primitive.js */ \"./node_modules/bs-platform/lib/js/caml_primitive.js\");\nvar Caml_exceptions = __webpack_require__(/*! ./caml_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_exceptions.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\nvar CamlinternalFormatBasics = __webpack_require__(/*! ./camlinternalFormatBasics.js */ \"./node_modules/bs-platform/lib/js/camlinternalFormatBasics.js\");\n\nfunction create_char_set() {\n  return Bytes.make(32, /* \"\\000\" */0);\n}\n\nfunction add_in_char_set(char_set, c) {\n  var str_ind = (c >>> 3);\n  var mask = (1 << (c & 7));\n  char_set[str_ind] = Pervasives.char_of_int(Caml_bytes.get(char_set, str_ind) | mask);\n  return /* () */0;\n}\n\nvar freeze_char_set = Bytes.to_string;\n\nfunction rev_char_set(char_set) {\n  var char_set$prime = Bytes.make(32, /* \"\\000\" */0);\n  for(var i = 0; i <= 31; ++i){\n    char_set$prime[i] = Pervasives.char_of_int(Caml_string.get(char_set, i) ^ 255);\n  }\n  return Caml_string.bytes_to_string(char_set$prime);\n}\n\nfunction is_in_char_set(char_set, c) {\n  var str_ind = (c >>> 3);\n  var mask = (1 << (c & 7));\n  return +((Caml_string.get(char_set, str_ind) & mask) !== 0);\n}\n\nfunction pad_of_pad_opt(pad_opt) {\n  if (pad_opt) {\n    return /* Lit_padding */Block.__(0, [\n              /* Right */1,\n              pad_opt[0]\n            ]);\n  } else {\n    return /* No_padding */0;\n  }\n}\n\nfunction prec_of_prec_opt(prec_opt) {\n  if (prec_opt) {\n    return /* Lit_precision */[prec_opt[0]];\n  } else {\n    return /* No_precision */0;\n  }\n}\n\nfunction param_format_of_ignored_format(ign, fmt) {\n  if (typeof ign === \"number\") {\n    switch (ign) {\n      case 0 : \n          return /* Param_format_EBB */[/* Char */Block.__(0, [fmt])];\n      case 1 : \n          return /* Param_format_EBB */[/* Caml_char */Block.__(1, [fmt])];\n      case 2 : \n          return /* Param_format_EBB */[/* Bool */Block.__(9, [fmt])];\n      case 3 : \n          return /* Param_format_EBB */[/* Reader */Block.__(19, [fmt])];\n      case 4 : \n          return /* Param_format_EBB */[/* Scan_next_char */Block.__(22, [fmt])];\n      \n    }\n  } else {\n    switch (ign.tag | 0) {\n      case 0 : \n          return /* Param_format_EBB */[/* String */Block.__(2, [\n                      pad_of_pad_opt(ign[0]),\n                      fmt\n                    ])];\n      case 1 : \n          return /* Param_format_EBB */[/* Caml_string */Block.__(3, [\n                      pad_of_pad_opt(ign[0]),\n                      fmt\n                    ])];\n      case 2 : \n          return /* Param_format_EBB */[/* Int */Block.__(4, [\n                      ign[0],\n                      pad_of_pad_opt(ign[1]),\n                      /* No_precision */0,\n                      fmt\n                    ])];\n      case 3 : \n          return /* Param_format_EBB */[/* Int32 */Block.__(5, [\n                      ign[0],\n                      pad_of_pad_opt(ign[1]),\n                      /* No_precision */0,\n                      fmt\n                    ])];\n      case 4 : \n          return /* Param_format_EBB */[/* Nativeint */Block.__(6, [\n                      ign[0],\n                      pad_of_pad_opt(ign[1]),\n                      /* No_precision */0,\n                      fmt\n                    ])];\n      case 5 : \n          return /* Param_format_EBB */[/* Int64 */Block.__(7, [\n                      ign[0],\n                      pad_of_pad_opt(ign[1]),\n                      /* No_precision */0,\n                      fmt\n                    ])];\n      case 6 : \n          return /* Param_format_EBB */[/* Float */Block.__(8, [\n                      /* Float_f */0,\n                      pad_of_pad_opt(ign[0]),\n                      prec_of_prec_opt(ign[1]),\n                      fmt\n                    ])];\n      case 7 : \n          return /* Param_format_EBB */[/* Format_arg */Block.__(13, [\n                      ign[0],\n                      ign[1],\n                      fmt\n                    ])];\n      case 8 : \n          return /* Param_format_EBB */[/* Format_subst */Block.__(14, [\n                      ign[0],\n                      ign[1],\n                      fmt\n                    ])];\n      case 9 : \n          return /* Param_format_EBB */[/* Scan_char_set */Block.__(20, [\n                      ign[0],\n                      ign[1],\n                      fmt\n                    ])];\n      case 10 : \n          return /* Param_format_EBB */[/* Scan_get_counter */Block.__(21, [\n                      ign[0],\n                      fmt\n                    ])];\n      \n    }\n  }\n}\n\nfunction buffer_check_size(buf, overhead) {\n  var len = buf[/* bytes */1].length;\n  var min_len = buf[/* ind */0] + overhead | 0;\n  if (min_len > len) {\n    var new_len = Caml_primitive.caml_int_max((len << 1), min_len);\n    var new_str = Caml_string.caml_create_string(new_len);\n    Bytes.blit(buf[/* bytes */1], 0, new_str, 0, len);\n    buf[/* bytes */1] = new_str;\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nfunction buffer_add_char(buf, c) {\n  buffer_check_size(buf, 1);\n  buf[/* bytes */1][buf[/* ind */0]] = c;\n  buf[/* ind */0] = buf[/* ind */0] + 1 | 0;\n  return /* () */0;\n}\n\nfunction buffer_add_string(buf, s) {\n  var str_len = s.length;\n  buffer_check_size(buf, str_len);\n  $$String.blit(s, 0, buf[/* bytes */1], buf[/* ind */0], str_len);\n  buf[/* ind */0] = buf[/* ind */0] + str_len | 0;\n  return /* () */0;\n}\n\nfunction buffer_contents(buf) {\n  return Bytes.sub_string(buf[/* bytes */1], 0, buf[/* ind */0]);\n}\n\nfunction char_of_iconv(iconv) {\n  switch (iconv) {\n    case 0 : \n    case 1 : \n    case 2 : \n        return /* \"d\" */100;\n    case 3 : \n    case 4 : \n    case 5 : \n        return /* \"i\" */105;\n    case 6 : \n    case 7 : \n        return /* \"x\" */120;\n    case 8 : \n    case 9 : \n        return /* \"X\" */88;\n    case 10 : \n    case 11 : \n        return /* \"o\" */111;\n    case 12 : \n        return /* \"u\" */117;\n    \n  }\n}\n\nfunction char_of_fconv(fconv) {\n  switch (fconv) {\n    case 0 : \n    case 1 : \n    case 2 : \n        return /* \"f\" */102;\n    case 3 : \n    case 4 : \n    case 5 : \n        return /* \"e\" */101;\n    case 6 : \n    case 7 : \n    case 8 : \n        return /* \"E\" */69;\n    case 9 : \n    case 10 : \n    case 11 : \n        return /* \"g\" */103;\n    case 12 : \n    case 13 : \n    case 14 : \n        return /* \"G\" */71;\n    case 15 : \n        return /* \"F\" */70;\n    \n  }\n}\n\nfunction char_of_counter(counter) {\n  switch (counter) {\n    case 0 : \n        return /* \"l\" */108;\n    case 1 : \n        return /* \"n\" */110;\n    case 2 : \n        return /* \"N\" */78;\n    \n  }\n}\n\nfunction bprint_char_set(buf, char_set) {\n  var print_char = function (buf, i) {\n    var c = Pervasives.char_of_int(i);\n    if (c !== 37) {\n      if (c !== 64) {\n        return buffer_add_char(buf, c);\n      } else {\n        buffer_add_char(buf, /* \"%\" */37);\n        return buffer_add_char(buf, /* \"@\" */64);\n      }\n    } else {\n      buffer_add_char(buf, /* \"%\" */37);\n      return buffer_add_char(buf, /* \"%\" */37);\n    }\n  };\n  var print_out = function (set, _i) {\n    while(true) {\n      var i = _i;\n      if (i < 256) {\n        if (is_in_char_set(set, Pervasives.char_of_int(i))) {\n          var set$1 = set;\n          var i$1 = i;\n          var match = Pervasives.char_of_int(i$1);\n          var switcher = match - 45 | 0;\n          if (switcher > 48 || switcher < 0) {\n            if (switcher >= 210) {\n              return print_char(buf, 255);\n            } else {\n              return print_second(set$1, i$1 + 1 | 0);\n            }\n          } else if (switcher > 47 || switcher < 1) {\n            return print_out(set$1, i$1 + 1 | 0);\n          } else {\n            return print_second(set$1, i$1 + 1 | 0);\n          }\n        } else {\n          _i = i + 1 | 0;\n          continue ;\n          \n        }\n      } else {\n        return 0;\n      }\n    };\n  };\n  var print_second = function (set, i) {\n    if (is_in_char_set(set, Pervasives.char_of_int(i))) {\n      var match = Pervasives.char_of_int(i);\n      var exit = 0;\n      var switcher = match - 45 | 0;\n      if (switcher > 48 || switcher < 0) {\n        if (switcher >= 210) {\n          print_char(buf, 254);\n          return print_char(buf, 255);\n        } else {\n          exit = 1;\n        }\n      } else if ((switcher > 47 || switcher < 1) && !is_in_char_set(set, Pervasives.char_of_int(i + 1 | 0))) {\n        print_char(buf, i - 1 | 0);\n        return print_out(set, i + 1 | 0);\n      } else {\n        exit = 1;\n      }\n      if (exit === 1) {\n        if (is_in_char_set(set, Pervasives.char_of_int(i + 1 | 0))) {\n          var set$1 = set;\n          var i$1 = i - 1 | 0;\n          var _j = i + 2 | 0;\n          while(true) {\n            var j = _j;\n            if (j === 256 || !is_in_char_set(set$1, Pervasives.char_of_int(j))) {\n              print_char(buf, i$1);\n              print_char(buf, /* \"-\" */45);\n              print_char(buf, j - 1 | 0);\n              if (j < 256) {\n                return print_out(set$1, j + 1 | 0);\n              } else {\n                return 0;\n              }\n            } else {\n              _j = j + 1 | 0;\n              continue ;\n              \n            }\n          };\n        } else {\n          print_char(buf, i - 1 | 0);\n          print_char(buf, i);\n          return print_out(set, i + 2 | 0);\n        }\n      }\n      \n    } else {\n      print_char(buf, i - 1 | 0);\n      return print_out(set, i + 1 | 0);\n    }\n  };\n  var print_start = function (set) {\n    var is_alone = function (c) {\n      var before = Char.chr(c - 1 | 0);\n      var after = Char.chr(c + 1 | 0);\n      if (is_in_char_set(set, c)) {\n        return 1 - (is_in_char_set(set, before) && is_in_char_set(set, after));\n      } else {\n        return /* false */0;\n      }\n    };\n    if (is_alone(/* \"]\" */93)) {\n      buffer_add_char(buf, /* \"]\" */93);\n    }\n    print_out(set, 1);\n    if (is_alone(/* \"-\" */45)) {\n      return buffer_add_char(buf, /* \"-\" */45);\n    } else {\n      return 0;\n    }\n  };\n  buffer_add_char(buf, /* \"[\" */91);\n  print_start(is_in_char_set(char_set, /* \"\\000\" */0) ? (buffer_add_char(buf, /* \"^\" */94), rev_char_set(char_set)) : char_set);\n  return buffer_add_char(buf, /* \"]\" */93);\n}\n\nfunction bprint_padty(buf, padty) {\n  switch (padty) {\n    case 0 : \n        return buffer_add_char(buf, /* \"-\" */45);\n    case 1 : \n        return /* () */0;\n    case 2 : \n        return buffer_add_char(buf, /* \"0\" */48);\n    \n  }\n}\n\nfunction bprint_ignored_flag(buf, ign_flag) {\n  if (ign_flag) {\n    return buffer_add_char(buf, /* \"_\" */95);\n  } else {\n    return 0;\n  }\n}\n\nfunction bprint_pad_opt(buf, pad_opt) {\n  if (pad_opt) {\n    return buffer_add_string(buf, String(pad_opt[0]));\n  } else {\n    return /* () */0;\n  }\n}\n\nfunction bprint_padding(buf, pad) {\n  if (typeof pad === \"number\") {\n    return /* () */0;\n  } else {\n    bprint_padty(buf, pad[0]);\n    if (pad.tag) {\n      return buffer_add_char(buf, /* \"*\" */42);\n    } else {\n      return buffer_add_string(buf, String(pad[1]));\n    }\n  }\n}\n\nfunction bprint_precision(buf, prec) {\n  if (typeof prec === \"number\") {\n    if (prec !== 0) {\n      return buffer_add_string(buf, \".*\");\n    } else {\n      return /* () */0;\n    }\n  } else {\n    buffer_add_char(buf, /* \".\" */46);\n    return buffer_add_string(buf, String(prec[0]));\n  }\n}\n\nfunction bprint_iconv_flag(buf, iconv) {\n  switch (iconv) {\n    case 1 : \n    case 4 : \n        return buffer_add_char(buf, /* \"+\" */43);\n    case 2 : \n    case 5 : \n        return buffer_add_char(buf, /* \" \" */32);\n    case 7 : \n    case 9 : \n    case 11 : \n        return buffer_add_char(buf, /* \"#\" */35);\n    case 0 : \n    case 3 : \n    case 6 : \n    case 8 : \n    case 10 : \n    case 12 : \n        return /* () */0;\n    \n  }\n}\n\nfunction bprint_int_fmt(buf, ign_flag, iconv, pad, prec) {\n  buffer_add_char(buf, /* \"%\" */37);\n  bprint_ignored_flag(buf, ign_flag);\n  bprint_iconv_flag(buf, iconv);\n  bprint_padding(buf, pad);\n  bprint_precision(buf, prec);\n  return buffer_add_char(buf, char_of_iconv(iconv));\n}\n\nfunction bprint_altint_fmt(buf, ign_flag, iconv, pad, prec, c) {\n  buffer_add_char(buf, /* \"%\" */37);\n  bprint_ignored_flag(buf, ign_flag);\n  bprint_iconv_flag(buf, iconv);\n  bprint_padding(buf, pad);\n  bprint_precision(buf, prec);\n  buffer_add_char(buf, c);\n  return buffer_add_char(buf, char_of_iconv(iconv));\n}\n\nfunction bprint_fconv_flag(buf, fconv) {\n  switch (fconv) {\n    case 1 : \n    case 4 : \n    case 7 : \n    case 10 : \n    case 13 : \n        return buffer_add_char(buf, /* \"+\" */43);\n    case 2 : \n    case 5 : \n    case 8 : \n    case 11 : \n    case 14 : \n        return buffer_add_char(buf, /* \" \" */32);\n    case 0 : \n    case 3 : \n    case 6 : \n    case 9 : \n    case 12 : \n    case 15 : \n        return /* () */0;\n    \n  }\n}\n\nfunction bprint_float_fmt(buf, ign_flag, fconv, pad, prec) {\n  buffer_add_char(buf, /* \"%\" */37);\n  bprint_ignored_flag(buf, ign_flag);\n  bprint_fconv_flag(buf, fconv);\n  bprint_padding(buf, pad);\n  bprint_precision(buf, prec);\n  return buffer_add_char(buf, char_of_fconv(fconv));\n}\n\nfunction string_of_formatting_lit(formatting_lit) {\n  if (typeof formatting_lit === \"number\") {\n    switch (formatting_lit) {\n      case 0 : \n          return \"@]\";\n      case 1 : \n          return \"@}\";\n      case 2 : \n          return \"@?\";\n      case 3 : \n          return \"@\\n\";\n      case 4 : \n          return \"@.\";\n      case 5 : \n          return \"@@\";\n      case 6 : \n          return \"@%\";\n      \n    }\n  } else {\n    switch (formatting_lit.tag | 0) {\n      case 0 : \n      case 1 : \n          return formatting_lit[0];\n      case 2 : \n          return \"@\" + Caml_string.bytes_to_string(Bytes.make(1, formatting_lit[0]));\n      \n    }\n  }\n}\n\nfunction string_of_formatting_gen(formatting_gen) {\n  return formatting_gen[0][1];\n}\n\nfunction bprint_char_literal(buf, chr) {\n  if (chr !== 37) {\n    return buffer_add_char(buf, chr);\n  } else {\n    return buffer_add_string(buf, \"%%\");\n  }\n}\n\nfunction bprint_string_literal(buf, str) {\n  for(var i = 0 ,i_finish = str.length - 1 | 0; i <= i_finish; ++i){\n    bprint_char_literal(buf, Caml_string.get(str, i));\n  }\n  return /* () */0;\n}\n\nfunction bprint_fmtty(buf, _fmtty) {\n  while(true) {\n    var fmtty = _fmtty;\n    if (typeof fmtty === \"number\") {\n      return /* () */0;\n    } else {\n      switch (fmtty.tag | 0) {\n        case 0 : \n            buffer_add_string(buf, \"%c\");\n            _fmtty = fmtty[0];\n            continue ;\n            case 1 : \n            buffer_add_string(buf, \"%s\");\n            _fmtty = fmtty[0];\n            continue ;\n            case 2 : \n            buffer_add_string(buf, \"%i\");\n            _fmtty = fmtty[0];\n            continue ;\n            case 3 : \n            buffer_add_string(buf, \"%li\");\n            _fmtty = fmtty[0];\n            continue ;\n            case 4 : \n            buffer_add_string(buf, \"%ni\");\n            _fmtty = fmtty[0];\n            continue ;\n            case 5 : \n            buffer_add_string(buf, \"%Li\");\n            _fmtty = fmtty[0];\n            continue ;\n            case 6 : \n            buffer_add_string(buf, \"%f\");\n            _fmtty = fmtty[0];\n            continue ;\n            case 7 : \n            buffer_add_string(buf, \"%B\");\n            _fmtty = fmtty[0];\n            continue ;\n            case 8 : \n            buffer_add_string(buf, \"%{\");\n            bprint_fmtty(buf, fmtty[0]);\n            buffer_add_string(buf, \"%}\");\n            _fmtty = fmtty[1];\n            continue ;\n            case 9 : \n            buffer_add_string(buf, \"%(\");\n            bprint_fmtty(buf, fmtty[0]);\n            buffer_add_string(buf, \"%)\");\n            _fmtty = fmtty[2];\n            continue ;\n            case 10 : \n            buffer_add_string(buf, \"%a\");\n            _fmtty = fmtty[0];\n            continue ;\n            case 11 : \n            buffer_add_string(buf, \"%t\");\n            _fmtty = fmtty[0];\n            continue ;\n            case 12 : \n            buffer_add_string(buf, \"%?\");\n            _fmtty = fmtty[0];\n            continue ;\n            case 13 : \n            buffer_add_string(buf, \"%r\");\n            _fmtty = fmtty[0];\n            continue ;\n            case 14 : \n            buffer_add_string(buf, \"%_r\");\n            _fmtty = fmtty[0];\n            continue ;\n            \n      }\n    }\n  };\n}\n\nfunction int_of_custom_arity(param) {\n  if (param) {\n    return 1 + int_of_custom_arity(param[0]) | 0;\n  } else {\n    return 0;\n  }\n}\n\nfunction bprint_fmt(buf, fmt) {\n  var _fmt = fmt;\n  var _ign_flag = /* false */0;\n  while(true) {\n    var ign_flag = _ign_flag;\n    var fmt$1 = _fmt;\n    if (typeof fmt$1 === \"number\") {\n      return /* () */0;\n    } else {\n      switch (fmt$1.tag | 0) {\n        case 0 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            buffer_add_char(buf, /* \"c\" */99);\n            _ign_flag = /* false */0;\n            _fmt = fmt$1[0];\n            continue ;\n            case 1 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            buffer_add_char(buf, /* \"C\" */67);\n            _ign_flag = /* false */0;\n            _fmt = fmt$1[0];\n            continue ;\n            case 2 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            bprint_padding(buf, fmt$1[0]);\n            buffer_add_char(buf, /* \"s\" */115);\n            _ign_flag = /* false */0;\n            _fmt = fmt$1[1];\n            continue ;\n            case 3 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            bprint_padding(buf, fmt$1[0]);\n            buffer_add_char(buf, /* \"S\" */83);\n            _ign_flag = /* false */0;\n            _fmt = fmt$1[1];\n            continue ;\n            case 4 : \n            bprint_int_fmt(buf, ign_flag, fmt$1[0], fmt$1[1], fmt$1[2]);\n            _ign_flag = /* false */0;\n            _fmt = fmt$1[3];\n            continue ;\n            case 5 : \n            bprint_altint_fmt(buf, ign_flag, fmt$1[0], fmt$1[1], fmt$1[2], /* \"l\" */108);\n            _ign_flag = /* false */0;\n            _fmt = fmt$1[3];\n            continue ;\n            case 6 : \n            bprint_altint_fmt(buf, ign_flag, fmt$1[0], fmt$1[1], fmt$1[2], /* \"n\" */110);\n            _ign_flag = /* false */0;\n            _fmt = fmt$1[3];\n            continue ;\n            case 7 : \n            bprint_altint_fmt(buf, ign_flag, fmt$1[0], fmt$1[1], fmt$1[2], /* \"L\" */76);\n            _ign_flag = /* false */0;\n            _fmt = fmt$1[3];\n            continue ;\n            case 8 : \n            bprint_float_fmt(buf, ign_flag, fmt$1[0], fmt$1[1], fmt$1[2]);\n            _ign_flag = /* false */0;\n            _fmt = fmt$1[3];\n            continue ;\n            case 9 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            buffer_add_char(buf, /* \"B\" */66);\n            _ign_flag = /* false */0;\n            _fmt = fmt$1[0];\n            continue ;\n            case 10 : \n            buffer_add_string(buf, \"%!\");\n            _fmt = fmt$1[0];\n            continue ;\n            case 11 : \n            bprint_string_literal(buf, fmt$1[0]);\n            _fmt = fmt$1[1];\n            continue ;\n            case 12 : \n            bprint_char_literal(buf, fmt$1[0]);\n            _fmt = fmt$1[1];\n            continue ;\n            case 13 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            bprint_pad_opt(buf, fmt$1[0]);\n            buffer_add_char(buf, /* \"{\" */123);\n            bprint_fmtty(buf, fmt$1[1]);\n            buffer_add_char(buf, /* \"%\" */37);\n            buffer_add_char(buf, /* \"}\" */125);\n            _ign_flag = /* false */0;\n            _fmt = fmt$1[2];\n            continue ;\n            case 14 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            bprint_pad_opt(buf, fmt$1[0]);\n            buffer_add_char(buf, /* \"(\" */40);\n            bprint_fmtty(buf, fmt$1[1]);\n            buffer_add_char(buf, /* \"%\" */37);\n            buffer_add_char(buf, /* \")\" */41);\n            _ign_flag = /* false */0;\n            _fmt = fmt$1[2];\n            continue ;\n            case 15 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            buffer_add_char(buf, /* \"a\" */97);\n            _ign_flag = /* false */0;\n            _fmt = fmt$1[0];\n            continue ;\n            case 16 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            buffer_add_char(buf, /* \"t\" */116);\n            _ign_flag = /* false */0;\n            _fmt = fmt$1[0];\n            continue ;\n            case 17 : \n            bprint_string_literal(buf, string_of_formatting_lit(fmt$1[0]));\n            _fmt = fmt$1[1];\n            continue ;\n            case 18 : \n            bprint_string_literal(buf, \"@{\");\n            bprint_string_literal(buf, string_of_formatting_gen(fmt$1[0]));\n            _fmt = fmt$1[1];\n            continue ;\n            case 19 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            buffer_add_char(buf, /* \"r\" */114);\n            _ign_flag = /* false */0;\n            _fmt = fmt$1[0];\n            continue ;\n            case 20 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            bprint_pad_opt(buf, fmt$1[0]);\n            bprint_char_set(buf, fmt$1[1]);\n            _ign_flag = /* false */0;\n            _fmt = fmt$1[2];\n            continue ;\n            case 21 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            buffer_add_char(buf, char_of_counter(fmt$1[0]));\n            _ign_flag = /* false */0;\n            _fmt = fmt$1[1];\n            continue ;\n            case 22 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            bprint_string_literal(buf, \"0c\");\n            _ign_flag = /* false */0;\n            _fmt = fmt$1[0];\n            continue ;\n            case 23 : \n            var match = param_format_of_ignored_format(fmt$1[0], fmt$1[1]);\n            _ign_flag = /* true */1;\n            _fmt = match[0];\n            continue ;\n            case 24 : \n            for(var _i = 1 ,_i_finish = int_of_custom_arity(fmt$1[0]); _i <= _i_finish; ++_i){\n              buffer_add_char(buf, /* \"%\" */37);\n              bprint_ignored_flag(buf, ign_flag);\n              buffer_add_char(buf, /* \"?\" */63);\n            }\n            _ign_flag = /* false */0;\n            _fmt = fmt$1[2];\n            continue ;\n            \n      }\n    }\n  };\n}\n\nfunction string_of_fmt(fmt) {\n  var buf = /* record */[\n    /* ind */0,\n    /* bytes */Caml_string.caml_create_string(16)\n  ];\n  bprint_fmt(buf, fmt);\n  return buffer_contents(buf);\n}\n\nfunction symm(param) {\n  if (typeof param === \"number\") {\n    return /* End_of_fmtty */0;\n  } else {\n    switch (param.tag | 0) {\n      case 0 : \n          return /* Char_ty */Block.__(0, [symm(param[0])]);\n      case 1 : \n          return /* String_ty */Block.__(1, [symm(param[0])]);\n      case 2 : \n          return /* Int_ty */Block.__(2, [symm(param[0])]);\n      case 3 : \n          return /* Int32_ty */Block.__(3, [symm(param[0])]);\n      case 4 : \n          return /* Nativeint_ty */Block.__(4, [symm(param[0])]);\n      case 5 : \n          return /* Int64_ty */Block.__(5, [symm(param[0])]);\n      case 6 : \n          return /* Float_ty */Block.__(6, [symm(param[0])]);\n      case 7 : \n          return /* Bool_ty */Block.__(7, [symm(param[0])]);\n      case 8 : \n          return /* Format_arg_ty */Block.__(8, [\n                    param[0],\n                    symm(param[1])\n                  ]);\n      case 9 : \n          return /* Format_subst_ty */Block.__(9, [\n                    param[1],\n                    param[0],\n                    symm(param[2])\n                  ]);\n      case 10 : \n          return /* Alpha_ty */Block.__(10, [symm(param[0])]);\n      case 11 : \n          return /* Theta_ty */Block.__(11, [symm(param[0])]);\n      case 12 : \n          return /* Any_ty */Block.__(12, [symm(param[0])]);\n      case 13 : \n          return /* Reader_ty */Block.__(13, [symm(param[0])]);\n      case 14 : \n          return /* Ignored_reader_ty */Block.__(14, [symm(param[0])]);\n      \n    }\n  }\n}\n\nfunction fmtty_rel_det(param) {\n  if (typeof param === \"number\") {\n    return /* tuple */[\n            (function () {\n                return /* Refl */0;\n              }),\n            (function () {\n                return /* Refl */0;\n              }),\n            (function () {\n                return /* Refl */0;\n              }),\n            (function () {\n                return /* Refl */0;\n              })\n          ];\n  } else {\n    switch (param.tag | 0) {\n      case 0 : \n          var match = fmtty_rel_det(param[0]);\n          var af = match[1];\n          var fa = match[0];\n          return /* tuple */[\n                  (function () {\n                      Curry._1(fa, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(af, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match[2],\n                  match[3]\n                ];\n      case 1 : \n          var match$1 = fmtty_rel_det(param[0]);\n          var af$1 = match$1[1];\n          var fa$1 = match$1[0];\n          return /* tuple */[\n                  (function () {\n                      Curry._1(fa$1, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(af$1, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$1[2],\n                  match$1[3]\n                ];\n      case 2 : \n          var match$2 = fmtty_rel_det(param[0]);\n          var af$2 = match$2[1];\n          var fa$2 = match$2[0];\n          return /* tuple */[\n                  (function () {\n                      Curry._1(fa$2, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(af$2, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$2[2],\n                  match$2[3]\n                ];\n      case 3 : \n          var match$3 = fmtty_rel_det(param[0]);\n          var af$3 = match$3[1];\n          var fa$3 = match$3[0];\n          return /* tuple */[\n                  (function () {\n                      Curry._1(fa$3, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(af$3, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$3[2],\n                  match$3[3]\n                ];\n      case 4 : \n          var match$4 = fmtty_rel_det(param[0]);\n          var af$4 = match$4[1];\n          var fa$4 = match$4[0];\n          return /* tuple */[\n                  (function () {\n                      Curry._1(fa$4, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(af$4, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$4[2],\n                  match$4[3]\n                ];\n      case 5 : \n          var match$5 = fmtty_rel_det(param[0]);\n          var af$5 = match$5[1];\n          var fa$5 = match$5[0];\n          return /* tuple */[\n                  (function () {\n                      Curry._1(fa$5, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(af$5, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$5[2],\n                  match$5[3]\n                ];\n      case 6 : \n          var match$6 = fmtty_rel_det(param[0]);\n          var af$6 = match$6[1];\n          var fa$6 = match$6[0];\n          return /* tuple */[\n                  (function () {\n                      Curry._1(fa$6, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(af$6, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$6[2],\n                  match$6[3]\n                ];\n      case 7 : \n          var match$7 = fmtty_rel_det(param[0]);\n          var af$7 = match$7[1];\n          var fa$7 = match$7[0];\n          return /* tuple */[\n                  (function () {\n                      Curry._1(fa$7, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(af$7, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$7[2],\n                  match$7[3]\n                ];\n      case 8 : \n          var match$8 = fmtty_rel_det(param[1]);\n          var af$8 = match$8[1];\n          var fa$8 = match$8[0];\n          return /* tuple */[\n                  (function () {\n                      Curry._1(fa$8, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(af$8, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$8[2],\n                  match$8[3]\n                ];\n      case 9 : \n          var match$9 = fmtty_rel_det(param[2]);\n          var de = match$9[3];\n          var ed = match$9[2];\n          var af$9 = match$9[1];\n          var fa$9 = match$9[0];\n          var ty = trans(symm(param[0]), param[1]);\n          var match$10 = fmtty_rel_det(ty);\n          var jd = match$10[3];\n          var dj = match$10[2];\n          var ga = match$10[1];\n          var ag = match$10[0];\n          return /* tuple */[\n                  (function () {\n                      Curry._1(fa$9, /* Refl */0);\n                      Curry._1(ag, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(ga, /* Refl */0);\n                      Curry._1(af$9, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(ed, /* Refl */0);\n                      Curry._1(dj, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(jd, /* Refl */0);\n                      Curry._1(de, /* Refl */0);\n                      return /* Refl */0;\n                    })\n                ];\n      case 10 : \n          var match$11 = fmtty_rel_det(param[0]);\n          var af$10 = match$11[1];\n          var fa$10 = match$11[0];\n          return /* tuple */[\n                  (function () {\n                      Curry._1(fa$10, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(af$10, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$11[2],\n                  match$11[3]\n                ];\n      case 11 : \n          var match$12 = fmtty_rel_det(param[0]);\n          var af$11 = match$12[1];\n          var fa$11 = match$12[0];\n          return /* tuple */[\n                  (function () {\n                      Curry._1(fa$11, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(af$11, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$12[2],\n                  match$12[3]\n                ];\n      case 12 : \n          var match$13 = fmtty_rel_det(param[0]);\n          var af$12 = match$13[1];\n          var fa$12 = match$13[0];\n          return /* tuple */[\n                  (function () {\n                      Curry._1(fa$12, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(af$12, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$13[2],\n                  match$13[3]\n                ];\n      case 13 : \n          var match$14 = fmtty_rel_det(param[0]);\n          var de$1 = match$14[3];\n          var ed$1 = match$14[2];\n          var af$13 = match$14[1];\n          var fa$13 = match$14[0];\n          return /* tuple */[\n                  (function () {\n                      Curry._1(fa$13, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(af$13, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(ed$1, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(de$1, /* Refl */0);\n                      return /* Refl */0;\n                    })\n                ];\n      case 14 : \n          var match$15 = fmtty_rel_det(param[0]);\n          var de$2 = match$15[3];\n          var ed$2 = match$15[2];\n          var af$14 = match$15[1];\n          var fa$14 = match$15[0];\n          return /* tuple */[\n                  (function () {\n                      Curry._1(fa$14, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(af$14, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(ed$2, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function () {\n                      Curry._1(de$2, /* Refl */0);\n                      return /* Refl */0;\n                    })\n                ];\n      \n    }\n  }\n}\n\nfunction trans(ty1, ty2) {\n  var exit = 0;\n  if (typeof ty1 === \"number\") {\n    if (typeof ty2 === \"number\") {\n      return /* End_of_fmtty */0;\n    } else {\n      switch (ty2.tag | 0) {\n        case 8 : \n            exit = 6;\n            break;\n        case 9 : \n            exit = 7;\n            break;\n        case 10 : \n            exit = 1;\n            break;\n        case 11 : \n            exit = 2;\n            break;\n        case 12 : \n            exit = 3;\n            break;\n        case 13 : \n            exit = 4;\n            break;\n        case 14 : \n            exit = 5;\n            break;\n        default:\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"camlinternalFormat.ml\",\n                  816,\n                  23\n                ]\n              ];\n      }\n    }\n  } else {\n    switch (ty1.tag | 0) {\n      case 0 : \n          if (typeof ty2 === \"number\") {\n            exit = 8;\n          } else {\n            switch (ty2.tag | 0) {\n              case 0 : \n                  return /* Char_ty */Block.__(0, [trans(ty1[0], ty2[0])]);\n              case 8 : \n                  exit = 6;\n                  break;\n              case 9 : \n                  exit = 7;\n                  break;\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              \n            }\n          }\n          break;\n      case 1 : \n          if (typeof ty2 === \"number\") {\n            exit = 8;\n          } else {\n            switch (ty2.tag | 0) {\n              case 1 : \n                  return /* String_ty */Block.__(1, [trans(ty1[0], ty2[0])]);\n              case 8 : \n                  exit = 6;\n                  break;\n              case 9 : \n                  exit = 7;\n                  break;\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              \n            }\n          }\n          break;\n      case 2 : \n          if (typeof ty2 === \"number\") {\n            exit = 8;\n          } else {\n            switch (ty2.tag | 0) {\n              case 2 : \n                  return /* Int_ty */Block.__(2, [trans(ty1[0], ty2[0])]);\n              case 8 : \n                  exit = 6;\n                  break;\n              case 9 : \n                  exit = 7;\n                  break;\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              \n            }\n          }\n          break;\n      case 3 : \n          if (typeof ty2 === \"number\") {\n            exit = 8;\n          } else {\n            switch (ty2.tag | 0) {\n              case 3 : \n                  return /* Int32_ty */Block.__(3, [trans(ty1[0], ty2[0])]);\n              case 8 : \n                  exit = 6;\n                  break;\n              case 9 : \n                  exit = 7;\n                  break;\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              \n            }\n          }\n          break;\n      case 4 : \n          if (typeof ty2 === \"number\") {\n            exit = 8;\n          } else {\n            switch (ty2.tag | 0) {\n              case 4 : \n                  return /* Nativeint_ty */Block.__(4, [trans(ty1[0], ty2[0])]);\n              case 8 : \n                  exit = 6;\n                  break;\n              case 9 : \n                  exit = 7;\n                  break;\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              \n            }\n          }\n          break;\n      case 5 : \n          if (typeof ty2 === \"number\") {\n            exit = 8;\n          } else {\n            switch (ty2.tag | 0) {\n              case 5 : \n                  return /* Int64_ty */Block.__(5, [trans(ty1[0], ty2[0])]);\n              case 8 : \n                  exit = 6;\n                  break;\n              case 9 : \n                  exit = 7;\n                  break;\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              \n            }\n          }\n          break;\n      case 6 : \n          if (typeof ty2 === \"number\") {\n            exit = 8;\n          } else {\n            switch (ty2.tag | 0) {\n              case 6 : \n                  return /* Float_ty */Block.__(6, [trans(ty1[0], ty2[0])]);\n              case 8 : \n                  exit = 6;\n                  break;\n              case 9 : \n                  exit = 7;\n                  break;\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              \n            }\n          }\n          break;\n      case 7 : \n          if (typeof ty2 === \"number\") {\n            exit = 8;\n          } else {\n            switch (ty2.tag | 0) {\n              case 7 : \n                  return /* Bool_ty */Block.__(7, [trans(ty1[0], ty2[0])]);\n              case 8 : \n                  exit = 6;\n                  break;\n              case 9 : \n                  exit = 7;\n                  break;\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              \n            }\n          }\n          break;\n      case 8 : \n          if (typeof ty2 === \"number\") {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"camlinternalFormat.ml\",\n                    802,\n                    26\n                  ]\n                ];\n          } else {\n            switch (ty2.tag | 0) {\n              case 8 : \n                  return /* Format_arg_ty */Block.__(8, [\n                            trans(ty1[0], ty2[0]),\n                            trans(ty1[1], ty2[1])\n                          ]);\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              default:\n                throw [\n                      Caml_builtin_exceptions.assert_failure,\n                      [\n                        \"camlinternalFormat.ml\",\n                        802,\n                        26\n                      ]\n                    ];\n            }\n          }\n          break;\n      case 9 : \n          if (typeof ty2 === \"number\") {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"camlinternalFormat.ml\",\n                    812,\n                    28\n                  ]\n                ];\n          } else {\n            switch (ty2.tag | 0) {\n              case 8 : \n                  exit = 6;\n                  break;\n              case 9 : \n                  var ty = trans(symm(ty1[1]), ty2[0]);\n                  var match = fmtty_rel_det(ty);\n                  Curry._1(match[1], /* Refl */0);\n                  Curry._1(match[3], /* Refl */0);\n                  return /* Format_subst_ty */Block.__(9, [\n                            ty1[0],\n                            ty2[1],\n                            trans(ty1[2], ty2[2])\n                          ]);\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              default:\n                throw [\n                      Caml_builtin_exceptions.assert_failure,\n                      [\n                        \"camlinternalFormat.ml\",\n                        812,\n                        28\n                      ]\n                    ];\n            }\n          }\n          break;\n      case 10 : \n          if (typeof ty2 === \"number\") {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"camlinternalFormat.ml\",\n                    780,\n                    21\n                  ]\n                ];\n          } else if (ty2.tag === 10) {\n            return /* Alpha_ty */Block.__(10, [trans(ty1[0], ty2[0])]);\n          } else {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"camlinternalFormat.ml\",\n                    780,\n                    21\n                  ]\n                ];\n          }\n      case 11 : \n          if (typeof ty2 === \"number\") {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"camlinternalFormat.ml\",\n                    784,\n                    21\n                  ]\n                ];\n          } else {\n            switch (ty2.tag | 0) {\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  return /* Theta_ty */Block.__(11, [trans(ty1[0], ty2[0])]);\n              default:\n                throw [\n                      Caml_builtin_exceptions.assert_failure,\n                      [\n                        \"camlinternalFormat.ml\",\n                        784,\n                        21\n                      ]\n                    ];\n            }\n          }\n          break;\n      case 12 : \n          if (typeof ty2 === \"number\") {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"camlinternalFormat.ml\",\n                    788,\n                    19\n                  ]\n                ];\n          } else {\n            switch (ty2.tag | 0) {\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  return /* Any_ty */Block.__(12, [trans(ty1[0], ty2[0])]);\n              default:\n                throw [\n                      Caml_builtin_exceptions.assert_failure,\n                      [\n                        \"camlinternalFormat.ml\",\n                        788,\n                        19\n                      ]\n                    ];\n            }\n          }\n          break;\n      case 13 : \n          if (typeof ty2 === \"number\") {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"camlinternalFormat.ml\",\n                    792,\n                    22\n                  ]\n                ];\n          } else {\n            switch (ty2.tag | 0) {\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  return /* Reader_ty */Block.__(13, [trans(ty1[0], ty2[0])]);\n              default:\n                throw [\n                      Caml_builtin_exceptions.assert_failure,\n                      [\n                        \"camlinternalFormat.ml\",\n                        792,\n                        22\n                      ]\n                    ];\n            }\n          }\n          break;\n      case 14 : \n          if (typeof ty2 === \"number\") {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"camlinternalFormat.ml\",\n                    797,\n                    30\n                  ]\n                ];\n          } else {\n            switch (ty2.tag | 0) {\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  return /* Ignored_reader_ty */Block.__(14, [trans(ty1[0], ty2[0])]);\n              default:\n                throw [\n                      Caml_builtin_exceptions.assert_failure,\n                      [\n                        \"camlinternalFormat.ml\",\n                        797,\n                        30\n                      ]\n                    ];\n            }\n          }\n          break;\n      \n    }\n  }\n  switch (exit) {\n    case 1 : \n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              [\n                \"camlinternalFormat.ml\",\n                781,\n                21\n              ]\n            ];\n    case 2 : \n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              [\n                \"camlinternalFormat.ml\",\n                785,\n                21\n              ]\n            ];\n    case 3 : \n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              [\n                \"camlinternalFormat.ml\",\n                789,\n                19\n              ]\n            ];\n    case 4 : \n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              [\n                \"camlinternalFormat.ml\",\n                793,\n                22\n              ]\n            ];\n    case 5 : \n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              [\n                \"camlinternalFormat.ml\",\n                798,\n                30\n              ]\n            ];\n    case 6 : \n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              [\n                \"camlinternalFormat.ml\",\n                803,\n                26\n              ]\n            ];\n    case 7 : \n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              [\n                \"camlinternalFormat.ml\",\n                813,\n                28\n              ]\n            ];\n    case 8 : \n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              [\n                \"camlinternalFormat.ml\",\n                817,\n                23\n              ]\n            ];\n    \n  }\n}\n\nfunction fmtty_of_formatting_gen(formatting_gen) {\n  return fmtty_of_fmt(formatting_gen[0][0]);\n}\n\nfunction fmtty_of_fmt(_fmtty) {\n  while(true) {\n    var fmtty = _fmtty;\n    var exit = 0;\n    if (typeof fmtty === \"number\") {\n      return /* End_of_fmtty */0;\n    } else {\n      switch (fmtty.tag | 0) {\n        case 2 : \n        case 3 : \n            exit = 1;\n            break;\n        case 4 : \n            var ty_rest = fmtty_of_fmt(fmtty[3]);\n            var prec_ty = fmtty_of_precision_fmtty(fmtty[2], /* Int_ty */Block.__(2, [ty_rest]));\n            return fmtty_of_padding_fmtty(fmtty[1], prec_ty);\n        case 5 : \n            var ty_rest$1 = fmtty_of_fmt(fmtty[3]);\n            var prec_ty$1 = fmtty_of_precision_fmtty(fmtty[2], /* Int32_ty */Block.__(3, [ty_rest$1]));\n            return fmtty_of_padding_fmtty(fmtty[1], prec_ty$1);\n        case 6 : \n            var ty_rest$2 = fmtty_of_fmt(fmtty[3]);\n            var prec_ty$2 = fmtty_of_precision_fmtty(fmtty[2], /* Nativeint_ty */Block.__(4, [ty_rest$2]));\n            return fmtty_of_padding_fmtty(fmtty[1], prec_ty$2);\n        case 7 : \n            var ty_rest$3 = fmtty_of_fmt(fmtty[3]);\n            var prec_ty$3 = fmtty_of_precision_fmtty(fmtty[2], /* Int64_ty */Block.__(5, [ty_rest$3]));\n            return fmtty_of_padding_fmtty(fmtty[1], prec_ty$3);\n        case 8 : \n            var ty_rest$4 = fmtty_of_fmt(fmtty[3]);\n            var prec_ty$4 = fmtty_of_precision_fmtty(fmtty[2], /* Float_ty */Block.__(6, [ty_rest$4]));\n            return fmtty_of_padding_fmtty(fmtty[1], prec_ty$4);\n        case 9 : \n            return /* Bool_ty */Block.__(7, [fmtty_of_fmt(fmtty[0])]);\n        case 10 : \n            _fmtty = fmtty[0];\n            continue ;\n            case 13 : \n            return /* Format_arg_ty */Block.__(8, [\n                      fmtty[1],\n                      fmtty_of_fmt(fmtty[2])\n                    ]);\n        case 14 : \n            var ty = fmtty[1];\n            return /* Format_subst_ty */Block.__(9, [\n                      ty,\n                      ty,\n                      fmtty_of_fmt(fmtty[2])\n                    ]);\n        case 15 : \n            return /* Alpha_ty */Block.__(10, [fmtty_of_fmt(fmtty[0])]);\n        case 16 : \n            return /* Theta_ty */Block.__(11, [fmtty_of_fmt(fmtty[0])]);\n        case 18 : \n            return CamlinternalFormatBasics.concat_fmtty(fmtty_of_formatting_gen(fmtty[0]), fmtty_of_fmt(fmtty[1]));\n        case 19 : \n            return /* Reader_ty */Block.__(13, [fmtty_of_fmt(fmtty[0])]);\n        case 20 : \n            return /* String_ty */Block.__(1, [fmtty_of_fmt(fmtty[2])]);\n        case 21 : \n            return /* Int_ty */Block.__(2, [fmtty_of_fmt(fmtty[1])]);\n        case 0 : \n        case 1 : \n        case 22 : \n            return /* Char_ty */Block.__(0, [fmtty_of_fmt(fmtty[0])]);\n        case 23 : \n            var ign = fmtty[0];\n            var fmt = fmtty[1];\n            if (typeof ign === \"number\") {\n              if (ign === 3) {\n                return /* Ignored_reader_ty */Block.__(14, [fmtty_of_fmt(fmt)]);\n              } else {\n                return fmtty_of_fmt(fmt);\n              }\n            } else if (ign.tag === 8) {\n              return CamlinternalFormatBasics.concat_fmtty(ign[1], fmtty_of_fmt(fmt));\n            } else {\n              return fmtty_of_fmt(fmt);\n            }\n        case 24 : \n            return fmtty_of_custom(fmtty[0], fmtty_of_fmt(fmtty[2]));\n        default:\n          _fmtty = fmtty[1];\n          continue ;\n          \n      }\n    }\n    if (exit === 1) {\n      return fmtty_of_padding_fmtty(fmtty[0], /* String_ty */Block.__(1, [fmtty_of_fmt(fmtty[1])]));\n    }\n    \n  };\n}\n\nfunction fmtty_of_custom(arity, fmtty) {\n  if (arity) {\n    return /* Any_ty */Block.__(12, [fmtty_of_custom(arity[0], fmtty)]);\n  } else {\n    return fmtty;\n  }\n}\n\nfunction fmtty_of_padding_fmtty(pad, fmtty) {\n  if (typeof pad === \"number\" || !pad.tag) {\n    return fmtty;\n  } else {\n    return /* Int_ty */Block.__(2, [fmtty]);\n  }\n}\n\nfunction fmtty_of_precision_fmtty(prec, fmtty) {\n  if (typeof prec === \"number\" && prec !== 0) {\n    return /* Int_ty */Block.__(2, [fmtty]);\n  } else {\n    return fmtty;\n  }\n}\n\nvar Type_mismatch = Caml_exceptions.create(\"CamlinternalFormat.Type_mismatch\");\n\nfunction type_padding(pad, fmtty) {\n  if (typeof pad === \"number\") {\n    return /* Padding_fmtty_EBB */[\n            /* No_padding */0,\n            fmtty\n          ];\n  } else if (pad.tag) {\n    if (typeof fmtty === \"number\") {\n      throw Type_mismatch;\n    } else if (fmtty.tag === 2) {\n      return /* Padding_fmtty_EBB */[\n              /* Arg_padding */Block.__(1, [pad[0]]),\n              fmtty[0]\n            ];\n    } else {\n      throw Type_mismatch;\n    }\n  } else {\n    return /* Padding_fmtty_EBB */[\n            /* Lit_padding */Block.__(0, [\n                pad[0],\n                pad[1]\n              ]),\n            fmtty\n          ];\n  }\n}\n\nfunction type_padprec(pad, prec, fmtty) {\n  var match = type_padding(pad, fmtty);\n  if (typeof prec === \"number\") {\n    if (prec !== 0) {\n      var match$1 = match[1];\n      if (typeof match$1 === \"number\") {\n        throw Type_mismatch;\n      } else if (match$1.tag === 2) {\n        return /* Padprec_fmtty_EBB */[\n                match[0],\n                /* Arg_precision */1,\n                match$1[0]\n              ];\n      } else {\n        throw Type_mismatch;\n      }\n    } else {\n      return /* Padprec_fmtty_EBB */[\n              match[0],\n              /* No_precision */0,\n              match[1]\n            ];\n    }\n  } else {\n    return /* Padprec_fmtty_EBB */[\n            match[0],\n            /* Lit_precision */[prec[0]],\n            match[1]\n          ];\n  }\n}\n\nfunction type_ignored_param_one(ign, fmt, fmtty) {\n  var match = type_format_gen(fmt, fmtty);\n  return /* Fmt_fmtty_EBB */[\n          /* Ignored_param */Block.__(23, [\n              ign,\n              match[0]\n            ]),\n          match[1]\n        ];\n}\n\nfunction type_format_gen(fmt, fmtty) {\n  if (typeof fmt === \"number\") {\n    return /* Fmt_fmtty_EBB */[\n            /* End_of_format */0,\n            fmtty\n          ];\n  } else {\n    switch (fmt.tag | 0) {\n      case 0 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag) {\n            throw Type_mismatch;\n          } else {\n            var match = type_format_gen(fmt[0], fmtty[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Char */Block.__(0, [match[0]]),\n                    match[1]\n                  ];\n          }\n      case 1 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag) {\n            throw Type_mismatch;\n          } else {\n            var match$1 = type_format_gen(fmt[0], fmtty[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Caml_char */Block.__(1, [match$1[0]]),\n                    match$1[1]\n                  ];\n          }\n      case 2 : \n          var match$2 = type_padding(fmt[0], fmtty);\n          var match$3 = match$2[1];\n          if (typeof match$3 === \"number\") {\n            throw Type_mismatch;\n          } else if (match$3.tag === 1) {\n            var match$4 = type_format_gen(fmt[1], match$3[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* String */Block.__(2, [\n                        match$2[0],\n                        match$4[0]\n                      ]),\n                    match$4[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 3 : \n          var match$5 = type_padding(fmt[0], fmtty);\n          var match$6 = match$5[1];\n          if (typeof match$6 === \"number\") {\n            throw Type_mismatch;\n          } else if (match$6.tag === 1) {\n            var match$7 = type_format_gen(fmt[1], match$6[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Caml_string */Block.__(3, [\n                        match$5[0],\n                        match$7[0]\n                      ]),\n                    match$7[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 4 : \n          var match$8 = type_padprec(fmt[1], fmt[2], fmtty);\n          var match$9 = match$8[2];\n          if (typeof match$9 === \"number\") {\n            throw Type_mismatch;\n          } else if (match$9.tag === 2) {\n            var match$10 = type_format_gen(fmt[3], match$9[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Int */Block.__(4, [\n                        fmt[0],\n                        match$8[0],\n                        match$8[1],\n                        match$10[0]\n                      ]),\n                    match$10[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 5 : \n          var match$11 = type_padprec(fmt[1], fmt[2], fmtty);\n          var match$12 = match$11[2];\n          if (typeof match$12 === \"number\") {\n            throw Type_mismatch;\n          } else if (match$12.tag === 3) {\n            var match$13 = type_format_gen(fmt[3], match$12[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Int32 */Block.__(5, [\n                        fmt[0],\n                        match$11[0],\n                        match$11[1],\n                        match$13[0]\n                      ]),\n                    match$13[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 6 : \n          var match$14 = type_padprec(fmt[1], fmt[2], fmtty);\n          var match$15 = match$14[2];\n          if (typeof match$15 === \"number\") {\n            throw Type_mismatch;\n          } else if (match$15.tag === 4) {\n            var match$16 = type_format_gen(fmt[3], match$15[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Nativeint */Block.__(6, [\n                        fmt[0],\n                        match$14[0],\n                        match$14[1],\n                        match$16[0]\n                      ]),\n                    match$16[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 7 : \n          var match$17 = type_padprec(fmt[1], fmt[2], fmtty);\n          var match$18 = match$17[2];\n          if (typeof match$18 === \"number\") {\n            throw Type_mismatch;\n          } else if (match$18.tag === 5) {\n            var match$19 = type_format_gen(fmt[3], match$18[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Int64 */Block.__(7, [\n                        fmt[0],\n                        match$17[0],\n                        match$17[1],\n                        match$19[0]\n                      ]),\n                    match$19[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 8 : \n          var match$20 = type_padprec(fmt[1], fmt[2], fmtty);\n          var match$21 = match$20[2];\n          if (typeof match$21 === \"number\") {\n            throw Type_mismatch;\n          } else if (match$21.tag === 6) {\n            var match$22 = type_format_gen(fmt[3], match$21[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Float */Block.__(8, [\n                        fmt[0],\n                        match$20[0],\n                        match$20[1],\n                        match$22[0]\n                      ]),\n                    match$22[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 9 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 7) {\n            var match$23 = type_format_gen(fmt[0], fmtty[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Bool */Block.__(9, [match$23[0]]),\n                    match$23[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 10 : \n          var match$24 = type_format_gen(fmt[0], fmtty);\n          return /* Fmt_fmtty_EBB */[\n                  /* Flush */Block.__(10, [match$24[0]]),\n                  match$24[1]\n                ];\n      case 11 : \n          var match$25 = type_format_gen(fmt[1], fmtty);\n          return /* Fmt_fmtty_EBB */[\n                  /* String_literal */Block.__(11, [\n                      fmt[0],\n                      match$25[0]\n                    ]),\n                  match$25[1]\n                ];\n      case 12 : \n          var match$26 = type_format_gen(fmt[1], fmtty);\n          return /* Fmt_fmtty_EBB */[\n                  /* Char_literal */Block.__(12, [\n                      fmt[0],\n                      match$26[0]\n                    ]),\n                  match$26[1]\n                ];\n      case 13 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 8) {\n            var sub_fmtty$prime = fmtty[0];\n            if (Caml_obj.caml_notequal(/* Fmtty_EBB */[fmt[1]], /* Fmtty_EBB */[sub_fmtty$prime])) {\n              throw Type_mismatch;\n            }\n            var match$27 = type_format_gen(fmt[2], fmtty[1]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Format_arg */Block.__(13, [\n                        fmt[0],\n                        sub_fmtty$prime,\n                        match$27[0]\n                      ]),\n                    match$27[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 14 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 9) {\n            var sub_fmtty1 = fmtty[0];\n            if (Caml_obj.caml_notequal(/* Fmtty_EBB */[CamlinternalFormatBasics.erase_rel(fmt[1])], /* Fmtty_EBB */[CamlinternalFormatBasics.erase_rel(sub_fmtty1)])) {\n              throw Type_mismatch;\n            }\n            var match$28 = type_format_gen(fmt[2], CamlinternalFormatBasics.erase_rel(fmtty[2]));\n            return /* Fmt_fmtty_EBB */[\n                    /* Format_subst */Block.__(14, [\n                        fmt[0],\n                        sub_fmtty1,\n                        match$28[0]\n                      ]),\n                    match$28[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 15 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 10) {\n            var match$29 = type_format_gen(fmt[0], fmtty[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Alpha */Block.__(15, [match$29[0]]),\n                    match$29[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 16 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 11) {\n            var match$30 = type_format_gen(fmt[0], fmtty[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Theta */Block.__(16, [match$30[0]]),\n                    match$30[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 17 : \n          var match$31 = type_format_gen(fmt[1], fmtty);\n          return /* Fmt_fmtty_EBB */[\n                  /* Formatting_lit */Block.__(17, [\n                      fmt[0],\n                      match$31[0]\n                    ]),\n                  match$31[1]\n                ];\n      case 18 : \n          var formatting_gen = fmt[0];\n          var fmt0 = fmt[1];\n          var fmtty0 = fmtty;\n          if (formatting_gen.tag) {\n            var match$32 = formatting_gen[0];\n            var match$33 = type_format_gen(match$32[0], fmtty0);\n            var match$34 = type_format_gen(fmt0, match$33[1]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Formatting_gen */Block.__(18, [\n                        /* Open_box */Block.__(1, [/* Format */[\n                              match$33[0],\n                              match$32[1]\n                            ]]),\n                        match$34[0]\n                      ]),\n                    match$34[1]\n                  ];\n          } else {\n            var match$35 = formatting_gen[0];\n            var match$36 = type_format_gen(match$35[0], fmtty0);\n            var match$37 = type_format_gen(fmt0, match$36[1]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Formatting_gen */Block.__(18, [\n                        /* Open_tag */Block.__(0, [/* Format */[\n                              match$36[0],\n                              match$35[1]\n                            ]]),\n                        match$37[0]\n                      ]),\n                    match$37[1]\n                  ];\n          }\n      case 19 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 13) {\n            var match$38 = type_format_gen(fmt[0], fmtty[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Reader */Block.__(19, [match$38[0]]),\n                    match$38[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 20 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 1) {\n            var match$39 = type_format_gen(fmt[2], fmtty[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Scan_char_set */Block.__(20, [\n                        fmt[0],\n                        fmt[1],\n                        match$39[0]\n                      ]),\n                    match$39[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 21 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 2) {\n            var match$40 = type_format_gen(fmt[1], fmtty[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Scan_get_counter */Block.__(21, [\n                        fmt[0],\n                        match$40[0]\n                      ]),\n                    match$40[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 23 : \n          var ign = fmt[0];\n          var fmt$1 = fmt[1];\n          var fmtty$1 = fmtty;\n          if (typeof ign === \"number\") {\n            if (ign === 3) {\n              if (typeof fmtty$1 === \"number\") {\n                throw Type_mismatch;\n              } else if (fmtty$1.tag === 14) {\n                var match$41 = type_format_gen(fmt$1, fmtty$1[0]);\n                return /* Fmt_fmtty_EBB */[\n                        /* Ignored_param */Block.__(23, [\n                            /* Ignored_reader */3,\n                            match$41[0]\n                          ]),\n                        match$41[1]\n                      ];\n              } else {\n                throw Type_mismatch;\n              }\n            } else {\n              return type_ignored_param_one(ign, fmt$1, fmtty$1);\n            }\n          } else {\n            switch (ign.tag | 0) {\n              case 7 : \n                  return type_ignored_param_one(/* Ignored_format_arg */Block.__(7, [\n                                ign[0],\n                                ign[1]\n                              ]), fmt$1, fmtty$1);\n              case 8 : \n                  var match$42 = type_ignored_format_substitution(ign[1], fmt$1, fmtty$1);\n                  var match$43 = match$42[1];\n                  return /* Fmt_fmtty_EBB */[\n                          /* Ignored_param */Block.__(23, [\n                              /* Ignored_format_subst */Block.__(8, [\n                                  ign[0],\n                                  match$42[0]\n                                ]),\n                              match$43[0]\n                            ]),\n                          match$43[1]\n                        ];\n              default:\n                return type_ignored_param_one(ign, fmt$1, fmtty$1);\n            }\n          }\n      case 22 : \n      case 24 : \n          throw Type_mismatch;\n      \n    }\n  }\n}\n\nfunction type_ignored_format_substitution(sub_fmtty, fmt, fmtty) {\n  if (typeof sub_fmtty === \"number\") {\n    return /* Fmtty_fmt_EBB */[\n            /* End_of_fmtty */0,\n            type_format_gen(fmt, fmtty)\n          ];\n  } else {\n    switch (sub_fmtty.tag | 0) {\n      case 0 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag) {\n            throw Type_mismatch;\n          } else {\n            var match = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Char_ty */Block.__(0, [match[0]]),\n                    match[1]\n                  ];\n          }\n      case 1 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 1) {\n            var match$1 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* String_ty */Block.__(1, [match$1[0]]),\n                    match$1[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 2 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 2) {\n            var match$2 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Int_ty */Block.__(2, [match$2[0]]),\n                    match$2[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 3 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 3) {\n            var match$3 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Int32_ty */Block.__(3, [match$3[0]]),\n                    match$3[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 4 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 4) {\n            var match$4 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Nativeint_ty */Block.__(4, [match$4[0]]),\n                    match$4[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 5 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 5) {\n            var match$5 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Int64_ty */Block.__(5, [match$5[0]]),\n                    match$5[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 6 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 6) {\n            var match$6 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Float_ty */Block.__(6, [match$6[0]]),\n                    match$6[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 7 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 7) {\n            var match$7 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Bool_ty */Block.__(7, [match$7[0]]),\n                    match$7[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 8 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 8) {\n            var sub2_fmtty$prime = fmtty[0];\n            if (Caml_obj.caml_notequal(/* Fmtty_EBB */[sub_fmtty[0]], /* Fmtty_EBB */[sub2_fmtty$prime])) {\n              throw Type_mismatch;\n            }\n            var match$8 = type_ignored_format_substitution(sub_fmtty[1], fmt, fmtty[1]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Format_arg_ty */Block.__(8, [\n                        sub2_fmtty$prime,\n                        match$8[0]\n                      ]),\n                    match$8[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 9 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 9) {\n            var sub2_fmtty$prime$1 = fmtty[1];\n            var sub1_fmtty$prime = fmtty[0];\n            if (Caml_obj.caml_notequal(/* Fmtty_EBB */[CamlinternalFormatBasics.erase_rel(sub_fmtty[0])], /* Fmtty_EBB */[CamlinternalFormatBasics.erase_rel(sub1_fmtty$prime)])) {\n              throw Type_mismatch;\n            }\n            if (Caml_obj.caml_notequal(/* Fmtty_EBB */[CamlinternalFormatBasics.erase_rel(sub_fmtty[1])], /* Fmtty_EBB */[CamlinternalFormatBasics.erase_rel(sub2_fmtty$prime$1)])) {\n              throw Type_mismatch;\n            }\n            var sub_fmtty$prime = trans(symm(sub1_fmtty$prime), sub2_fmtty$prime$1);\n            var match$9 = fmtty_rel_det(sub_fmtty$prime);\n            Curry._1(match$9[1], /* Refl */0);\n            Curry._1(match$9[3], /* Refl */0);\n            var match$10 = type_ignored_format_substitution(CamlinternalFormatBasics.erase_rel(sub_fmtty[2]), fmt, fmtty[2]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Format_subst_ty */Block.__(9, [\n                        sub1_fmtty$prime,\n                        sub2_fmtty$prime$1,\n                        symm(match$10[0])\n                      ]),\n                    match$10[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 10 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 10) {\n            var match$11 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Alpha_ty */Block.__(10, [match$11[0]]),\n                    match$11[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 11 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 11) {\n            var match$12 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Theta_ty */Block.__(11, [match$12[0]]),\n                    match$12[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 12 : \n          throw Type_mismatch;\n      case 13 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 13) {\n            var match$13 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Reader_ty */Block.__(13, [match$13[0]]),\n                    match$13[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 14 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 14) {\n            var match$14 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Ignored_reader_ty */Block.__(14, [match$14[0]]),\n                    match$14[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      \n    }\n  }\n}\n\nfunction type_format(fmt, fmtty) {\n  var match = type_format_gen(fmt, fmtty);\n  if (typeof match[1] === \"number\") {\n    return match[0];\n  } else {\n    throw Type_mismatch;\n  }\n}\n\nfunction recast(fmt, fmtty) {\n  return type_format(fmt, CamlinternalFormatBasics.erase_rel(symm(fmtty)));\n}\n\nfunction fix_padding(padty, width, str) {\n  var len = str.length;\n  var width$1 = Pervasives.abs(width);\n  var padty$1 = width < 0 ? /* Left */0 : padty;\n  if (width$1 <= len) {\n    return str;\n  } else {\n    var res = Bytes.make(width$1, padty$1 === /* Zeros */2 ? /* \"0\" */48 : /* \" \" */32);\n    switch (padty$1) {\n      case 0 : \n          $$String.blit(str, 0, res, 0, len);\n          break;\n      case 1 : \n          $$String.blit(str, 0, res, width$1 - len | 0, len);\n          break;\n      case 2 : \n          if (len > 0 && (Caml_string.get(str, 0) === /* \"+\" */43 || Caml_string.get(str, 0) === /* \"-\" */45 || Caml_string.get(str, 0) === /* \" \" */32)) {\n            res[0] = Caml_string.get(str, 0);\n            $$String.blit(str, 1, res, (width$1 - len | 0) + 1 | 0, len - 1 | 0);\n          } else if (len > 1 && Caml_string.get(str, 0) === /* \"0\" */48 && (Caml_string.get(str, 1) === /* \"x\" */120 || Caml_string.get(str, 1) === /* \"X\" */88)) {\n            res[1] = Caml_string.get(str, 1);\n            $$String.blit(str, 2, res, (width$1 - len | 0) + 2 | 0, len - 2 | 0);\n          } else {\n            $$String.blit(str, 0, res, width$1 - len | 0, len);\n          }\n          break;\n      \n    }\n    return Caml_string.bytes_to_string(res);\n  }\n}\n\nfunction fix_int_precision(prec, str) {\n  var prec$1 = Pervasives.abs(prec);\n  var len = str.length;\n  var c = Caml_string.get(str, 0);\n  var exit = 0;\n  if (c >= 58) {\n    if (c >= 71) {\n      if (c > 102 || c < 97) {\n        return str;\n      } else {\n        exit = 2;\n      }\n    } else if (c >= 65) {\n      exit = 2;\n    } else {\n      return str;\n    }\n  } else if (c !== 32) {\n    if (c >= 43) {\n      switch (c - 43 | 0) {\n        case 0 : \n        case 2 : \n            exit = 1;\n            break;\n        case 1 : \n        case 3 : \n        case 4 : \n            return str;\n        case 5 : \n            if ((prec$1 + 2 | 0) > len && len > 1 && (Caml_string.get(str, 1) === /* \"x\" */120 || Caml_string.get(str, 1) === /* \"X\" */88)) {\n              var res = Bytes.make(prec$1 + 2 | 0, /* \"0\" */48);\n              res[1] = Caml_string.get(str, 1);\n              $$String.blit(str, 2, res, (prec$1 - len | 0) + 4 | 0, len - 2 | 0);\n              return Caml_string.bytes_to_string(res);\n            } else {\n              exit = 2;\n            }\n            break;\n        case 6 : \n        case 7 : \n        case 8 : \n        case 9 : \n        case 10 : \n        case 11 : \n        case 12 : \n        case 13 : \n        case 14 : \n            exit = 2;\n            break;\n        \n      }\n    } else {\n      return str;\n    }\n  } else {\n    exit = 1;\n  }\n  switch (exit) {\n    case 1 : \n        if ((prec$1 + 1 | 0) > len) {\n          var res$1 = Bytes.make(prec$1 + 1 | 0, /* \"0\" */48);\n          res$1[0] = c;\n          $$String.blit(str, 1, res$1, (prec$1 - len | 0) + 2 | 0, len - 1 | 0);\n          return Caml_string.bytes_to_string(res$1);\n        } else {\n          return str;\n        }\n    case 2 : \n        if (prec$1 > len) {\n          var res$2 = Bytes.make(prec$1, /* \"0\" */48);\n          $$String.blit(str, 0, res$2, prec$1 - len | 0, len);\n          return Caml_string.bytes_to_string(res$2);\n        } else {\n          return str;\n        }\n    \n  }\n}\n\nfunction string_to_caml_string(str) {\n  return $$String.concat($$String.escaped(str), /* :: */[\n              \"\\\"\",\n              /* :: */[\n                \"\\\"\",\n                /* [] */0\n              ]\n            ]);\n}\n\nfunction format_of_iconv(iconv) {\n  switch (iconv) {\n    case 0 : \n        return \"%d\";\n    case 1 : \n        return \"%+d\";\n    case 2 : \n        return \"% d\";\n    case 3 : \n        return \"%i\";\n    case 4 : \n        return \"%+i\";\n    case 5 : \n        return \"% i\";\n    case 6 : \n        return \"%x\";\n    case 7 : \n        return \"%#x\";\n    case 8 : \n        return \"%X\";\n    case 9 : \n        return \"%#X\";\n    case 10 : \n        return \"%o\";\n    case 11 : \n        return \"%#o\";\n    case 12 : \n        return \"%u\";\n    \n  }\n}\n\nfunction format_of_aconv(iconv, c) {\n  var seps;\n  switch (iconv) {\n    case 0 : \n        seps = /* :: */[\n          \"%\",\n          /* :: */[\n            \"d\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 1 : \n        seps = /* :: */[\n          \"%+\",\n          /* :: */[\n            \"d\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 2 : \n        seps = /* :: */[\n          \"% \",\n          /* :: */[\n            \"d\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 3 : \n        seps = /* :: */[\n          \"%\",\n          /* :: */[\n            \"i\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 4 : \n        seps = /* :: */[\n          \"%+\",\n          /* :: */[\n            \"i\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 5 : \n        seps = /* :: */[\n          \"% \",\n          /* :: */[\n            \"i\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 6 : \n        seps = /* :: */[\n          \"%\",\n          /* :: */[\n            \"x\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 7 : \n        seps = /* :: */[\n          \"%#\",\n          /* :: */[\n            \"x\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 8 : \n        seps = /* :: */[\n          \"%\",\n          /* :: */[\n            \"X\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 9 : \n        seps = /* :: */[\n          \"%#\",\n          /* :: */[\n            \"X\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 10 : \n        seps = /* :: */[\n          \"%\",\n          /* :: */[\n            \"o\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 11 : \n        seps = /* :: */[\n          \"%#\",\n          /* :: */[\n            \"o\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 12 : \n        seps = /* :: */[\n          \"%\",\n          /* :: */[\n            \"u\",\n            /* [] */0\n          ]\n        ];\n        break;\n    \n  }\n  return $$String.concat(Caml_string.bytes_to_string(Bytes.make(1, c)), seps);\n}\n\nfunction format_of_fconv(fconv, prec) {\n  if (fconv === /* Float_F */15) {\n    return \"%.12g\";\n  } else {\n    var prec$1 = Pervasives.abs(prec);\n    var symb = char_of_fconv(fconv);\n    var buf = /* record */[\n      /* ind */0,\n      /* bytes */Caml_string.caml_create_string(16)\n    ];\n    buffer_add_char(buf, /* \"%\" */37);\n    bprint_fconv_flag(buf, fconv);\n    buffer_add_char(buf, /* \".\" */46);\n    buffer_add_string(buf, String(prec$1));\n    buffer_add_char(buf, symb);\n    return buffer_contents(buf);\n  }\n}\n\nfunction convert_int(iconv, n) {\n  return Caml_format.caml_format_int(format_of_iconv(iconv), n);\n}\n\nfunction convert_int32(iconv, n) {\n  return Caml_format.caml_int32_format(format_of_aconv(iconv, /* \"l\" */108), n);\n}\n\nfunction convert_nativeint(iconv, n) {\n  return Caml_format.caml_nativeint_format(format_of_aconv(iconv, /* \"n\" */110), n);\n}\n\nfunction convert_int64(iconv, n) {\n  return Caml_format.caml_int64_format(format_of_aconv(iconv, /* \"L\" */76), n);\n}\n\nfunction convert_float(fconv, prec, x) {\n  var prec$1 = Pervasives.abs(prec);\n  var str = Caml_format.caml_format_float(format_of_fconv(fconv, prec$1), x);\n  if (fconv !== /* Float_F */15) {\n    return str;\n  } else {\n    var len = str.length;\n    var is_valid = function (_i) {\n      while(true) {\n        var i = _i;\n        if (i === len) {\n          return /* false */0;\n        } else {\n          var match = Caml_string.get(str, i);\n          var switcher = match - 46 | 0;\n          if (switcher > 23 || switcher < 0) {\n            if (switcher !== 55) {\n              _i = i + 1 | 0;\n              continue ;\n              \n            } else {\n              return /* true */1;\n            }\n          } else if (switcher > 22 || switcher < 1) {\n            return /* true */1;\n          } else {\n            _i = i + 1 | 0;\n            continue ;\n            \n          }\n        }\n      };\n    };\n    var match = Caml_float.caml_classify_float(x);\n    if (match !== 3) {\n      if (match >= 4) {\n        return \"nan\";\n      } else if (is_valid(0)) {\n        return str;\n      } else {\n        return str + \".\";\n      }\n    } else if (x < 0.0) {\n      return \"neg_infinity\";\n    } else {\n      return \"infinity\";\n    }\n  }\n}\n\nfunction format_caml_char(c) {\n  return $$String.concat(Char.escaped(c), /* :: */[\n              \"'\",\n              /* :: */[\n                \"'\",\n                /* [] */0\n              ]\n            ]);\n}\n\nfunction string_of_fmtty(fmtty) {\n  var buf = /* record */[\n    /* ind */0,\n    /* bytes */Caml_string.caml_create_string(16)\n  ];\n  bprint_fmtty(buf, fmtty);\n  return buffer_contents(buf);\n}\n\nfunction make_printf(_k, o, _acc, _fmt) {\n  while(true) {\n    var fmt = _fmt;\n    var acc = _acc;\n    var k = _k;\n    if (typeof fmt === \"number\") {\n      return Curry._2(k, o, acc);\n    } else {\n      switch (fmt.tag | 0) {\n        case 0 : \n            var rest = fmt[0];\n            return (function(k,acc,rest){\n            return function (c) {\n              var new_acc = /* Acc_data_char */Block.__(5, [\n                  acc,\n                  c\n                ]);\n              return make_printf(k, o, new_acc, rest);\n            }\n            }(k,acc,rest));\n        case 1 : \n            var rest$1 = fmt[0];\n            return (function(k,acc,rest$1){\n            return function (c) {\n              var new_acc_001 = format_caml_char(c);\n              var new_acc = /* Acc_data_string */Block.__(4, [\n                  acc,\n                  new_acc_001\n                ]);\n              return make_printf(k, o, new_acc, rest$1);\n            }\n            }(k,acc,rest$1));\n        case 2 : \n            return make_string_padding(k, o, acc, fmt[1], fmt[0], (function (str) {\n                          return str;\n                        }));\n        case 3 : \n            return make_string_padding(k, o, acc, fmt[1], fmt[0], string_to_caml_string);\n        case 4 : \n            return make_int_padding_precision(k, o, acc, fmt[3], fmt[1], fmt[2], convert_int, fmt[0]);\n        case 5 : \n            return make_int_padding_precision(k, o, acc, fmt[3], fmt[1], fmt[2], convert_int32, fmt[0]);\n        case 6 : \n            return make_int_padding_precision(k, o, acc, fmt[3], fmt[1], fmt[2], convert_nativeint, fmt[0]);\n        case 7 : \n            return make_int_padding_precision(k, o, acc, fmt[3], fmt[1], fmt[2], convert_int64, fmt[0]);\n        case 8 : \n            var k$1 = k;\n            var o$1 = o;\n            var acc$1 = acc;\n            var fmt$1 = fmt[3];\n            var pad = fmt[1];\n            var prec = fmt[2];\n            var fconv = fmt[0];\n            if (typeof pad === \"number\") {\n              if (typeof prec === \"number\") {\n                if (prec !== 0) {\n                  return (function(k$1,o$1,acc$1,fmt$1,fconv){\n                  return function (p, x) {\n                    var str = convert_float(fconv, p, x);\n                    return make_printf(k$1, o$1, /* Acc_data_string */Block.__(4, [\n                                  acc$1,\n                                  str\n                                ]), fmt$1);\n                  }\n                  }(k$1,o$1,acc$1,fmt$1,fconv));\n                } else {\n                  return (function(k$1,o$1,acc$1,fmt$1,fconv){\n                  return function (x) {\n                    var str = convert_float(fconv, 6, x);\n                    return make_printf(k$1, o$1, /* Acc_data_string */Block.__(4, [\n                                  acc$1,\n                                  str\n                                ]), fmt$1);\n                  }\n                  }(k$1,o$1,acc$1,fmt$1,fconv));\n                }\n              } else {\n                var p = prec[0];\n                return (function(k$1,o$1,acc$1,fmt$1,fconv,p){\n                return function (x) {\n                  var str = convert_float(fconv, p, x);\n                  return make_printf(k$1, o$1, /* Acc_data_string */Block.__(4, [\n                                acc$1,\n                                str\n                              ]), fmt$1);\n                }\n                }(k$1,o$1,acc$1,fmt$1,fconv,p));\n              }\n            } else if (pad.tag) {\n              var padty = pad[0];\n              if (typeof prec === \"number\") {\n                if (prec !== 0) {\n                  return (function(k$1,o$1,acc$1,fmt$1,fconv,padty){\n                  return function (w, p, x) {\n                    var str = fix_padding(padty, w, convert_float(fconv, p, x));\n                    return make_printf(k$1, o$1, /* Acc_data_string */Block.__(4, [\n                                  acc$1,\n                                  str\n                                ]), fmt$1);\n                  }\n                  }(k$1,o$1,acc$1,fmt$1,fconv,padty));\n                } else {\n                  return (function(k$1,o$1,acc$1,fmt$1,fconv,padty){\n                  return function (w, x) {\n                    var str = convert_float(fconv, 6, x);\n                    var str$prime = fix_padding(padty, w, str);\n                    return make_printf(k$1, o$1, /* Acc_data_string */Block.__(4, [\n                                  acc$1,\n                                  str$prime\n                                ]), fmt$1);\n                  }\n                  }(k$1,o$1,acc$1,fmt$1,fconv,padty));\n                }\n              } else {\n                var p$1 = prec[0];\n                return (function(k$1,o$1,acc$1,fmt$1,fconv,padty,p$1){\n                return function (w, x) {\n                  var str = fix_padding(padty, w, convert_float(fconv, p$1, x));\n                  return make_printf(k$1, o$1, /* Acc_data_string */Block.__(4, [\n                                acc$1,\n                                str\n                              ]), fmt$1);\n                }\n                }(k$1,o$1,acc$1,fmt$1,fconv,padty,p$1));\n              }\n            } else {\n              var w = pad[1];\n              var padty$1 = pad[0];\n              if (typeof prec === \"number\") {\n                if (prec !== 0) {\n                  return (function(k$1,o$1,acc$1,fmt$1,fconv,padty$1,w){\n                  return function (p, x) {\n                    var str = fix_padding(padty$1, w, convert_float(fconv, p, x));\n                    return make_printf(k$1, o$1, /* Acc_data_string */Block.__(4, [\n                                  acc$1,\n                                  str\n                                ]), fmt$1);\n                  }\n                  }(k$1,o$1,acc$1,fmt$1,fconv,padty$1,w));\n                } else {\n                  return (function(k$1,o$1,acc$1,fmt$1,fconv,padty$1,w){\n                  return function (x) {\n                    var str = convert_float(fconv, 6, x);\n                    var str$prime = fix_padding(padty$1, w, str);\n                    return make_printf(k$1, o$1, /* Acc_data_string */Block.__(4, [\n                                  acc$1,\n                                  str$prime\n                                ]), fmt$1);\n                  }\n                  }(k$1,o$1,acc$1,fmt$1,fconv,padty$1,w));\n                }\n              } else {\n                var p$2 = prec[0];\n                return (function(k$1,o$1,acc$1,fmt$1,fconv,padty$1,w,p$2){\n                return function (x) {\n                  var str = fix_padding(padty$1, w, convert_float(fconv, p$2, x));\n                  return make_printf(k$1, o$1, /* Acc_data_string */Block.__(4, [\n                                acc$1,\n                                str\n                              ]), fmt$1);\n                }\n                }(k$1,o$1,acc$1,fmt$1,fconv,padty$1,w,p$2));\n              }\n            }\n        case 9 : \n            var rest$2 = fmt[0];\n            return (function(k,acc,rest$2){\n            return function (b) {\n              return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                            acc,\n                            b ? \"true\" : \"false\"\n                          ]), rest$2);\n            }\n            }(k,acc,rest$2));\n        case 10 : \n            _fmt = fmt[0];\n            _acc = /* Acc_flush */Block.__(7, [acc]);\n            continue ;\n            case 11 : \n            _fmt = fmt[1];\n            _acc = /* Acc_string_literal */Block.__(2, [\n                acc,\n                fmt[0]\n              ]);\n            continue ;\n            case 12 : \n            _fmt = fmt[1];\n            _acc = /* Acc_char_literal */Block.__(3, [\n                acc,\n                fmt[0]\n              ]);\n            continue ;\n            case 13 : \n            var rest$3 = fmt[2];\n            var ty = string_of_fmtty(fmt[1]);\n            return (function(k,acc,rest$3,ty){\n            return function () {\n              return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                            acc,\n                            ty\n                          ]), rest$3);\n            }\n            }(k,acc,rest$3,ty));\n        case 14 : \n            var rest$4 = fmt[2];\n            var fmtty = fmt[1];\n            return (function(k,acc,fmtty,rest$4){\n            return function (param) {\n              return make_printf(k, o, acc, CamlinternalFormatBasics.concat_fmt(recast(param[0], fmtty), rest$4));\n            }\n            }(k,acc,fmtty,rest$4));\n        case 15 : \n            var rest$5 = fmt[0];\n            return (function(k,acc,rest$5){\n            return function (f, x) {\n              return make_printf(k, o, /* Acc_delay */Block.__(6, [\n                            acc,\n                            (function (o) {\n                                return Curry._2(f, o, x);\n                              })\n                          ]), rest$5);\n            }\n            }(k,acc,rest$5));\n        case 16 : \n            var rest$6 = fmt[0];\n            return (function(k,acc,rest$6){\n            return function (f) {\n              return make_printf(k, o, /* Acc_delay */Block.__(6, [\n                            acc,\n                            f\n                          ]), rest$6);\n            }\n            }(k,acc,rest$6));\n        case 17 : \n            _fmt = fmt[1];\n            _acc = /* Acc_formatting_lit */Block.__(0, [\n                acc,\n                fmt[0]\n              ]);\n            continue ;\n            case 18 : \n            var match = fmt[0];\n            if (match.tag) {\n              var rest$7 = fmt[1];\n              var k$prime = (function(k,acc,rest$7){\n              return function k$prime(koc, kacc) {\n                return make_printf(k, koc, /* Acc_formatting_gen */Block.__(1, [\n                              acc,\n                              /* Acc_open_box */Block.__(1, [kacc])\n                            ]), rest$7);\n              }\n              }(k,acc,rest$7));\n              _fmt = match[0][0];\n              _acc = /* End_of_acc */0;\n              _k = k$prime;\n              continue ;\n              \n            } else {\n              var rest$8 = fmt[1];\n              var k$prime$1 = (function(k,acc,rest$8){\n              return function k$prime$1(koc, kacc) {\n                return make_printf(k, koc, /* Acc_formatting_gen */Block.__(1, [\n                              acc,\n                              /* Acc_open_tag */Block.__(0, [kacc])\n                            ]), rest$8);\n              }\n              }(k,acc,rest$8));\n              _fmt = match[0][0];\n              _acc = /* End_of_acc */0;\n              _k = k$prime$1;\n              continue ;\n              \n            }\n        case 19 : \n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  [\n                    \"camlinternalFormat.ml\",\n                    1449,\n                    4\n                  ]\n                ];\n        case 20 : \n            var rest$9 = fmt[2];\n            var new_acc = /* Acc_invalid_arg */Block.__(8, [\n                acc,\n                \"Printf: bad conversion %[\"\n              ]);\n            return (function(k,rest$9,new_acc){\n            return function () {\n              return make_printf(k, o, new_acc, rest$9);\n            }\n            }(k,rest$9,new_acc));\n        case 21 : \n            var rest$10 = fmt[1];\n            return (function(k,acc,rest$10){\n            return function (n) {\n              var new_acc_001 = Caml_format.caml_format_int(\"%u\", n);\n              var new_acc = /* Acc_data_string */Block.__(4, [\n                  acc,\n                  new_acc_001\n                ]);\n              return make_printf(k, o, new_acc, rest$10);\n            }\n            }(k,acc,rest$10));\n        case 22 : \n            var rest$11 = fmt[0];\n            return (function(k,acc,rest$11){\n            return function (c) {\n              var new_acc = /* Acc_data_char */Block.__(5, [\n                  acc,\n                  c\n                ]);\n              return make_printf(k, o, new_acc, rest$11);\n            }\n            }(k,acc,rest$11));\n        case 23 : \n            var k$2 = k;\n            var o$2 = o;\n            var acc$2 = acc;\n            var ign = fmt[0];\n            var fmt$2 = fmt[1];\n            if (typeof ign === \"number\") {\n              if (ign === 3) {\n                throw [\n                      Caml_builtin_exceptions.assert_failure,\n                      [\n                        \"camlinternalFormat.ml\",\n                        1517,\n                        39\n                      ]\n                    ];\n              } else {\n                return make_invalid_arg(k$2, o$2, acc$2, fmt$2);\n              }\n            } else if (ign.tag === 8) {\n              return make_from_fmtty(k$2, o$2, acc$2, ign[1], fmt$2);\n            } else {\n              return make_invalid_arg(k$2, o$2, acc$2, fmt$2);\n            }\n        case 24 : \n            return make_custom(k, o, acc, fmt[2], fmt[0], Curry._1(fmt[1], /* () */0));\n        \n      }\n    }\n  };\n}\n\nfunction make_from_fmtty(k, o, acc, fmtty, fmt) {\n  if (typeof fmtty === \"number\") {\n    return make_invalid_arg(k, o, acc, fmt);\n  } else {\n    switch (fmtty.tag | 0) {\n      case 0 : \n          var rest = fmtty[0];\n          return (function () {\n              return make_from_fmtty(k, o, acc, rest, fmt);\n            });\n      case 1 : \n          var rest$1 = fmtty[0];\n          return (function () {\n              return make_from_fmtty(k, o, acc, rest$1, fmt);\n            });\n      case 2 : \n          var rest$2 = fmtty[0];\n          return (function () {\n              return make_from_fmtty(k, o, acc, rest$2, fmt);\n            });\n      case 3 : \n          var rest$3 = fmtty[0];\n          return (function () {\n              return make_from_fmtty(k, o, acc, rest$3, fmt);\n            });\n      case 4 : \n          var rest$4 = fmtty[0];\n          return (function () {\n              return make_from_fmtty(k, o, acc, rest$4, fmt);\n            });\n      case 5 : \n          var rest$5 = fmtty[0];\n          return (function () {\n              return make_from_fmtty(k, o, acc, rest$5, fmt);\n            });\n      case 6 : \n          var rest$6 = fmtty[0];\n          return (function () {\n              return make_from_fmtty(k, o, acc, rest$6, fmt);\n            });\n      case 7 : \n          var rest$7 = fmtty[0];\n          return (function () {\n              return make_from_fmtty(k, o, acc, rest$7, fmt);\n            });\n      case 8 : \n          var rest$8 = fmtty[1];\n          return (function () {\n              return make_from_fmtty(k, o, acc, rest$8, fmt);\n            });\n      case 9 : \n          var rest$9 = fmtty[2];\n          var ty = trans(symm(fmtty[0]), fmtty[1]);\n          return (function () {\n              return make_from_fmtty(k, o, acc, CamlinternalFormatBasics.concat_fmtty(ty, rest$9), fmt);\n            });\n      case 10 : \n          var rest$10 = fmtty[0];\n          return (function (_, _$1) {\n              return make_from_fmtty(k, o, acc, rest$10, fmt);\n            });\n      case 11 : \n          var rest$11 = fmtty[0];\n          return (function () {\n              return make_from_fmtty(k, o, acc, rest$11, fmt);\n            });\n      case 12 : \n          var rest$12 = fmtty[0];\n          return (function () {\n              return make_from_fmtty(k, o, acc, rest$12, fmt);\n            });\n      case 13 : \n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"camlinternalFormat.ml\",\n                  1540,\n                  31\n                ]\n              ];\n      case 14 : \n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"camlinternalFormat.ml\",\n                  1541,\n                  31\n                ]\n              ];\n      \n    }\n  }\n}\n\nfunction make_invalid_arg(k, o, acc, fmt) {\n  return make_printf(k, o, /* Acc_invalid_arg */Block.__(8, [\n                acc,\n                \"Printf: bad conversion %_\"\n              ]), fmt);\n}\n\nfunction make_string_padding(k, o, acc, fmt, pad, trans) {\n  if (typeof pad === \"number\") {\n    return (function (x) {\n        var new_acc_001 = Curry._1(trans, x);\n        var new_acc = /* Acc_data_string */Block.__(4, [\n            acc,\n            new_acc_001\n          ]);\n        return make_printf(k, o, new_acc, fmt);\n      });\n  } else if (pad.tag) {\n    var padty = pad[0];\n    return (function (w, x) {\n        var new_acc_001 = fix_padding(padty, w, Curry._1(trans, x));\n        var new_acc = /* Acc_data_string */Block.__(4, [\n            acc,\n            new_acc_001\n          ]);\n        return make_printf(k, o, new_acc, fmt);\n      });\n  } else {\n    var width = pad[1];\n    var padty$1 = pad[0];\n    return (function (x) {\n        var new_acc_001 = fix_padding(padty$1, width, Curry._1(trans, x));\n        var new_acc = /* Acc_data_string */Block.__(4, [\n            acc,\n            new_acc_001\n          ]);\n        return make_printf(k, o, new_acc, fmt);\n      });\n  }\n}\n\nfunction make_int_padding_precision(k, o, acc, fmt, pad, prec, trans, iconv) {\n  if (typeof pad === \"number\") {\n    if (typeof prec === \"number\") {\n      if (prec !== 0) {\n        return (function (p, x) {\n            var str = fix_int_precision(p, Curry._2(trans, iconv, x));\n            return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                          acc,\n                          str\n                        ]), fmt);\n          });\n      } else {\n        return (function (x) {\n            var str = Curry._2(trans, iconv, x);\n            return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                          acc,\n                          str\n                        ]), fmt);\n          });\n      }\n    } else {\n      var p = prec[0];\n      return (function (x) {\n          var str = fix_int_precision(p, Curry._2(trans, iconv, x));\n          return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                        acc,\n                        str\n                      ]), fmt);\n        });\n    }\n  } else if (pad.tag) {\n    var padty = pad[0];\n    if (typeof prec === \"number\") {\n      if (prec !== 0) {\n        return (function (w, p, x) {\n            var str = fix_padding(padty, w, fix_int_precision(p, Curry._2(trans, iconv, x)));\n            return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                          acc,\n                          str\n                        ]), fmt);\n          });\n      } else {\n        return (function (w, x) {\n            var str = fix_padding(padty, w, Curry._2(trans, iconv, x));\n            return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                          acc,\n                          str\n                        ]), fmt);\n          });\n      }\n    } else {\n      var p$1 = prec[0];\n      return (function (w, x) {\n          var str = fix_padding(padty, w, fix_int_precision(p$1, Curry._2(trans, iconv, x)));\n          return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                        acc,\n                        str\n                      ]), fmt);\n        });\n    }\n  } else {\n    var w = pad[1];\n    var padty$1 = pad[0];\n    if (typeof prec === \"number\") {\n      if (prec !== 0) {\n        return (function (p, x) {\n            var str = fix_padding(padty$1, w, fix_int_precision(p, Curry._2(trans, iconv, x)));\n            return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                          acc,\n                          str\n                        ]), fmt);\n          });\n      } else {\n        return (function (x) {\n            var str = fix_padding(padty$1, w, Curry._2(trans, iconv, x));\n            return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                          acc,\n                          str\n                        ]), fmt);\n          });\n      }\n    } else {\n      var p$2 = prec[0];\n      return (function (x) {\n          var str = fix_padding(padty$1, w, fix_int_precision(p$2, Curry._2(trans, iconv, x)));\n          return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                        acc,\n                        str\n                      ]), fmt);\n        });\n    }\n  }\n}\n\nfunction make_custom(k, o, acc, rest, arity, f) {\n  if (arity) {\n    var arity$1 = arity[0];\n    return (function (x) {\n        return make_custom(k, o, acc, rest, arity$1, Curry._1(f, x));\n      });\n  } else {\n    return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                  acc,\n                  f\n                ]), rest);\n  }\n}\n\nfunction output_acc(o, _acc) {\n  while(true) {\n    var acc = _acc;\n    var exit = 0;\n    if (typeof acc === \"number\") {\n      return /* () */0;\n    } else {\n      switch (acc.tag | 0) {\n        case 0 : \n            var s = string_of_formatting_lit(acc[1]);\n            output_acc(o, acc[0]);\n            return Pervasives.output_string(o, s);\n        case 1 : \n            var match = acc[1];\n            var p = acc[0];\n            output_acc(o, p);\n            if (match.tag) {\n              Pervasives.output_string(o, \"@[\");\n              _acc = match[0];\n              continue ;\n              \n            } else {\n              Pervasives.output_string(o, \"@{\");\n              _acc = match[0];\n              continue ;\n              \n            }\n        case 2 : \n        case 4 : \n            exit = 1;\n            break;\n        case 3 : \n        case 5 : \n            exit = 2;\n            break;\n        case 6 : \n            output_acc(o, acc[0]);\n            return Curry._1(acc[1], o);\n        case 7 : \n            output_acc(o, acc[0]);\n            return Caml_io.caml_ml_flush(o);\n        case 8 : \n            output_acc(o, acc[0]);\n            throw [\n                  Caml_builtin_exceptions.invalid_argument,\n                  acc[1]\n                ];\n        \n      }\n    }\n    switch (exit) {\n      case 1 : \n          output_acc(o, acc[0]);\n          return Pervasives.output_string(o, acc[1]);\n      case 2 : \n          output_acc(o, acc[0]);\n          return Caml_io.caml_ml_output_char(o, acc[1]);\n      \n    }\n  };\n}\n\nfunction bufput_acc(b, _acc) {\n  while(true) {\n    var acc = _acc;\n    var exit = 0;\n    if (typeof acc === \"number\") {\n      return /* () */0;\n    } else {\n      switch (acc.tag | 0) {\n        case 0 : \n            var s = string_of_formatting_lit(acc[1]);\n            bufput_acc(b, acc[0]);\n            return Buffer.add_string(b, s);\n        case 1 : \n            var match = acc[1];\n            var p = acc[0];\n            bufput_acc(b, p);\n            if (match.tag) {\n              Buffer.add_string(b, \"@[\");\n              _acc = match[0];\n              continue ;\n              \n            } else {\n              Buffer.add_string(b, \"@{\");\n              _acc = match[0];\n              continue ;\n              \n            }\n        case 2 : \n        case 4 : \n            exit = 1;\n            break;\n        case 3 : \n        case 5 : \n            exit = 2;\n            break;\n        case 6 : \n            bufput_acc(b, acc[0]);\n            return Curry._1(acc[1], b);\n        case 7 : \n            _acc = acc[0];\n            continue ;\n            case 8 : \n            bufput_acc(b, acc[0]);\n            throw [\n                  Caml_builtin_exceptions.invalid_argument,\n                  acc[1]\n                ];\n        \n      }\n    }\n    switch (exit) {\n      case 1 : \n          bufput_acc(b, acc[0]);\n          return Buffer.add_string(b, acc[1]);\n      case 2 : \n          bufput_acc(b, acc[0]);\n          return Buffer.add_char(b, acc[1]);\n      \n    }\n  };\n}\n\nfunction strput_acc(b, _acc) {\n  while(true) {\n    var acc = _acc;\n    var exit = 0;\n    if (typeof acc === \"number\") {\n      return /* () */0;\n    } else {\n      switch (acc.tag | 0) {\n        case 0 : \n            var s = string_of_formatting_lit(acc[1]);\n            strput_acc(b, acc[0]);\n            return Buffer.add_string(b, s);\n        case 1 : \n            var match = acc[1];\n            var p = acc[0];\n            strput_acc(b, p);\n            if (match.tag) {\n              Buffer.add_string(b, \"@[\");\n              _acc = match[0];\n              continue ;\n              \n            } else {\n              Buffer.add_string(b, \"@{\");\n              _acc = match[0];\n              continue ;\n              \n            }\n        case 2 : \n        case 4 : \n            exit = 1;\n            break;\n        case 3 : \n        case 5 : \n            exit = 2;\n            break;\n        case 6 : \n            strput_acc(b, acc[0]);\n            return Buffer.add_string(b, Curry._1(acc[1], /* () */0));\n        case 7 : \n            _acc = acc[0];\n            continue ;\n            case 8 : \n            strput_acc(b, acc[0]);\n            throw [\n                  Caml_builtin_exceptions.invalid_argument,\n                  acc[1]\n                ];\n        \n      }\n    }\n    switch (exit) {\n      case 1 : \n          strput_acc(b, acc[0]);\n          return Buffer.add_string(b, acc[1]);\n      case 2 : \n          strput_acc(b, acc[0]);\n          return Buffer.add_char(b, acc[1]);\n      \n    }\n  };\n}\n\nfunction failwith_message(param) {\n  var buf = Buffer.create(256);\n  var k = function (_, acc) {\n    strput_acc(buf, acc);\n    var s = Buffer.contents(buf);\n    throw [\n          Caml_builtin_exceptions.failure,\n          s\n        ];\n  };\n  return make_printf(k, /* () */0, /* End_of_acc */0, param[0]);\n}\n\nfunction open_box_of_string(str) {\n  if (str === \"\") {\n    return /* tuple */[\n            0,\n            /* Pp_box */4\n          ];\n  } else {\n    var len = str.length;\n    var invalid_box = function () {\n      return Curry._1(failwith_message(/* Format */[\n                      /* String_literal */Block.__(11, [\n                          \"invalid box description \",\n                          /* Caml_string */Block.__(3, [\n                              /* No_padding */0,\n                              /* End_of_format */0\n                            ])\n                        ]),\n                      \"invalid box description %S\"\n                    ]), str);\n    };\n    var parse_spaces = function (_i) {\n      while(true) {\n        var i = _i;\n        if (i === len) {\n          return i;\n        } else {\n          var match = Caml_string.get(str, i);\n          if (match !== 9) {\n            if (match !== 32) {\n              return i;\n            } else {\n              _i = i + 1 | 0;\n              continue ;\n              \n            }\n          } else {\n            _i = i + 1 | 0;\n            continue ;\n            \n          }\n        }\n      };\n    };\n    var parse_lword = function (_, _j) {\n      while(true) {\n        var j = _j;\n        if (j === len) {\n          return j;\n        } else {\n          var match = Caml_string.get(str, j);\n          if (match > 122 || match < 97) {\n            return j;\n          } else {\n            _j = j + 1 | 0;\n            continue ;\n            \n          }\n        }\n      };\n    };\n    var parse_int = function (_, _j) {\n      while(true) {\n        var j = _j;\n        if (j === len) {\n          return j;\n        } else {\n          var match = Caml_string.get(str, j);\n          if (match >= 48) {\n            if (match >= 58) {\n              return j;\n            } else {\n              _j = j + 1 | 0;\n              continue ;\n              \n            }\n          } else if (match !== 45) {\n            return j;\n          } else {\n            _j = j + 1 | 0;\n            continue ;\n            \n          }\n        }\n      };\n    };\n    var wstart = parse_spaces(0);\n    var wend = parse_lword(wstart, wstart);\n    var box_name = $$String.sub(str, wstart, wend - wstart | 0);\n    var nstart = parse_spaces(wend);\n    var nend = parse_int(nstart, nstart);\n    var indent;\n    if (nstart === nend) {\n      indent = 0;\n    } else {\n      try {\n        indent = Caml_format.caml_int_of_string($$String.sub(str, nstart, nend - nstart | 0));\n      }\n      catch (raw_exn){\n        var exn = Js_exn.internalToOCamlException(raw_exn);\n        if (exn[0] === Caml_builtin_exceptions.failure) {\n          indent = invalid_box(/* () */0);\n        } else {\n          throw exn;\n        }\n      }\n    }\n    var exp_end = parse_spaces(nend);\n    if (exp_end !== len) {\n      invalid_box(/* () */0);\n    }\n    var box_type;\n    switch (box_name) {\n      case \"\" : \n      case \"b\" : \n          box_type = /* Pp_box */4;\n          break;\n      case \"h\" : \n          box_type = /* Pp_hbox */0;\n          break;\n      case \"hov\" : \n          box_type = /* Pp_hovbox */3;\n          break;\n      case \"hv\" : \n          box_type = /* Pp_hvbox */2;\n          break;\n      case \"v\" : \n          box_type = /* Pp_vbox */1;\n          break;\n      default:\n        box_type = invalid_box(/* () */0);\n    }\n    return /* tuple */[\n            indent,\n            box_type\n          ];\n  }\n}\n\nfunction make_padding_fmt_ebb(pad, fmt) {\n  if (typeof pad === \"number\") {\n    return /* Padding_fmt_EBB */[\n            /* No_padding */0,\n            fmt\n          ];\n  } else if (pad.tag) {\n    return /* Padding_fmt_EBB */[\n            /* Arg_padding */Block.__(1, [pad[0]]),\n            fmt\n          ];\n  } else {\n    return /* Padding_fmt_EBB */[\n            /* Lit_padding */Block.__(0, [\n                pad[0],\n                pad[1]\n              ]),\n            fmt\n          ];\n  }\n}\n\nfunction make_precision_fmt_ebb(prec, fmt) {\n  if (typeof prec === \"number\") {\n    if (prec !== 0) {\n      return /* Precision_fmt_EBB */[\n              /* Arg_precision */1,\n              fmt\n            ];\n    } else {\n      return /* Precision_fmt_EBB */[\n              /* No_precision */0,\n              fmt\n            ];\n    }\n  } else {\n    return /* Precision_fmt_EBB */[\n            /* Lit_precision */[prec[0]],\n            fmt\n          ];\n  }\n}\n\nfunction make_padprec_fmt_ebb(pad, prec, fmt) {\n  var match = make_precision_fmt_ebb(prec, fmt);\n  var fmt$prime = match[1];\n  var prec$1 = match[0];\n  if (typeof pad === \"number\") {\n    return /* Padprec_fmt_EBB */[\n            /* No_padding */0,\n            prec$1,\n            fmt$prime\n          ];\n  } else if (pad.tag) {\n    return /* Padprec_fmt_EBB */[\n            /* Arg_padding */Block.__(1, [pad[0]]),\n            prec$1,\n            fmt$prime\n          ];\n  } else {\n    return /* Padprec_fmt_EBB */[\n            /* Lit_padding */Block.__(0, [\n                pad[0],\n                pad[1]\n              ]),\n            prec$1,\n            fmt$prime\n          ];\n  }\n}\n\nfunction fmt_ebb_of_string(legacy_behavior, str) {\n  var legacy_behavior$1 = legacy_behavior ? legacy_behavior[0] : /* true */1;\n  var invalid_format_message = function (str_ind, msg) {\n    return Curry._3(failwith_message(/* Format */[\n                    /* String_literal */Block.__(11, [\n                        \"invalid format \",\n                        /* Caml_string */Block.__(3, [\n                            /* No_padding */0,\n                            /* String_literal */Block.__(11, [\n                                \": at character number \",\n                                /* Int */Block.__(4, [\n                                    /* Int_d */0,\n                                    /* No_padding */0,\n                                    /* No_precision */0,\n                                    /* String_literal */Block.__(11, [\n                                        \", \",\n                                        /* String */Block.__(2, [\n                                            /* No_padding */0,\n                                            /* End_of_format */0\n                                          ])\n                                      ])\n                                  ])\n                              ])\n                          ])\n                      ]),\n                    \"invalid format %S: at character number %d, %s\"\n                  ]), str, str_ind, msg);\n  };\n  var invalid_format_without = function (str_ind, c, s) {\n    return Curry._4(failwith_message(/* Format */[\n                    /* String_literal */Block.__(11, [\n                        \"invalid format \",\n                        /* Caml_string */Block.__(3, [\n                            /* No_padding */0,\n                            /* String_literal */Block.__(11, [\n                                \": at character number \",\n                                /* Int */Block.__(4, [\n                                    /* Int_d */0,\n                                    /* No_padding */0,\n                                    /* No_precision */0,\n                                    /* String_literal */Block.__(11, [\n                                        \", '\",\n                                        /* Char */Block.__(0, [/* String_literal */Block.__(11, [\n                                                \"' without \",\n                                                /* String */Block.__(2, [\n                                                    /* No_padding */0,\n                                                    /* End_of_format */0\n                                                  ])\n                                              ])])\n                                      ])\n                                  ])\n                              ])\n                          ])\n                      ]),\n                    \"invalid format %S: at character number %d, '%c' without %s\"\n                  ]), str, str_ind, c, s);\n  };\n  var expected_character = function (str_ind, expected, read) {\n    return Curry._4(failwith_message(/* Format */[\n                    /* String_literal */Block.__(11, [\n                        \"invalid format \",\n                        /* Caml_string */Block.__(3, [\n                            /* No_padding */0,\n                            /* String_literal */Block.__(11, [\n                                \": at character number \",\n                                /* Int */Block.__(4, [\n                                    /* Int_d */0,\n                                    /* No_padding */0,\n                                    /* No_precision */0,\n                                    /* String_literal */Block.__(11, [\n                                        \", \",\n                                        /* String */Block.__(2, [\n                                            /* No_padding */0,\n                                            /* String_literal */Block.__(11, [\n                                                \" expected, read \",\n                                                /* Caml_char */Block.__(1, [/* End_of_format */0])\n                                              ])\n                                          ])\n                                      ])\n                                  ])\n                              ])\n                          ])\n                      ]),\n                    \"invalid format %S: at character number %d, %s expected, read %C\"\n                  ]), str, str_ind, expected, read);\n  };\n  var compute_int_conv = function (pct_ind, str_ind, _plus, _sharp, _space, symb) {\n    while(true) {\n      var space = _space;\n      var sharp = _sharp;\n      var plus = _plus;\n      var exit = 0;\n      var exit$1 = 0;\n      if (plus !== 0) {\n        if (sharp !== 0) {\n          exit$1 = 2;\n        } else if (space !== 0) {\n          exit = 1;\n        } else if (symb !== 100) {\n          if (symb !== 105) {\n            exit = 1;\n          } else {\n            return /* Int_pi */4;\n          }\n        } else {\n          return /* Int_pd */1;\n        }\n      } else if (sharp !== 0) {\n        if (space !== 0) {\n          exit$1 = 2;\n        } else if (symb !== 88) {\n          if (symb !== 111) {\n            if (symb !== 120) {\n              exit$1 = 2;\n            } else {\n              return /* Int_Cx */7;\n            }\n          } else {\n            return /* Int_Co */11;\n          }\n        } else {\n          return /* Int_CX */9;\n        }\n      } else if (space !== 0) {\n        if (symb !== 100) {\n          if (symb !== 105) {\n            exit = 1;\n          } else {\n            return /* Int_si */5;\n          }\n        } else {\n          return /* Int_sd */2;\n        }\n      } else {\n        var switcher = symb - 88 | 0;\n        if (switcher > 32 || switcher < 0) {\n          exit = 1;\n        } else {\n          switch (switcher) {\n            case 0 : \n                return /* Int_X */8;\n            case 12 : \n                return /* Int_d */0;\n            case 17 : \n                return /* Int_i */3;\n            case 23 : \n                return /* Int_o */10;\n            case 29 : \n                return /* Int_u */12;\n            case 1 : \n            case 2 : \n            case 3 : \n            case 4 : \n            case 5 : \n            case 6 : \n            case 7 : \n            case 8 : \n            case 9 : \n            case 10 : \n            case 11 : \n            case 13 : \n            case 14 : \n            case 15 : \n            case 16 : \n            case 18 : \n            case 19 : \n            case 20 : \n            case 21 : \n            case 22 : \n            case 24 : \n            case 25 : \n            case 26 : \n            case 27 : \n            case 28 : \n            case 30 : \n            case 31 : \n                exit = 1;\n                break;\n            case 32 : \n                return /* Int_x */6;\n            \n          }\n        }\n      }\n      if (exit$1 === 2) {\n        var exit$2 = 0;\n        var switcher$1 = symb - 88 | 0;\n        if (switcher$1 > 32 || switcher$1 < 0) {\n          exit = 1;\n        } else {\n          switch (switcher$1) {\n            case 0 : \n                if (legacy_behavior$1) {\n                  return /* Int_CX */9;\n                } else {\n                  exit = 1;\n                }\n                break;\n            case 23 : \n                if (legacy_behavior$1) {\n                  return /* Int_Co */11;\n                } else {\n                  exit = 1;\n                }\n                break;\n            case 12 : \n            case 17 : \n            case 29 : \n                exit$2 = 3;\n                break;\n            case 1 : \n            case 2 : \n            case 3 : \n            case 4 : \n            case 5 : \n            case 6 : \n            case 7 : \n            case 8 : \n            case 9 : \n            case 10 : \n            case 11 : \n            case 13 : \n            case 14 : \n            case 15 : \n            case 16 : \n            case 18 : \n            case 19 : \n            case 20 : \n            case 21 : \n            case 22 : \n            case 24 : \n            case 25 : \n            case 26 : \n            case 27 : \n            case 28 : \n            case 30 : \n            case 31 : \n                exit = 1;\n                break;\n            case 32 : \n                if (legacy_behavior$1) {\n                  return /* Int_Cx */7;\n                } else {\n                  exit = 1;\n                }\n                break;\n            \n          }\n        }\n        if (exit$2 === 3) {\n          if (legacy_behavior$1) {\n            _sharp = /* false */0;\n            continue ;\n            \n          } else {\n            return incompatible_flag(pct_ind, str_ind, symb, \"'#'\");\n          }\n        }\n        \n      }\n      if (exit === 1) {\n        if (plus !== 0) {\n          if (space !== 0) {\n            if (legacy_behavior$1) {\n              _space = /* false */0;\n              continue ;\n              \n            } else {\n              return incompatible_flag(pct_ind, str_ind, /* \" \" */32, \"'+'\");\n            }\n          } else if (legacy_behavior$1) {\n            _plus = /* false */0;\n            continue ;\n            \n          } else {\n            return incompatible_flag(pct_ind, str_ind, symb, \"'+'\");\n          }\n        } else if (space !== 0) {\n          if (legacy_behavior$1) {\n            _space = /* false */0;\n            continue ;\n            \n          } else {\n            return incompatible_flag(pct_ind, str_ind, symb, \"' '\");\n          }\n        } else {\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"camlinternalFormat.ml\",\n                  2719,\n                  28\n                ]\n              ];\n        }\n      }\n      \n    };\n  };\n  var incompatible_flag = function (pct_ind, str_ind, symb, option) {\n    var subfmt = $$String.sub(str, pct_ind, str_ind - pct_ind | 0);\n    return Curry._5(failwith_message(/* Format */[\n                    /* String_literal */Block.__(11, [\n                        \"invalid format \",\n                        /* Caml_string */Block.__(3, [\n                            /* No_padding */0,\n                            /* String_literal */Block.__(11, [\n                                \": at character number \",\n                                /* Int */Block.__(4, [\n                                    /* Int_d */0,\n                                    /* No_padding */0,\n                                    /* No_precision */0,\n                                    /* String_literal */Block.__(11, [\n                                        \", \",\n                                        /* String */Block.__(2, [\n                                            /* No_padding */0,\n                                            /* String_literal */Block.__(11, [\n                                                \" is incompatible with '\",\n                                                /* Char */Block.__(0, [/* String_literal */Block.__(11, [\n                                                        \"' in sub-format \",\n                                                        /* Caml_string */Block.__(3, [\n                                                            /* No_padding */0,\n                                                            /* End_of_format */0\n                                                          ])\n                                                      ])])\n                                              ])\n                                          ])\n                                      ])\n                                  ])\n                              ])\n                          ])\n                      ]),\n                    \"invalid format %S: at character number %d, %s is incompatible with '%c' in sub-format %S\"\n                  ]), str, pct_ind, option, symb, subfmt);\n  };\n  var parse_positive = function (_str_ind, end_ind, _acc) {\n    while(true) {\n      var acc = _acc;\n      var str_ind = _str_ind;\n      if (str_ind === end_ind) {\n        invalid_format_message(end_ind, \"unexpected end of format\");\n      }\n      var c = Caml_string.get(str, str_ind);\n      if (c > 57 || c < 48) {\n        return /* tuple */[\n                str_ind,\n                acc\n              ];\n      } else {\n        var new_acc = Caml_int32.imul(acc, 10) + (c - /* \"0\" */48 | 0) | 0;\n        _acc = new_acc;\n        _str_ind = str_ind + 1 | 0;\n        continue ;\n        \n      }\n    };\n  };\n  var parse_after_precision = function (pct_ind, str_ind, end_ind, minus, plus, sharp, space, ign, pad, prec) {\n    if (str_ind === end_ind) {\n      invalid_format_message(end_ind, \"unexpected end of format\");\n    }\n    var parse_conv = function (padprec) {\n      return parse_conversion(pct_ind, str_ind + 1 | 0, end_ind, plus, sharp, space, ign, pad, prec, padprec, Caml_string.get(str, str_ind));\n    };\n    if (typeof pad === \"number\") {\n      var exit = 0;\n      if (typeof prec === \"number\" && prec === 0) {\n        return parse_conv(/* No_padding */0);\n      } else {\n        exit = 1;\n      }\n      if (exit === 1) {\n        if (minus !== 0) {\n          if (typeof prec === \"number\") {\n            return parse_conv(/* Arg_padding */Block.__(1, [/* Left */0]));\n          } else {\n            return parse_conv(/* Lit_padding */Block.__(0, [\n                          /* Left */0,\n                          prec[0]\n                        ]));\n          }\n        } else if (typeof prec === \"number\") {\n          return parse_conv(/* Arg_padding */Block.__(1, [/* Right */1]));\n        } else {\n          return parse_conv(/* Lit_padding */Block.__(0, [\n                        /* Right */1,\n                        prec[0]\n                      ]));\n        }\n      }\n      \n    } else {\n      return parse_conv(pad);\n    }\n  };\n  var parse_after_padding = function (pct_ind, str_ind, end_ind, minus, plus, sharp, space, ign, pad) {\n    if (str_ind === end_ind) {\n      invalid_format_message(end_ind, \"unexpected end of format\");\n    }\n    var symb = Caml_string.get(str, str_ind);\n    if (symb !== 46) {\n      return parse_conversion(pct_ind, str_ind + 1 | 0, end_ind, plus, sharp, space, ign, pad, /* No_precision */0, pad, symb);\n    } else {\n      var pct_ind$1 = pct_ind;\n      var str_ind$1 = str_ind + 1 | 0;\n      var end_ind$1 = end_ind;\n      var minus$1 = minus;\n      var plus$1 = plus;\n      var sharp$1 = sharp;\n      var space$1 = space;\n      var ign$1 = ign;\n      var pad$1 = pad;\n      if (str_ind$1 === end_ind$1) {\n        invalid_format_message(end_ind$1, \"unexpected end of format\");\n      }\n      var parse_literal = function (minus, str_ind) {\n        var match = parse_positive(str_ind, end_ind$1, 0);\n        return parse_after_precision(pct_ind$1, match[0], end_ind$1, minus, plus$1, sharp$1, space$1, ign$1, pad$1, /* Lit_precision */[match[1]]);\n      };\n      var symb$1 = Caml_string.get(str, str_ind$1);\n      var exit = 0;\n      var exit$1 = 0;\n      if (symb$1 >= 48) {\n        if (symb$1 >= 58) {\n          exit = 1;\n        } else {\n          return parse_literal(minus$1, str_ind$1);\n        }\n      } else if (symb$1 >= 42) {\n        switch (symb$1 - 42 | 0) {\n          case 0 : \n              return parse_after_precision(pct_ind$1, str_ind$1 + 1 | 0, end_ind$1, minus$1, plus$1, sharp$1, space$1, ign$1, pad$1, /* Arg_precision */1);\n          case 1 : \n          case 3 : \n              exit$1 = 2;\n              break;\n          case 2 : \n          case 4 : \n          case 5 : \n              exit = 1;\n              break;\n          \n        }\n      } else {\n        exit = 1;\n      }\n      if (exit$1 === 2) {\n        if (legacy_behavior$1) {\n          return parse_literal(minus$1 || +(symb$1 === /* \"-\" */45), str_ind$1 + 1 | 0);\n        } else {\n          exit = 1;\n        }\n      }\n      if (exit === 1) {\n        if (legacy_behavior$1) {\n          return parse_after_precision(pct_ind$1, str_ind$1, end_ind$1, minus$1, plus$1, sharp$1, space$1, ign$1, pad$1, /* Lit_precision */[0]);\n        } else {\n          return invalid_format_without(str_ind$1 - 1 | 0, /* \".\" */46, \"precision\");\n        }\n      }\n      \n    }\n  };\n  var parse_literal = function (lit_start, _str_ind, end_ind) {\n    while(true) {\n      var str_ind = _str_ind;\n      if (str_ind === end_ind) {\n        return add_literal(lit_start, str_ind, /* End_of_format */0);\n      } else {\n        var match = Caml_string.get(str, str_ind);\n        if (match !== 37) {\n          if (match !== 64) {\n            _str_ind = str_ind + 1 | 0;\n            continue ;\n            \n          } else {\n            var match$1 = parse_after_at(str_ind + 1 | 0, end_ind);\n            return add_literal(lit_start, str_ind, match$1[0]);\n          }\n        } else {\n          var match$2 = parse_format(str_ind, end_ind);\n          return add_literal(lit_start, str_ind, match$2[0]);\n        }\n      }\n    };\n  };\n  var parse_format = function (pct_ind, end_ind) {\n    var pct_ind$1 = pct_ind;\n    var str_ind = pct_ind + 1 | 0;\n    var end_ind$1 = end_ind;\n    if (str_ind === end_ind$1) {\n      invalid_format_message(end_ind$1, \"unexpected end of format\");\n    }\n    var match = Caml_string.get(str, str_ind);\n    if (match !== 95) {\n      return parse_flags(pct_ind$1, str_ind, end_ind$1, /* false */0);\n    } else {\n      return parse_flags(pct_ind$1, str_ind + 1 | 0, end_ind$1, /* true */1);\n    }\n  };\n  var parse_after_at = function (str_ind, end_ind) {\n    if (str_ind === end_ind) {\n      return /* Fmt_EBB */[/* Char_literal */Block.__(12, [\n                  /* \"@\" */64,\n                  /* End_of_format */0\n                ])];\n    } else {\n      var c = Caml_string.get(str, str_ind);\n      var exit = 0;\n      if (c >= 65) {\n        if (c >= 94) {\n          var switcher = c - 123 | 0;\n          if (switcher > 2 || switcher < 0) {\n            exit = 1;\n          } else {\n            switch (switcher) {\n              case 0 : \n                  return parse_tag(/* true */1, str_ind + 1 | 0, end_ind);\n              case 1 : \n                  exit = 1;\n                  break;\n              case 2 : \n                  var beg_ind = str_ind + 1 | 0;\n                  var match = parse_literal(beg_ind, beg_ind, end_ind);\n                  return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                              /* Close_tag */1,\n                              match[0]\n                            ])];\n              \n            }\n          }\n        } else if (c >= 91) {\n          switch (c - 91 | 0) {\n            case 0 : \n                return parse_tag(/* false */0, str_ind + 1 | 0, end_ind);\n            case 1 : \n                exit = 1;\n                break;\n            case 2 : \n                var beg_ind$1 = str_ind + 1 | 0;\n                var match$1 = parse_literal(beg_ind$1, beg_ind$1, end_ind);\n                return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                            /* Close_box */0,\n                            match$1[0]\n                          ])];\n            \n          }\n        } else {\n          exit = 1;\n        }\n      } else if (c !== 10) {\n        if (c >= 32) {\n          switch (c - 32 | 0) {\n            case 0 : \n                var beg_ind$2 = str_ind + 1 | 0;\n                var match$2 = parse_literal(beg_ind$2, beg_ind$2, end_ind);\n                return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                            /* Break */Block.__(0, [\n                                \"@ \",\n                                1,\n                                0\n                              ]),\n                            match$2[0]\n                          ])];\n            case 5 : \n                if ((str_ind + 1 | 0) < end_ind && Caml_string.get(str, str_ind + 1 | 0) === /* \"%\" */37) {\n                  var beg_ind$3 = str_ind + 2 | 0;\n                  var match$3 = parse_literal(beg_ind$3, beg_ind$3, end_ind);\n                  return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                              /* Escaped_percent */6,\n                              match$3[0]\n                            ])];\n                } else {\n                  var match$4 = parse_literal(str_ind, str_ind, end_ind);\n                  return /* Fmt_EBB */[/* Char_literal */Block.__(12, [\n                              /* \"@\" */64,\n                              match$4[0]\n                            ])];\n                }\n            case 12 : \n                var beg_ind$4 = str_ind + 1 | 0;\n                var match$5 = parse_literal(beg_ind$4, beg_ind$4, end_ind);\n                return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                            /* Break */Block.__(0, [\n                                \"@,\",\n                                0,\n                                0\n                              ]),\n                            match$5[0]\n                          ])];\n            case 14 : \n                var beg_ind$5 = str_ind + 1 | 0;\n                var match$6 = parse_literal(beg_ind$5, beg_ind$5, end_ind);\n                return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                            /* Flush_newline */4,\n                            match$6[0]\n                          ])];\n            case 27 : \n                var str_ind$1 = str_ind + 1 | 0;\n                var end_ind$1 = end_ind;\n                var match$7;\n                try {\n                  if (str_ind$1 === end_ind$1 || Caml_string.get(str, str_ind$1) !== /* \"<\" */60) {\n                    throw Caml_builtin_exceptions.not_found;\n                  }\n                  var str_ind_1 = parse_spaces(str_ind$1 + 1 | 0, end_ind$1);\n                  var match$8 = Caml_string.get(str, str_ind_1);\n                  var exit$1 = 0;\n                  if (match$8 >= 48) {\n                    if (match$8 >= 58) {\n                      throw Caml_builtin_exceptions.not_found;\n                    } else {\n                      exit$1 = 1;\n                    }\n                  } else if (match$8 !== 45) {\n                    throw Caml_builtin_exceptions.not_found;\n                  } else {\n                    exit$1 = 1;\n                  }\n                  if (exit$1 === 1) {\n                    var match$9 = parse_integer(str_ind_1, end_ind$1);\n                    var width = match$9[1];\n                    var str_ind_3 = parse_spaces(match$9[0], end_ind$1);\n                    var match$10 = Caml_string.get(str, str_ind_3);\n                    var switcher$1 = match$10 - 45 | 0;\n                    if (switcher$1 > 12 || switcher$1 < 0) {\n                      if (switcher$1 !== 17) {\n                        throw Caml_builtin_exceptions.not_found;\n                      } else {\n                        var s = $$String.sub(str, str_ind$1 - 2 | 0, (str_ind_3 - str_ind$1 | 0) + 3 | 0);\n                        match$7 = /* tuple */[\n                          str_ind_3 + 1 | 0,\n                          /* Break */Block.__(0, [\n                              s,\n                              width,\n                              0\n                            ])\n                        ];\n                      }\n                    } else if (switcher$1 === 2 || switcher$1 === 1) {\n                      throw Caml_builtin_exceptions.not_found;\n                    } else {\n                      var match$11 = parse_integer(str_ind_3, end_ind$1);\n                      var str_ind_5 = parse_spaces(match$11[0], end_ind$1);\n                      if (Caml_string.get(str, str_ind_5) !== /* \">\" */62) {\n                        throw Caml_builtin_exceptions.not_found;\n                      }\n                      var s$1 = $$String.sub(str, str_ind$1 - 2 | 0, (str_ind_5 - str_ind$1 | 0) + 3 | 0);\n                      match$7 = /* tuple */[\n                        str_ind_5 + 1 | 0,\n                        /* Break */Block.__(0, [\n                            s$1,\n                            width,\n                            match$11[1]\n                          ])\n                      ];\n                    }\n                  }\n                  \n                }\n                catch (raw_exn){\n                  var exn = Js_exn.internalToOCamlException(raw_exn);\n                  if (exn === Caml_builtin_exceptions.not_found) {\n                    match$7 = /* tuple */[\n                      str_ind$1,\n                      /* Break */Block.__(0, [\n                          \"@;\",\n                          1,\n                          0\n                        ])\n                    ];\n                  } else if (exn[0] === Caml_builtin_exceptions.failure) {\n                    match$7 = /* tuple */[\n                      str_ind$1,\n                      /* Break */Block.__(0, [\n                          \"@;\",\n                          1,\n                          0\n                        ])\n                    ];\n                  } else {\n                    throw exn;\n                  }\n                }\n                var next_ind = match$7[0];\n                var match$12 = parse_literal(next_ind, next_ind, end_ind$1);\n                return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                            match$7[1],\n                            match$12[0]\n                          ])];\n            case 28 : \n                var str_ind$2 = str_ind + 1 | 0;\n                var end_ind$2 = end_ind;\n                var match$13;\n                try {\n                  var str_ind_1$1 = parse_spaces(str_ind$2, end_ind$2);\n                  var match$14 = Caml_string.get(str, str_ind_1$1);\n                  var exit$2 = 0;\n                  if (match$14 >= 48) {\n                    if (match$14 >= 58) {\n                      match$13 = /* None */0;\n                    } else {\n                      exit$2 = 1;\n                    }\n                  } else if (match$14 !== 45) {\n                    match$13 = /* None */0;\n                  } else {\n                    exit$2 = 1;\n                  }\n                  if (exit$2 === 1) {\n                    var match$15 = parse_integer(str_ind_1$1, end_ind$2);\n                    var str_ind_3$1 = parse_spaces(match$15[0], end_ind$2);\n                    if (Caml_string.get(str, str_ind_3$1) !== /* \">\" */62) {\n                      throw Caml_builtin_exceptions.not_found;\n                    }\n                    var s$2 = $$String.sub(str, str_ind$2 - 2 | 0, (str_ind_3$1 - str_ind$2 | 0) + 3 | 0);\n                    match$13 = /* Some */[/* tuple */[\n                        str_ind_3$1 + 1 | 0,\n                        /* Magic_size */Block.__(1, [\n                            s$2,\n                            match$15[1]\n                          ])\n                      ]];\n                  }\n                  \n                }\n                catch (raw_exn$1){\n                  var exn$1 = Js_exn.internalToOCamlException(raw_exn$1);\n                  if (exn$1 === Caml_builtin_exceptions.not_found || exn$1[0] === Caml_builtin_exceptions.failure) {\n                    match$13 = /* None */0;\n                  } else {\n                    throw exn$1;\n                  }\n                }\n                if (match$13) {\n                  var match$16 = match$13[0];\n                  var next_ind$1 = match$16[0];\n                  var match$17 = parse_literal(next_ind$1, next_ind$1, end_ind$2);\n                  return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                              match$16[1],\n                              match$17[0]\n                            ])];\n                } else {\n                  var match$18 = parse_literal(str_ind$2, str_ind$2, end_ind$2);\n                  return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                              /* Scan_indic */Block.__(2, [/* \"<\" */60]),\n                              match$18[0]\n                            ])];\n                }\n            case 1 : \n            case 2 : \n            case 3 : \n            case 4 : \n            case 6 : \n            case 7 : \n            case 8 : \n            case 9 : \n            case 10 : \n            case 11 : \n            case 13 : \n            case 15 : \n            case 16 : \n            case 17 : \n            case 18 : \n            case 19 : \n            case 20 : \n            case 21 : \n            case 22 : \n            case 23 : \n            case 24 : \n            case 25 : \n            case 26 : \n            case 29 : \n            case 30 : \n                exit = 1;\n                break;\n            case 31 : \n                var beg_ind$6 = str_ind + 1 | 0;\n                var match$19 = parse_literal(beg_ind$6, beg_ind$6, end_ind);\n                return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                            /* FFlush */2,\n                            match$19[0]\n                          ])];\n            case 32 : \n                var beg_ind$7 = str_ind + 1 | 0;\n                var match$20 = parse_literal(beg_ind$7, beg_ind$7, end_ind);\n                return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                            /* Escaped_at */5,\n                            match$20[0]\n                          ])];\n            \n          }\n        } else {\n          exit = 1;\n        }\n      } else {\n        var beg_ind$8 = str_ind + 1 | 0;\n        var match$21 = parse_literal(beg_ind$8, beg_ind$8, end_ind);\n        return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                    /* Force_newline */3,\n                    match$21[0]\n                  ])];\n      }\n      if (exit === 1) {\n        var beg_ind$9 = str_ind + 1 | 0;\n        var match$22 = parse_literal(beg_ind$9, beg_ind$9, end_ind);\n        return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                    /* Scan_indic */Block.__(2, [c]),\n                    match$22[0]\n                  ])];\n      }\n      \n    }\n  };\n  var add_literal = function (lit_start, str_ind, fmt) {\n    var size = str_ind - lit_start | 0;\n    if (size !== 0) {\n      if (size !== 1) {\n        return /* Fmt_EBB */[/* String_literal */Block.__(11, [\n                    $$String.sub(str, lit_start, size),\n                    fmt\n                  ])];\n      } else {\n        return /* Fmt_EBB */[/* Char_literal */Block.__(12, [\n                    Caml_string.get(str, lit_start),\n                    fmt\n                  ])];\n      }\n    } else {\n      return /* Fmt_EBB */[fmt];\n    }\n  };\n  var parse_spaces = function (_str_ind, end_ind) {\n    while(true) {\n      var str_ind = _str_ind;\n      if (str_ind === end_ind) {\n        invalid_format_message(end_ind, \"unexpected end of format\");\n      }\n      if (Caml_string.get(str, str_ind) === /* \" \" */32) {\n        _str_ind = str_ind + 1 | 0;\n        continue ;\n        \n      } else {\n        return str_ind;\n      }\n    };\n  };\n  var parse_integer = function (str_ind, end_ind) {\n    if (str_ind === end_ind) {\n      invalid_format_message(end_ind, \"unexpected end of format\");\n    }\n    var match = Caml_string.get(str, str_ind);\n    if (match >= 48) {\n      if (match >= 58) {\n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              [\n                \"camlinternalFormat.ml\",\n                2624,\n                11\n              ]\n            ];\n      } else {\n        return parse_positive(str_ind, end_ind, 0);\n      }\n    } else if (match !== 45) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"camlinternalFormat.ml\",\n              2624,\n              11\n            ]\n          ];\n    } else {\n      if ((str_ind + 1 | 0) === end_ind) {\n        invalid_format_message(end_ind, \"unexpected end of format\");\n      }\n      var c = Caml_string.get(str, str_ind + 1 | 0);\n      if (c > 57 || c < 48) {\n        return expected_character(str_ind + 1 | 0, \"digit\", c);\n      } else {\n        var match$1 = parse_positive(str_ind + 1 | 0, end_ind, 0);\n        return /* tuple */[\n                match$1[0],\n                -match$1[1] | 0\n              ];\n      }\n    }\n  };\n  var compute_float_conv = function (pct_ind, str_ind, _plus, _space, symb) {\n    while(true) {\n      var space = _space;\n      var plus = _plus;\n      if (plus !== 0) {\n        if (space !== 0) {\n          if (legacy_behavior$1) {\n            _space = /* false */0;\n            continue ;\n            \n          } else {\n            return incompatible_flag(pct_ind, str_ind, /* \" \" */32, \"'+'\");\n          }\n        } else {\n          var exit = 0;\n          if (symb >= 72) {\n            var switcher = symb - 101 | 0;\n            if (switcher > 2 || switcher < 0) {\n              exit = 1;\n            } else {\n              switch (switcher) {\n                case 0 : \n                    return /* Float_pe */4;\n                case 1 : \n                    return /* Float_pf */1;\n                case 2 : \n                    return /* Float_pg */10;\n                \n              }\n            }\n          } else if (symb >= 69) {\n            switch (symb - 69 | 0) {\n              case 0 : \n                  return /* Float_pE */7;\n              case 1 : \n                  exit = 1;\n                  break;\n              case 2 : \n                  return /* Float_pG */13;\n              \n            }\n          } else {\n            exit = 1;\n          }\n          if (exit === 1) {\n            if (legacy_behavior$1) {\n              _plus = /* false */0;\n              continue ;\n              \n            } else {\n              return incompatible_flag(pct_ind, str_ind, symb, \"'+'\");\n            }\n          }\n          \n        }\n      } else if (space !== 0) {\n        var exit$1 = 0;\n        if (symb >= 72) {\n          var switcher$1 = symb - 101 | 0;\n          if (switcher$1 > 2 || switcher$1 < 0) {\n            exit$1 = 1;\n          } else {\n            switch (switcher$1) {\n              case 0 : \n                  return /* Float_se */5;\n              case 1 : \n                  return /* Float_sf */2;\n              case 2 : \n                  return /* Float_sg */11;\n              \n            }\n          }\n        } else if (symb >= 69) {\n          switch (symb - 69 | 0) {\n            case 0 : \n                return /* Float_sE */8;\n            case 1 : \n                exit$1 = 1;\n                break;\n            case 2 : \n                return /* Float_sG */14;\n            \n          }\n        } else {\n          exit$1 = 1;\n        }\n        if (exit$1 === 1) {\n          if (legacy_behavior$1) {\n            _space = /* false */0;\n            continue ;\n            \n          } else {\n            return incompatible_flag(pct_ind, str_ind, symb, \"' '\");\n          }\n        }\n        \n      } else if (symb >= 72) {\n        var switcher$2 = symb - 101 | 0;\n        if (switcher$2 > 2 || switcher$2 < 0) {\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                [\n                  \"camlinternalFormat.ml\",\n                  2747,\n                  25\n                ]\n              ];\n        } else {\n          switch (switcher$2) {\n            case 0 : \n                return /* Float_e */3;\n            case 1 : \n                return /* Float_f */0;\n            case 2 : \n                return /* Float_g */9;\n            \n          }\n        }\n      } else if (symb >= 69) {\n        switch (symb - 69 | 0) {\n          case 0 : \n              return /* Float_E */6;\n          case 1 : \n              return /* Float_F */15;\n          case 2 : \n              return /* Float_G */12;\n          \n        }\n      } else {\n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              [\n                \"camlinternalFormat.ml\",\n                2747,\n                25\n              ]\n            ];\n      }\n    };\n  };\n  var search_subformat_end = function (_str_ind, end_ind, c) {\n    while(true) {\n      var str_ind = _str_ind;\n      if (str_ind === end_ind) {\n        Curry._3(failwith_message(/* Format */[\n                  /* String_literal */Block.__(11, [\n                      \"invalid format \",\n                      /* Caml_string */Block.__(3, [\n                          /* No_padding */0,\n                          /* String_literal */Block.__(11, [\n                              \": unclosed sub-format, expected \\\"\",\n                              /* Char_literal */Block.__(12, [\n                                  /* \"%\" */37,\n                                  /* Char */Block.__(0, [/* String_literal */Block.__(11, [\n                                          \"\\\" at character number \",\n                                          /* Int */Block.__(4, [\n                                              /* Int_d */0,\n                                              /* No_padding */0,\n                                              /* No_precision */0,\n                                              /* End_of_format */0\n                                            ])\n                                        ])])\n                                ])\n                            ])\n                        ])\n                    ]),\n                  \"invalid format %S: unclosed sub-format, expected \\\"%%%c\\\" at character number %d\"\n                ]), str, c, end_ind);\n      }\n      var match = Caml_string.get(str, str_ind);\n      if (match !== 37) {\n        _str_ind = str_ind + 1 | 0;\n        continue ;\n        \n      } else {\n        if ((str_ind + 1 | 0) === end_ind) {\n          invalid_format_message(end_ind, \"unexpected end of format\");\n        }\n        if (Caml_string.get(str, str_ind + 1 | 0) === c) {\n          return str_ind;\n        } else {\n          var match$1 = Caml_string.get(str, str_ind + 1 | 0);\n          var exit = 0;\n          if (match$1 >= 95) {\n            if (match$1 >= 123) {\n              if (match$1 >= 126) {\n                exit = 1;\n              } else {\n                switch (match$1 - 123 | 0) {\n                  case 0 : \n                      var sub_end = search_subformat_end(str_ind + 2 | 0, end_ind, /* \"}\" */125);\n                      _str_ind = sub_end + 2 | 0;\n                      continue ;\n                      case 1 : \n                      exit = 1;\n                      break;\n                  case 2 : \n                      return expected_character(str_ind + 1 | 0, \"character ')'\", /* \"}\" */125);\n                  \n                }\n              }\n            } else if (match$1 >= 96) {\n              exit = 1;\n            } else {\n              if ((str_ind + 2 | 0) === end_ind) {\n                invalid_format_message(end_ind, \"unexpected end of format\");\n              }\n              var match$2 = Caml_string.get(str, str_ind + 2 | 0);\n              if (match$2 !== 40) {\n                if (match$2 !== 123) {\n                  _str_ind = str_ind + 3 | 0;\n                  continue ;\n                  \n                } else {\n                  var sub_end$1 = search_subformat_end(str_ind + 3 | 0, end_ind, /* \"}\" */125);\n                  _str_ind = sub_end$1 + 2 | 0;\n                  continue ;\n                  \n                }\n              } else {\n                var sub_end$2 = search_subformat_end(str_ind + 3 | 0, end_ind, /* \")\" */41);\n                _str_ind = sub_end$2 + 2 | 0;\n                continue ;\n                \n              }\n            }\n          } else if (match$1 !== 40) {\n            if (match$1 !== 41) {\n              exit = 1;\n            } else {\n              return expected_character(str_ind + 1 | 0, \"character '}'\", /* \")\" */41);\n            }\n          } else {\n            var sub_end$3 = search_subformat_end(str_ind + 2 | 0, end_ind, /* \")\" */41);\n            _str_ind = sub_end$3 + 2 | 0;\n            continue ;\n            \n          }\n          if (exit === 1) {\n            _str_ind = str_ind + 2 | 0;\n            continue ;\n            \n          }\n          \n        }\n      }\n    };\n  };\n  var parse_conversion = function (pct_ind, str_ind, end_ind, plus, sharp, space, ign, pad, prec, padprec, symb) {\n    var plus_used = /* false */0;\n    var sharp_used = /* false */0;\n    var space_used = /* false */0;\n    var ign_used = [/* false */0];\n    var pad_used = /* false */0;\n    var prec_used = [/* false */0];\n    var check_no_0 = function (symb, pad) {\n      if (typeof pad === \"number\") {\n        return pad;\n      } else if (pad.tag) {\n        if (pad[0] >= 2) {\n          if (legacy_behavior$1) {\n            return /* Arg_padding */Block.__(1, [/* Right */1]);\n          } else {\n            return incompatible_flag(pct_ind, str_ind, symb, \"0\");\n          }\n        } else {\n          return pad;\n        }\n      } else if (pad[0] >= 2) {\n        if (legacy_behavior$1) {\n          return /* Lit_padding */Block.__(0, [\n                    /* Right */1,\n                    pad[1]\n                  ]);\n        } else {\n          return incompatible_flag(pct_ind, str_ind, symb, \"0\");\n        }\n      } else {\n        return pad;\n      }\n    };\n    var opt_of_pad = function (c, pad) {\n      if (typeof pad === \"number\") {\n        return /* None */0;\n      } else if (pad.tag) {\n        return incompatible_flag(pct_ind, str_ind, c, \"'*'\");\n      } else {\n        switch (pad[0]) {\n          case 0 : \n              if (legacy_behavior$1) {\n                return /* Some */[pad[1]];\n              } else {\n                return incompatible_flag(pct_ind, str_ind, c, \"'-'\");\n              }\n          case 1 : \n              return /* Some */[pad[1]];\n          case 2 : \n              if (legacy_behavior$1) {\n                return /* Some */[pad[1]];\n              } else {\n                return incompatible_flag(pct_ind, str_ind, c, \"'0'\");\n              }\n          \n        }\n      }\n    };\n    var get_prec_opt = function () {\n      prec_used[0] = /* true */1;\n      if (typeof prec === \"number\") {\n        if (prec !== 0) {\n          return incompatible_flag(pct_ind, str_ind, /* \"_\" */95, \"'*'\");\n        } else {\n          return /* None */0;\n        }\n      } else {\n        return /* Some */[prec[0]];\n      }\n    };\n    var fmt_result;\n    var exit = 0;\n    var exit$1 = 0;\n    var exit$2 = 0;\n    if (symb >= 124) {\n      exit$1 = 6;\n    } else {\n      switch (symb) {\n        case 33 : \n            var match = parse_literal(str_ind, str_ind, end_ind);\n            fmt_result = /* Fmt_EBB */[/* Flush */Block.__(10, [match[0]])];\n            break;\n        case 40 : \n            var sub_end = search_subformat_end(str_ind, end_ind, /* \")\" */41);\n            var beg_ind = sub_end + 2 | 0;\n            var match$1 = parse_literal(beg_ind, beg_ind, end_ind);\n            var fmt_rest = match$1[0];\n            var match$2 = parse_literal(str_ind, str_ind, sub_end);\n            var sub_fmtty = fmtty_of_fmt(match$2[0]);\n            if (ign_used[0] = /* true */1, ign) {\n              pad_used = /* true */1;\n              var ignored_000 = opt_of_pad(/* \"_\" */95, pad);\n              var ignored = /* Ignored_format_subst */Block.__(8, [\n                  ignored_000,\n                  sub_fmtty\n                ]);\n              fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    ignored,\n                    fmt_rest\n                  ])];\n            } else {\n              pad_used = /* true */1;\n              fmt_result = /* Fmt_EBB */[/* Format_subst */Block.__(14, [\n                    opt_of_pad(/* \"(\" */40, pad),\n                    sub_fmtty,\n                    fmt_rest\n                  ])];\n            }\n            break;\n        case 44 : \n            fmt_result = parse_literal(str_ind, str_ind, end_ind);\n            break;\n        case 37 : \n        case 64 : \n            exit$1 = 4;\n            break;\n        case 67 : \n            var match$3 = parse_literal(str_ind, str_ind, end_ind);\n            var fmt_rest$1 = match$3[0];\n            fmt_result = (ign_used[0] = /* true */1, ign) ? /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    /* Ignored_caml_char */1,\n                    fmt_rest$1\n                  ])] : /* Fmt_EBB */[/* Caml_char */Block.__(1, [fmt_rest$1])];\n            break;\n        case 78 : \n            var match$4 = parse_literal(str_ind, str_ind, end_ind);\n            var fmt_rest$2 = match$4[0];\n            if (ign_used[0] = /* true */1, ign) {\n              var ignored$1 = /* Ignored_scan_get_counter */Block.__(10, [/* Token_counter */2]);\n              fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    ignored$1,\n                    fmt_rest$2\n                  ])];\n            } else {\n              fmt_result = /* Fmt_EBB */[/* Scan_get_counter */Block.__(21, [\n                    /* Token_counter */2,\n                    fmt_rest$2\n                  ])];\n            }\n            break;\n        case 83 : \n            pad_used = /* true */1;\n            var pad$1 = check_no_0(symb, padprec);\n            var match$5 = parse_literal(str_ind, str_ind, end_ind);\n            var fmt_rest$3 = match$5[0];\n            if (ign_used[0] = /* true */1, ign) {\n              pad_used = /* true */1;\n              var ignored$2 = /* Ignored_caml_string */Block.__(1, [opt_of_pad(/* \"_\" */95, padprec)]);\n              fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    ignored$2,\n                    fmt_rest$3\n                  ])];\n            } else {\n              var match$6 = make_padding_fmt_ebb(pad$1, fmt_rest$3);\n              fmt_result = /* Fmt_EBB */[/* Caml_string */Block.__(3, [\n                    match$6[0],\n                    match$6[1]\n                  ])];\n            }\n            break;\n        case 91 : \n            var match$7 = parse_char_set(str_ind, end_ind);\n            var char_set = match$7[1];\n            var next_ind = match$7[0];\n            var match$8 = parse_literal(next_ind, next_ind, end_ind);\n            var fmt_rest$4 = match$8[0];\n            if (ign_used[0] = /* true */1, ign) {\n              pad_used = /* true */1;\n              var ignored_000$1 = opt_of_pad(/* \"_\" */95, pad);\n              var ignored$3 = /* Ignored_scan_char_set */Block.__(9, [\n                  ignored_000$1,\n                  char_set\n                ]);\n              fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    ignored$3,\n                    fmt_rest$4\n                  ])];\n            } else {\n              pad_used = /* true */1;\n              fmt_result = /* Fmt_EBB */[/* Scan_char_set */Block.__(20, [\n                    opt_of_pad(/* \"[\" */91, pad),\n                    char_set,\n                    fmt_rest$4\n                  ])];\n            }\n            break;\n        case 32 : \n        case 35 : \n        case 43 : \n        case 45 : \n        case 95 : \n            exit$1 = 5;\n            break;\n        case 97 : \n            var match$9 = parse_literal(str_ind, str_ind, end_ind);\n            fmt_result = /* Fmt_EBB */[/* Alpha */Block.__(15, [match$9[0]])];\n            break;\n        case 66 : \n        case 98 : \n            exit$1 = 3;\n            break;\n        case 99 : \n            var char_format = function (fmt_rest) {\n              if (ign_used[0] = /* true */1, ign) {\n                return /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                            /* Ignored_char */0,\n                            fmt_rest\n                          ])];\n              } else {\n                return /* Fmt_EBB */[/* Char */Block.__(0, [fmt_rest])];\n              }\n            };\n            var scan_format = function (fmt_rest) {\n              if (ign_used[0] = /* true */1, ign) {\n                return /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                            /* Ignored_scan_next_char */4,\n                            fmt_rest\n                          ])];\n              } else {\n                return /* Fmt_EBB */[/* Scan_next_char */Block.__(22, [fmt_rest])];\n              }\n            };\n            var match$10 = parse_literal(str_ind, str_ind, end_ind);\n            var fmt_rest$5 = match$10[0];\n            pad_used = /* true */1;\n            var match$11 = opt_of_pad(/* \"c\" */99, pad);\n            fmt_result = match$11 ? (\n                match$11[0] !== 0 ? (\n                    legacy_behavior$1 ? char_format(fmt_rest$5) : invalid_format_message(str_ind, \"non-zero widths are unsupported for %c conversions\")\n                  ) : scan_format(fmt_rest$5)\n              ) : char_format(fmt_rest$5);\n            break;\n        case 69 : \n        case 70 : \n        case 71 : \n        case 101 : \n        case 102 : \n        case 103 : \n            exit$1 = 2;\n            break;\n        case 76 : \n        case 108 : \n        case 110 : \n            exit$2 = 8;\n            break;\n        case 114 : \n            var match$12 = parse_literal(str_ind, str_ind, end_ind);\n            var fmt_rest$6 = match$12[0];\n            fmt_result = (ign_used[0] = /* true */1, ign) ? /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    /* Ignored_reader */3,\n                    fmt_rest$6\n                  ])] : /* Fmt_EBB */[/* Reader */Block.__(19, [fmt_rest$6])];\n            break;\n        case 115 : \n            pad_used = /* true */1;\n            var pad$2 = check_no_0(symb, padprec);\n            var match$13 = parse_literal(str_ind, str_ind, end_ind);\n            var fmt_rest$7 = match$13[0];\n            if (ign_used[0] = /* true */1, ign) {\n              pad_used = /* true */1;\n              var ignored$4 = /* Ignored_string */Block.__(0, [opt_of_pad(/* \"_\" */95, padprec)]);\n              fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    ignored$4,\n                    fmt_rest$7\n                  ])];\n            } else {\n              var match$14 = make_padding_fmt_ebb(pad$2, fmt_rest$7);\n              fmt_result = /* Fmt_EBB */[/* String */Block.__(2, [\n                    match$14[0],\n                    match$14[1]\n                  ])];\n            }\n            break;\n        case 116 : \n            var match$15 = parse_literal(str_ind, str_ind, end_ind);\n            fmt_result = /* Fmt_EBB */[/* Theta */Block.__(16, [match$15[0]])];\n            break;\n        case 88 : \n        case 100 : \n        case 105 : \n        case 111 : \n        case 117 : \n        case 120 : \n            exit$2 = 7;\n            break;\n        case 0 : \n        case 1 : \n        case 2 : \n        case 3 : \n        case 4 : \n        case 5 : \n        case 6 : \n        case 7 : \n        case 8 : \n        case 9 : \n        case 10 : \n        case 11 : \n        case 12 : \n        case 13 : \n        case 14 : \n        case 15 : \n        case 16 : \n        case 17 : \n        case 18 : \n        case 19 : \n        case 20 : \n        case 21 : \n        case 22 : \n        case 23 : \n        case 24 : \n        case 25 : \n        case 26 : \n        case 27 : \n        case 28 : \n        case 29 : \n        case 30 : \n        case 31 : \n        case 34 : \n        case 36 : \n        case 38 : \n        case 39 : \n        case 41 : \n        case 42 : \n        case 46 : \n        case 47 : \n        case 48 : \n        case 49 : \n        case 50 : \n        case 51 : \n        case 52 : \n        case 53 : \n        case 54 : \n        case 55 : \n        case 56 : \n        case 57 : \n        case 58 : \n        case 59 : \n        case 60 : \n        case 61 : \n        case 62 : \n        case 63 : \n        case 65 : \n        case 68 : \n        case 72 : \n        case 73 : \n        case 74 : \n        case 75 : \n        case 77 : \n        case 79 : \n        case 80 : \n        case 81 : \n        case 82 : \n        case 84 : \n        case 85 : \n        case 86 : \n        case 87 : \n        case 89 : \n        case 90 : \n        case 92 : \n        case 93 : \n        case 94 : \n        case 96 : \n        case 104 : \n        case 106 : \n        case 107 : \n        case 109 : \n        case 112 : \n        case 113 : \n        case 118 : \n        case 119 : \n        case 121 : \n        case 122 : \n            exit$1 = 6;\n            break;\n        case 123 : \n            var sub_end$1 = search_subformat_end(str_ind, end_ind, /* \"}\" */125);\n            var match$16 = parse_literal(str_ind, str_ind, sub_end$1);\n            var beg_ind$1 = sub_end$1 + 2 | 0;\n            var match$17 = parse_literal(beg_ind$1, beg_ind$1, end_ind);\n            var fmt_rest$8 = match$17[0];\n            var sub_fmtty$1 = fmtty_of_fmt(match$16[0]);\n            if (ign_used[0] = /* true */1, ign) {\n              pad_used = /* true */1;\n              var ignored_000$2 = opt_of_pad(/* \"_\" */95, pad);\n              var ignored$5 = /* Ignored_format_arg */Block.__(7, [\n                  ignored_000$2,\n                  sub_fmtty$1\n                ]);\n              fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    ignored$5,\n                    fmt_rest$8\n                  ])];\n            } else {\n              pad_used = /* true */1;\n              fmt_result = /* Fmt_EBB */[/* Format_arg */Block.__(13, [\n                    opt_of_pad(/* \"{\" */123, pad),\n                    sub_fmtty$1,\n                    fmt_rest$8\n                  ])];\n            }\n            break;\n        \n      }\n    }\n    switch (exit$2) {\n      case 7 : \n          plus_used = /* true */1;\n          sharp_used = /* true */1;\n          space_used = /* true */1;\n          var iconv = compute_int_conv(pct_ind, str_ind, plus, sharp, space, symb);\n          var match$18 = parse_literal(str_ind, str_ind, end_ind);\n          var fmt_rest$9 = match$18[0];\n          if (ign_used[0] = /* true */1, ign) {\n            pad_used = /* true */1;\n            var ignored_001 = opt_of_pad(/* \"_\" */95, pad);\n            var ignored$6 = /* Ignored_int */Block.__(2, [\n                iconv,\n                ignored_001\n              ]);\n            fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                  ignored$6,\n                  fmt_rest$9\n                ])];\n          } else {\n            pad_used = /* true */1;\n            prec_used[0] = /* true */1;\n            var pad$3;\n            var exit$3 = 0;\n            if (typeof prec === \"number\" && prec === 0) {\n              pad$3 = pad;\n            } else {\n              exit$3 = 9;\n            }\n            if (exit$3 === 9) {\n              pad$3 = typeof pad === \"number\" ? /* No_padding */0 : (\n                  pad.tag ? (\n                      pad[0] >= 2 ? (\n                          legacy_behavior$1 ? /* Arg_padding */Block.__(1, [/* Right */1]) : incompatible_flag(pct_ind, str_ind, /* \"0\" */48, \"precision\")\n                        ) : pad\n                    ) : (\n                      pad[0] >= 2 ? (\n                          legacy_behavior$1 ? /* Lit_padding */Block.__(0, [\n                                /* Right */1,\n                                pad[1]\n                              ]) : incompatible_flag(pct_ind, str_ind, /* \"0\" */48, \"precision\")\n                        ) : pad\n                    )\n                );\n            }\n            var match$19 = make_padprec_fmt_ebb(pad$3, (prec_used[0] = /* true */1, prec), fmt_rest$9);\n            fmt_result = /* Fmt_EBB */[/* Int */Block.__(4, [\n                  iconv,\n                  match$19[0],\n                  match$19[1],\n                  match$19[2]\n                ])];\n          }\n          break;\n      case 8 : \n          if (str_ind === end_ind || !is_int_base(Caml_string.get(str, str_ind))) {\n            var match$20 = parse_literal(str_ind, str_ind, end_ind);\n            var fmt_rest$10 = match$20[0];\n            var counter = counter_of_char(symb);\n            if (ign_used[0] = /* true */1, ign) {\n              var ignored$7 = /* Ignored_scan_get_counter */Block.__(10, [counter]);\n              fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    ignored$7,\n                    fmt_rest$10\n                  ])];\n            } else {\n              fmt_result = /* Fmt_EBB */[/* Scan_get_counter */Block.__(21, [\n                    counter,\n                    fmt_rest$10\n                  ])];\n            }\n          } else {\n            exit$1 = 6;\n          }\n          break;\n      \n    }\n    switch (exit$1) {\n      case 2 : \n          plus_used = /* true */1;\n          space_used = /* true */1;\n          var fconv = compute_float_conv(pct_ind, str_ind, plus, space, symb);\n          var match$21 = parse_literal(str_ind, str_ind, end_ind);\n          var fmt_rest$11 = match$21[0];\n          if (ign_used[0] = /* true */1, ign) {\n            pad_used = /* true */1;\n            var ignored_000$3 = opt_of_pad(/* \"_\" */95, pad);\n            var ignored_001$1 = get_prec_opt(/* () */0);\n            var ignored$8 = /* Ignored_float */Block.__(6, [\n                ignored_000$3,\n                ignored_001$1\n              ]);\n            fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                  ignored$8,\n                  fmt_rest$11\n                ])];\n          } else {\n            pad_used = /* true */1;\n            var match$22 = make_padprec_fmt_ebb(pad, (prec_used[0] = /* true */1, prec), fmt_rest$11);\n            fmt_result = /* Fmt_EBB */[/* Float */Block.__(8, [\n                  fconv,\n                  match$22[0],\n                  match$22[1],\n                  match$22[2]\n                ])];\n          }\n          break;\n      case 3 : \n          var match$23 = parse_literal(str_ind, str_ind, end_ind);\n          var fmt_rest$12 = match$23[0];\n          fmt_result = (ign_used[0] = /* true */1, ign) ? /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                  /* Ignored_bool */2,\n                  fmt_rest$12\n                ])] : /* Fmt_EBB */[/* Bool */Block.__(9, [fmt_rest$12])];\n          break;\n      case 4 : \n          var match$24 = parse_literal(str_ind, str_ind, end_ind);\n          fmt_result = /* Fmt_EBB */[/* Char_literal */Block.__(12, [\n                symb,\n                match$24[0]\n              ])];\n          break;\n      case 5 : \n          fmt_result = Curry._3(failwith_message(/* Format */[\n                    /* String_literal */Block.__(11, [\n                        \"invalid format \",\n                        /* Caml_string */Block.__(3, [\n                            /* No_padding */0,\n                            /* String_literal */Block.__(11, [\n                                \": at character number \",\n                                /* Int */Block.__(4, [\n                                    /* Int_d */0,\n                                    /* No_padding */0,\n                                    /* No_precision */0,\n                                    /* String_literal */Block.__(11, [\n                                        \", flag \",\n                                        /* Caml_char */Block.__(1, [/* String_literal */Block.__(11, [\n                                                \" is only allowed after the '\",\n                                                /* Char_literal */Block.__(12, [\n                                                    /* \"%\" */37,\n                                                    /* String_literal */Block.__(11, [\n                                                        \"', before padding and precision\",\n                                                        /* End_of_format */0\n                                                      ])\n                                                  ])\n                                              ])])\n                                      ])\n                                  ])\n                              ])\n                          ])\n                      ]),\n                    \"invalid format %S: at character number %d, flag %C is only allowed after the '%%', before padding and precision\"\n                  ]), str, pct_ind, symb);\n          break;\n      case 6 : \n          if (symb >= 108) {\n            if (symb >= 111) {\n              exit = 1;\n            } else {\n              switch (symb - 108 | 0) {\n                case 0 : \n                    plus_used = /* true */1;\n                    sharp_used = /* true */1;\n                    space_used = /* true */1;\n                    var iconv$1 = compute_int_conv(pct_ind, str_ind + 1 | 0, plus, sharp, space, Caml_string.get(str, str_ind));\n                    var beg_ind$2 = str_ind + 1 | 0;\n                    var match$25 = parse_literal(beg_ind$2, beg_ind$2, end_ind);\n                    var fmt_rest$13 = match$25[0];\n                    if (ign_used[0] = /* true */1, ign) {\n                      pad_used = /* true */1;\n                      var ignored_001$2 = opt_of_pad(/* \"_\" */95, pad);\n                      var ignored$9 = /* Ignored_int32 */Block.__(3, [\n                          iconv$1,\n                          ignored_001$2\n                        ]);\n                      fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                            ignored$9,\n                            fmt_rest$13\n                          ])];\n                    } else {\n                      pad_used = /* true */1;\n                      var match$26 = make_padprec_fmt_ebb(pad, (prec_used[0] = /* true */1, prec), fmt_rest$13);\n                      fmt_result = /* Fmt_EBB */[/* Int32 */Block.__(5, [\n                            iconv$1,\n                            match$26[0],\n                            match$26[1],\n                            match$26[2]\n                          ])];\n                    }\n                    break;\n                case 1 : \n                    exit = 1;\n                    break;\n                case 2 : \n                    plus_used = /* true */1;\n                    sharp_used = /* true */1;\n                    space_used = /* true */1;\n                    var iconv$2 = compute_int_conv(pct_ind, str_ind + 1 | 0, plus, sharp, space, Caml_string.get(str, str_ind));\n                    var beg_ind$3 = str_ind + 1 | 0;\n                    var match$27 = parse_literal(beg_ind$3, beg_ind$3, end_ind);\n                    var fmt_rest$14 = match$27[0];\n                    if (ign_used[0] = /* true */1, ign) {\n                      pad_used = /* true */1;\n                      var ignored_001$3 = opt_of_pad(/* \"_\" */95, pad);\n                      var ignored$10 = /* Ignored_nativeint */Block.__(4, [\n                          iconv$2,\n                          ignored_001$3\n                        ]);\n                      fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                            ignored$10,\n                            fmt_rest$14\n                          ])];\n                    } else {\n                      pad_used = /* true */1;\n                      var match$28 = make_padprec_fmt_ebb(pad, (prec_used[0] = /* true */1, prec), fmt_rest$14);\n                      fmt_result = /* Fmt_EBB */[/* Nativeint */Block.__(6, [\n                            iconv$2,\n                            match$28[0],\n                            match$28[1],\n                            match$28[2]\n                          ])];\n                    }\n                    break;\n                \n              }\n            }\n          } else if (symb !== 76) {\n            exit = 1;\n          } else {\n            plus_used = /* true */1;\n            sharp_used = /* true */1;\n            space_used = /* true */1;\n            var iconv$3 = compute_int_conv(pct_ind, str_ind + 1 | 0, plus, sharp, space, Caml_string.get(str, str_ind));\n            var beg_ind$4 = str_ind + 1 | 0;\n            var match$29 = parse_literal(beg_ind$4, beg_ind$4, end_ind);\n            var fmt_rest$15 = match$29[0];\n            if (ign_used[0] = /* true */1, ign) {\n              pad_used = /* true */1;\n              var ignored_001$4 = opt_of_pad(/* \"_\" */95, pad);\n              var ignored$11 = /* Ignored_int64 */Block.__(5, [\n                  iconv$3,\n                  ignored_001$4\n                ]);\n              fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    ignored$11,\n                    fmt_rest$15\n                  ])];\n            } else {\n              pad_used = /* true */1;\n              var match$30 = make_padprec_fmt_ebb(pad, (prec_used[0] = /* true */1, prec), fmt_rest$15);\n              fmt_result = /* Fmt_EBB */[/* Int64 */Block.__(7, [\n                    iconv$3,\n                    match$30[0],\n                    match$30[1],\n                    match$30[2]\n                  ])];\n            }\n          }\n          break;\n      \n    }\n    if (exit === 1) {\n      fmt_result = Curry._3(failwith_message(/* Format */[\n                /* String_literal */Block.__(11, [\n                    \"invalid format \",\n                    /* Caml_string */Block.__(3, [\n                        /* No_padding */0,\n                        /* String_literal */Block.__(11, [\n                            \": at character number \",\n                            /* Int */Block.__(4, [\n                                /* Int_d */0,\n                                /* No_padding */0,\n                                /* No_precision */0,\n                                /* String_literal */Block.__(11, [\n                                    \", invalid conversion \\\"\",\n                                    /* Char_literal */Block.__(12, [\n                                        /* \"%\" */37,\n                                        /* Char */Block.__(0, [/* Char_literal */Block.__(12, [\n                                                /* \"\\\"\" */34,\n                                                /* End_of_format */0\n                                              ])])\n                                      ])\n                                  ])\n                              ])\n                          ])\n                      ])\n                  ]),\n                \"invalid format %S: at character number %d, invalid conversion \\\"%%%c\\\"\"\n              ]), str, str_ind - 1 | 0, symb);\n    }\n    if (!legacy_behavior$1) {\n      if (!plus_used && plus) {\n        incompatible_flag(pct_ind, str_ind, symb, \"'+'\");\n      }\n      if (!sharp_used && sharp) {\n        incompatible_flag(pct_ind, str_ind, symb, \"'#'\");\n      }\n      if (!space_used && space) {\n        incompatible_flag(pct_ind, str_ind, symb, \"' '\");\n      }\n      if (!pad_used && Caml_obj.caml_notequal(/* Padding_EBB */[pad], /* Padding_EBB */[/* No_padding */0])) {\n        incompatible_flag(pct_ind, str_ind, symb, \"`padding'\");\n      }\n      if (!prec_used[0] && Caml_obj.caml_notequal(/* Precision_EBB */[prec], /* Precision_EBB */[/* No_precision */0])) {\n        incompatible_flag(pct_ind, str_ind, ign ? /* \"_\" */95 : symb, \"`precision'\");\n      }\n      if (ign && plus) {\n        incompatible_flag(pct_ind, str_ind, /* \"_\" */95, \"'+'\");\n      }\n      \n    }\n    if (!ign_used[0] && ign) {\n      var exit$4 = 0;\n      if (symb >= 38) {\n        if (symb !== 44) {\n          if (symb !== 64) {\n            exit$4 = 1;\n          } else if (!legacy_behavior$1) {\n            exit$4 = 1;\n          }\n          \n        } else if (!legacy_behavior$1) {\n          exit$4 = 1;\n        }\n        \n      } else if (symb !== 33) {\n        if (symb >= 37) {\n          if (!legacy_behavior$1) {\n            exit$4 = 1;\n          }\n          \n        } else {\n          exit$4 = 1;\n        }\n      } else if (!legacy_behavior$1) {\n        exit$4 = 1;\n      }\n      if (exit$4 === 1) {\n        incompatible_flag(pct_ind, str_ind, symb, \"'_'\");\n      }\n      \n    }\n    return fmt_result;\n  };\n  var parse_flags = function (pct_ind, str_ind, end_ind, ign) {\n    var zero = [/* false */0];\n    var minus = [/* false */0];\n    var plus = [/* false */0];\n    var space = [/* false */0];\n    var sharp = [/* false */0];\n    var set_flag = function (str_ind, flag) {\n      if (flag[0] && !legacy_behavior$1) {\n        Curry._3(failwith_message(/* Format */[\n                  /* String_literal */Block.__(11, [\n                      \"invalid format \",\n                      /* Caml_string */Block.__(3, [\n                          /* No_padding */0,\n                          /* String_literal */Block.__(11, [\n                              \": at character number \",\n                              /* Int */Block.__(4, [\n                                  /* Int_d */0,\n                                  /* No_padding */0,\n                                  /* No_precision */0,\n                                  /* String_literal */Block.__(11, [\n                                      \", duplicate flag \",\n                                      /* Caml_char */Block.__(1, [/* End_of_format */0])\n                                    ])\n                                ])\n                            ])\n                        ])\n                    ]),\n                  \"invalid format %S: at character number %d, duplicate flag %C\"\n                ]), str, str_ind, Caml_string.get(str, str_ind));\n      }\n      flag[0] = /* true */1;\n      return /* () */0;\n    };\n    var _str_ind = str_ind;\n    while(true) {\n      var str_ind$1 = _str_ind;\n      if (str_ind$1 === end_ind) {\n        invalid_format_message(end_ind, \"unexpected end of format\");\n      }\n      var match = Caml_string.get(str, str_ind$1);\n      var exit = 0;\n      var switcher = match - 32 | 0;\n      if (switcher > 16 || switcher < 0) {\n        exit = 1;\n      } else {\n        switch (switcher) {\n          case 0 : \n              set_flag(str_ind$1, space);\n              _str_ind = str_ind$1 + 1 | 0;\n              continue ;\n              case 3 : \n              set_flag(str_ind$1, sharp);\n              _str_ind = str_ind$1 + 1 | 0;\n              continue ;\n              case 11 : \n              set_flag(str_ind$1, plus);\n              _str_ind = str_ind$1 + 1 | 0;\n              continue ;\n              case 13 : \n              set_flag(str_ind$1, minus);\n              _str_ind = str_ind$1 + 1 | 0;\n              continue ;\n              case 1 : \n          case 2 : \n          case 4 : \n          case 5 : \n          case 6 : \n          case 7 : \n          case 8 : \n          case 9 : \n          case 10 : \n          case 12 : \n          case 14 : \n          case 15 : \n              exit = 1;\n              break;\n          case 16 : \n              set_flag(str_ind$1, zero);\n              _str_ind = str_ind$1 + 1 | 0;\n              continue ;\n              \n        }\n      }\n      if (exit === 1) {\n        var pct_ind$1 = pct_ind;\n        var str_ind$2 = str_ind$1;\n        var end_ind$1 = end_ind;\n        var zero$1 = zero[0];\n        var minus$1 = minus[0];\n        var plus$1 = plus[0];\n        var sharp$1 = sharp[0];\n        var space$1 = space[0];\n        var ign$1 = ign;\n        if (str_ind$2 === end_ind$1) {\n          invalid_format_message(end_ind$1, \"unexpected end of format\");\n        }\n        var padty = zero$1 !== 0 ? (\n            minus$1 !== 0 ? (\n                legacy_behavior$1 ? /* Left */0 : incompatible_flag(pct_ind$1, str_ind$2, /* \"-\" */45, \"0\")\n              ) : /* Zeros */2\n          ) : (\n            minus$1 !== 0 ? /* Left */0 : /* Right */1\n          );\n        var match$1 = Caml_string.get(str, str_ind$2);\n        var exit$1 = 0;\n        if (match$1 >= 48) {\n          if (match$1 >= 58) {\n            exit$1 = 1;\n          } else {\n            var match$2 = parse_positive(str_ind$2, end_ind$1, 0);\n            return parse_after_padding(pct_ind$1, match$2[0], end_ind$1, minus$1, plus$1, sharp$1, space$1, ign$1, /* Lit_padding */Block.__(0, [\n                          padty,\n                          match$2[1]\n                        ]));\n          }\n        } else if (match$1 !== 42) {\n          exit$1 = 1;\n        } else {\n          return parse_after_padding(pct_ind$1, str_ind$2 + 1 | 0, end_ind$1, minus$1, plus$1, sharp$1, space$1, ign$1, /* Arg_padding */Block.__(1, [padty]));\n        }\n        if (exit$1 === 1) {\n          switch (padty) {\n            case 0 : \n                if (!legacy_behavior$1) {\n                  invalid_format_without(str_ind$2 - 1 | 0, /* \"-\" */45, \"padding\");\n                }\n                return parse_after_padding(pct_ind$1, str_ind$2, end_ind$1, minus$1, plus$1, sharp$1, space$1, ign$1, /* No_padding */0);\n            case 1 : \n                return parse_after_padding(pct_ind$1, str_ind$2, end_ind$1, minus$1, plus$1, sharp$1, space$1, ign$1, /* No_padding */0);\n            case 2 : \n                return parse_after_padding(pct_ind$1, str_ind$2, end_ind$1, minus$1, plus$1, sharp$1, space$1, ign$1, /* Lit_padding */Block.__(0, [\n                              /* Right */1,\n                              0\n                            ]));\n            \n          }\n        }\n        \n      }\n      \n    };\n  };\n  var is_int_base = function (symb) {\n    var switcher = symb - 88 | 0;\n    if (switcher > 32 || switcher < 0) {\n      return /* false */0;\n    } else {\n      switch (switcher) {\n        case 1 : \n        case 2 : \n        case 3 : \n        case 4 : \n        case 5 : \n        case 6 : \n        case 7 : \n        case 8 : \n        case 9 : \n        case 10 : \n        case 11 : \n        case 13 : \n        case 14 : \n        case 15 : \n        case 16 : \n        case 18 : \n        case 19 : \n        case 20 : \n        case 21 : \n        case 22 : \n        case 24 : \n        case 25 : \n        case 26 : \n        case 27 : \n        case 28 : \n        case 30 : \n        case 31 : \n            return /* false */0;\n        case 0 : \n        case 12 : \n        case 17 : \n        case 23 : \n        case 29 : \n        case 32 : \n            return /* true */1;\n        \n      }\n    }\n  };\n  var counter_of_char = function (symb) {\n    var exit = 0;\n    if (symb >= 108) {\n      if (symb >= 111) {\n        exit = 1;\n      } else {\n        switch (symb - 108 | 0) {\n          case 0 : \n              return /* Line_counter */0;\n          case 1 : \n              exit = 1;\n              break;\n          case 2 : \n              return /* Char_counter */1;\n          \n        }\n      }\n    } else if (symb !== 76) {\n      exit = 1;\n    } else {\n      return /* Token_counter */2;\n    }\n    if (exit === 1) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"camlinternalFormat.ml\",\n              2686,\n              34\n            ]\n          ];\n    }\n    \n  };\n  var parse_char_set = function (str_ind, end_ind) {\n    if (str_ind === end_ind) {\n      invalid_format_message(end_ind, \"unexpected end of format\");\n    }\n    var char_set = Bytes.make(32, /* \"\\000\" */0);\n    var add_range = function (c, c$prime) {\n      for(var i = c; i <= c$prime; ++i){\n        add_in_char_set(char_set, Pervasives.char_of_int(i));\n      }\n      return /* () */0;\n    };\n    var fail_single_percent = function (str_ind) {\n      return Curry._2(failwith_message(/* Format */[\n                      /* String_literal */Block.__(11, [\n                          \"invalid format \",\n                          /* Caml_string */Block.__(3, [\n                              /* No_padding */0,\n                              /* String_literal */Block.__(11, [\n                                  \": '\",\n                                  /* Char_literal */Block.__(12, [\n                                      /* \"%\" */37,\n                                      /* String_literal */Block.__(11, [\n                                          \"' alone is not accepted in character sets, use \",\n                                          /* Char_literal */Block.__(12, [\n                                              /* \"%\" */37,\n                                              /* Char_literal */Block.__(12, [\n                                                  /* \"%\" */37,\n                                                  /* String_literal */Block.__(11, [\n                                                      \" instead at position \",\n                                                      /* Int */Block.__(4, [\n                                                          /* Int_d */0,\n                                                          /* No_padding */0,\n                                                          /* No_precision */0,\n                                                          /* Char_literal */Block.__(12, [\n                                                              /* \".\" */46,\n                                                              /* End_of_format */0\n                                                            ])\n                                                        ])\n                                                    ])\n                                                ])\n                                            ])\n                                        ])\n                                    ])\n                                ])\n                            ])\n                        ]),\n                      \"invalid format %S: '%%' alone is not accepted in character sets, use %%%% instead at position %d.\"\n                    ]), str, str_ind);\n    };\n    var parse_char_set_after_char = function (_str_ind, end_ind, _c) {\n      while(true) {\n        var c = _c;\n        var str_ind = _str_ind;\n        if (str_ind === end_ind) {\n          invalid_format_message(end_ind, \"unexpected end of format\");\n        }\n        var c$prime = Caml_string.get(str, str_ind);\n        var exit = 0;\n        var exit$1 = 0;\n        if (c$prime >= 46) {\n          if (c$prime !== 64) {\n            if (c$prime !== 93) {\n              exit = 1;\n            } else {\n              add_in_char_set(char_set, c);\n              return str_ind + 1 | 0;\n            }\n          } else {\n            exit$1 = 2;\n          }\n        } else if (c$prime !== 37) {\n          if (c$prime >= 45) {\n            var str_ind$1 = str_ind + 1 | 0;\n            var end_ind$1 = end_ind;\n            var c$1 = c;\n            if (str_ind$1 === end_ind$1) {\n              invalid_format_message(end_ind$1, \"unexpected end of format\");\n            }\n            var c$prime$1 = Caml_string.get(str, str_ind$1);\n            if (c$prime$1 !== 37) {\n              if (c$prime$1 !== 93) {\n                add_range(c$1, c$prime$1);\n                return parse_char_set_content(str_ind$1 + 1 | 0, end_ind$1);\n              } else {\n                add_in_char_set(char_set, c$1);\n                add_in_char_set(char_set, /* \"-\" */45);\n                return str_ind$1 + 1 | 0;\n              }\n            } else {\n              if ((str_ind$1 + 1 | 0) === end_ind$1) {\n                invalid_format_message(end_ind$1, \"unexpected end of format\");\n              }\n              var c$prime$2 = Caml_string.get(str, str_ind$1 + 1 | 0);\n              var exit$2 = 0;\n              if (c$prime$2 !== 37 && c$prime$2 !== 64) {\n                return fail_single_percent(str_ind$1);\n              } else {\n                exit$2 = 1;\n              }\n              if (exit$2 === 1) {\n                add_range(c$1, c$prime$2);\n                return parse_char_set_content(str_ind$1 + 2 | 0, end_ind$1);\n              }\n              \n            }\n          } else {\n            exit = 1;\n          }\n        } else {\n          exit$1 = 2;\n        }\n        if (exit$1 === 2) {\n          if (c === /* \"%\" */37) {\n            add_in_char_set(char_set, c$prime);\n            return parse_char_set_content(str_ind + 1 | 0, end_ind);\n          } else {\n            exit = 1;\n          }\n        }\n        if (exit === 1) {\n          if (c === /* \"%\" */37) {\n            fail_single_percent(str_ind);\n          }\n          add_in_char_set(char_set, c);\n          _c = c$prime;\n          _str_ind = str_ind + 1 | 0;\n          continue ;\n          \n        }\n        \n      };\n    };\n    var parse_char_set_content = function (_str_ind, end_ind) {\n      while(true) {\n        var str_ind = _str_ind;\n        if (str_ind === end_ind) {\n          invalid_format_message(end_ind, \"unexpected end of format\");\n        }\n        var c = Caml_string.get(str, str_ind);\n        if (c !== 45) {\n          if (c !== 93) {\n            return parse_char_set_after_char(str_ind + 1 | 0, end_ind, c);\n          } else {\n            return str_ind + 1 | 0;\n          }\n        } else {\n          add_in_char_set(char_set, /* \"-\" */45);\n          _str_ind = str_ind + 1 | 0;\n          continue ;\n          \n        }\n      };\n    };\n    var parse_char_set_start = function (str_ind, end_ind) {\n      if (str_ind === end_ind) {\n        invalid_format_message(end_ind, \"unexpected end of format\");\n      }\n      var c = Caml_string.get(str, str_ind);\n      return parse_char_set_after_char(str_ind + 1 | 0, end_ind, c);\n    };\n    if (str_ind === end_ind) {\n      invalid_format_message(end_ind, \"unexpected end of format\");\n    }\n    var match = Caml_string.get(str, str_ind);\n    var match$1 = match !== 94 ? /* tuple */[\n        str_ind,\n        /* false */0\n      ] : /* tuple */[\n        str_ind + 1 | 0,\n        /* true */1\n      ];\n    var next_ind = parse_char_set_start(match$1[0], end_ind);\n    var char_set$1 = Bytes.to_string(char_set);\n    return /* tuple */[\n            next_ind,\n            match$1[1] ? rev_char_set(char_set$1) : char_set$1\n          ];\n  };\n  var check_open_box = function (fmt) {\n    if (typeof fmt === \"number\" || !(fmt.tag === 11 && typeof fmt[1] === \"number\")) {\n      return /* () */0;\n    } else {\n      try {\n        open_box_of_string(fmt[0]);\n        return /* () */0;\n      }\n      catch (raw_exn){\n        var exn = Js_exn.internalToOCamlException(raw_exn);\n        if (exn[0] === Caml_builtin_exceptions.failure) {\n          return /* () */0;\n        } else {\n          throw exn;\n        }\n      }\n    }\n  };\n  var parse_tag = function (is_open_tag, str_ind, end_ind) {\n    try {\n      if (str_ind === end_ind) {\n        throw Caml_builtin_exceptions.not_found;\n      }\n      var match = Caml_string.get(str, str_ind);\n      if (match !== 60) {\n        throw Caml_builtin_exceptions.not_found;\n      } else {\n        var ind = $$String.index_from(str, str_ind + 1 | 0, /* \">\" */62);\n        if (ind >= end_ind) {\n          throw Caml_builtin_exceptions.not_found;\n        }\n        var sub_str = $$String.sub(str, str_ind, (ind - str_ind | 0) + 1 | 0);\n        var beg_ind = ind + 1 | 0;\n        var match$1 = parse_literal(beg_ind, beg_ind, end_ind);\n        var match$2 = parse_literal(str_ind, str_ind, ind + 1 | 0);\n        var sub_fmt = match$2[0];\n        var sub_format = /* Format */[\n          sub_fmt,\n          sub_str\n        ];\n        var formatting = is_open_tag ? /* Open_tag */Block.__(0, [sub_format]) : (check_open_box(sub_fmt), /* Open_box */Block.__(1, [sub_format]));\n        return /* Fmt_EBB */[/* Formatting_gen */Block.__(18, [\n                    formatting,\n                    match$1[0]\n                  ])];\n      }\n    }\n    catch (exn){\n      if (exn === Caml_builtin_exceptions.not_found) {\n        var match$3 = parse_literal(str_ind, str_ind, end_ind);\n        var sub_format$1 = /* Format */[\n          /* End_of_format */0,\n          \"\"\n        ];\n        var formatting$1 = is_open_tag ? /* Open_tag */Block.__(0, [sub_format$1]) : /* Open_box */Block.__(1, [sub_format$1]);\n        return /* Fmt_EBB */[/* Formatting_gen */Block.__(18, [\n                    formatting$1,\n                    match$3[0]\n                  ])];\n      } else {\n        throw exn;\n      }\n    }\n  };\n  return parse_literal(0, 0, str.length);\n}\n\nfunction format_of_string_fmtty(str, fmtty) {\n  var match = fmt_ebb_of_string(/* None */0, str);\n  try {\n    return /* Format */[\n            type_format(match[0], fmtty),\n            str\n          ];\n  }\n  catch (exn){\n    if (exn === Type_mismatch) {\n      return Curry._2(failwith_message(/* Format */[\n                      /* String_literal */Block.__(11, [\n                          \"bad input: format type mismatch between \",\n                          /* Caml_string */Block.__(3, [\n                              /* No_padding */0,\n                              /* String_literal */Block.__(11, [\n                                  \" and \",\n                                  /* Caml_string */Block.__(3, [\n                                      /* No_padding */0,\n                                      /* End_of_format */0\n                                    ])\n                                ])\n                            ])\n                        ]),\n                      \"bad input: format type mismatch between %S and %S\"\n                    ]), str, string_of_fmtty(fmtty));\n    } else {\n      throw exn;\n    }\n  }\n}\n\nfunction format_of_string_format(str, param) {\n  var match = fmt_ebb_of_string(/* None */0, str);\n  try {\n    return /* Format */[\n            type_format(match[0], fmtty_of_fmt(param[0])),\n            str\n          ];\n  }\n  catch (exn){\n    if (exn === Type_mismatch) {\n      return Curry._2(failwith_message(/* Format */[\n                      /* String_literal */Block.__(11, [\n                          \"bad input: format type mismatch between \",\n                          /* Caml_string */Block.__(3, [\n                              /* No_padding */0,\n                              /* String_literal */Block.__(11, [\n                                  \" and \",\n                                  /* Caml_string */Block.__(3, [\n                                      /* No_padding */0,\n                                      /* End_of_format */0\n                                    ])\n                                ])\n                            ])\n                        ]),\n                      \"bad input: format type mismatch between %S and %S\"\n                    ]), str, param[1]);\n    } else {\n      throw exn;\n    }\n  }\n}\n\nexports.is_in_char_set = is_in_char_set;\nexports.rev_char_set = rev_char_set;\nexports.create_char_set = create_char_set;\nexports.add_in_char_set = add_in_char_set;\nexports.freeze_char_set = freeze_char_set;\nexports.param_format_of_ignored_format = param_format_of_ignored_format;\nexports.make_printf = make_printf;\nexports.output_acc = output_acc;\nexports.bufput_acc = bufput_acc;\nexports.strput_acc = strput_acc;\nexports.type_format = type_format;\nexports.fmt_ebb_of_string = fmt_ebb_of_string;\nexports.format_of_string_fmtty = format_of_string_fmtty;\nexports.format_of_string_format = format_of_string_format;\nexports.char_of_iconv = char_of_iconv;\nexports.string_of_formatting_lit = string_of_formatting_lit;\nexports.string_of_formatting_gen = string_of_formatting_gen;\nexports.string_of_fmtty = string_of_fmtty;\nexports.string_of_fmt = string_of_fmt;\nexports.open_box_of_string = open_box_of_string;\nexports.symm = symm;\nexports.trans = trans;\nexports.recast = recast;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/camlinternalFormat.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/camlinternalFormatBasics.js":
/*!*********************************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/camlinternalFormatBasics.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Block = __webpack_require__(/*! ./block.js */ \"./node_modules/bs-platform/lib/js/block.js\");\n\nfunction erase_rel(param) {\n  if (typeof param === \"number\") {\n    return /* End_of_fmtty */0;\n  } else {\n    switch (param.tag | 0) {\n      case 0 : \n          return /* Char_ty */Block.__(0, [erase_rel(param[0])]);\n      case 1 : \n          return /* String_ty */Block.__(1, [erase_rel(param[0])]);\n      case 2 : \n          return /* Int_ty */Block.__(2, [erase_rel(param[0])]);\n      case 3 : \n          return /* Int32_ty */Block.__(3, [erase_rel(param[0])]);\n      case 4 : \n          return /* Nativeint_ty */Block.__(4, [erase_rel(param[0])]);\n      case 5 : \n          return /* Int64_ty */Block.__(5, [erase_rel(param[0])]);\n      case 6 : \n          return /* Float_ty */Block.__(6, [erase_rel(param[0])]);\n      case 7 : \n          return /* Bool_ty */Block.__(7, [erase_rel(param[0])]);\n      case 8 : \n          return /* Format_arg_ty */Block.__(8, [\n                    param[0],\n                    erase_rel(param[1])\n                  ]);\n      case 9 : \n          var ty1 = param[0];\n          return /* Format_subst_ty */Block.__(9, [\n                    ty1,\n                    ty1,\n                    erase_rel(param[2])\n                  ]);\n      case 10 : \n          return /* Alpha_ty */Block.__(10, [erase_rel(param[0])]);\n      case 11 : \n          return /* Theta_ty */Block.__(11, [erase_rel(param[0])]);\n      case 12 : \n          return /* Any_ty */Block.__(12, [erase_rel(param[0])]);\n      case 13 : \n          return /* Reader_ty */Block.__(13, [erase_rel(param[0])]);\n      case 14 : \n          return /* Ignored_reader_ty */Block.__(14, [erase_rel(param[0])]);\n      \n    }\n  }\n}\n\nfunction concat_fmtty(fmtty1, fmtty2) {\n  if (typeof fmtty1 === \"number\") {\n    return fmtty2;\n  } else {\n    switch (fmtty1.tag | 0) {\n      case 0 : \n          return /* Char_ty */Block.__(0, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 1 : \n          return /* String_ty */Block.__(1, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 2 : \n          return /* Int_ty */Block.__(2, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 3 : \n          return /* Int32_ty */Block.__(3, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 4 : \n          return /* Nativeint_ty */Block.__(4, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 5 : \n          return /* Int64_ty */Block.__(5, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 6 : \n          return /* Float_ty */Block.__(6, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 7 : \n          return /* Bool_ty */Block.__(7, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 8 : \n          return /* Format_arg_ty */Block.__(8, [\n                    fmtty1[0],\n                    concat_fmtty(fmtty1[1], fmtty2)\n                  ]);\n      case 9 : \n          return /* Format_subst_ty */Block.__(9, [\n                    fmtty1[0],\n                    fmtty1[1],\n                    concat_fmtty(fmtty1[2], fmtty2)\n                  ]);\n      case 10 : \n          return /* Alpha_ty */Block.__(10, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 11 : \n          return /* Theta_ty */Block.__(11, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 12 : \n          return /* Any_ty */Block.__(12, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 13 : \n          return /* Reader_ty */Block.__(13, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 14 : \n          return /* Ignored_reader_ty */Block.__(14, [concat_fmtty(fmtty1[0], fmtty2)]);\n      \n    }\n  }\n}\n\nfunction concat_fmt(fmt1, fmt2) {\n  if (typeof fmt1 === \"number\") {\n    return fmt2;\n  } else {\n    switch (fmt1.tag | 0) {\n      case 0 : \n          return /* Char */Block.__(0, [concat_fmt(fmt1[0], fmt2)]);\n      case 1 : \n          return /* Caml_char */Block.__(1, [concat_fmt(fmt1[0], fmt2)]);\n      case 2 : \n          return /* String */Block.__(2, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 3 : \n          return /* Caml_string */Block.__(3, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 4 : \n          return /* Int */Block.__(4, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 5 : \n          return /* Int32 */Block.__(5, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 6 : \n          return /* Nativeint */Block.__(6, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 7 : \n          return /* Int64 */Block.__(7, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 8 : \n          return /* Float */Block.__(8, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 9 : \n          return /* Bool */Block.__(9, [concat_fmt(fmt1[0], fmt2)]);\n      case 10 : \n          return /* Flush */Block.__(10, [concat_fmt(fmt1[0], fmt2)]);\n      case 11 : \n          return /* String_literal */Block.__(11, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 12 : \n          return /* Char_literal */Block.__(12, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 13 : \n          return /* Format_arg */Block.__(13, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 14 : \n          return /* Format_subst */Block.__(14, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 15 : \n          return /* Alpha */Block.__(15, [concat_fmt(fmt1[0], fmt2)]);\n      case 16 : \n          return /* Theta */Block.__(16, [concat_fmt(fmt1[0], fmt2)]);\n      case 17 : \n          return /* Formatting_lit */Block.__(17, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 18 : \n          return /* Formatting_gen */Block.__(18, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 19 : \n          return /* Reader */Block.__(19, [concat_fmt(fmt1[0], fmt2)]);\n      case 20 : \n          return /* Scan_char_set */Block.__(20, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 21 : \n          return /* Scan_get_counter */Block.__(21, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 22 : \n          return /* Scan_next_char */Block.__(22, [concat_fmt(fmt1[0], fmt2)]);\n      case 23 : \n          return /* Ignored_param */Block.__(23, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 24 : \n          return /* Custom */Block.__(24, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      \n    }\n  }\n}\n\nexports.concat_fmtty = concat_fmtty;\nexports.erase_rel = erase_rel;\nexports.concat_fmt = concat_fmt;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/camlinternalFormatBasics.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/char.js":
/*!*************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/char.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_string = __webpack_require__(/*! ./caml_string.js */ \"./node_modules/bs-platform/lib/js/caml_string.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction chr(n) {\n  if (n < 0 || n > 255) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Char.chr\"\n        ];\n  } else {\n    return n;\n  }\n}\n\nfunction escaped(c) {\n  var exit = 0;\n  if (c >= 40) {\n    if (c !== 92) {\n      exit = c >= 127 ? 1 : 2;\n    } else {\n      return \"\\\\\\\\\";\n    }\n  } else if (c >= 32) {\n    if (c >= 39) {\n      return \"\\\\'\";\n    } else {\n      exit = 2;\n    }\n  } else if (c >= 14) {\n    exit = 1;\n  } else {\n    switch (c) {\n      case 8 : \n          return \"\\\\b\";\n      case 9 : \n          return \"\\\\t\";\n      case 10 : \n          return \"\\\\n\";\n      case 0 : \n      case 1 : \n      case 2 : \n      case 3 : \n      case 4 : \n      case 5 : \n      case 6 : \n      case 7 : \n      case 11 : \n      case 12 : \n          exit = 1;\n          break;\n      case 13 : \n          return \"\\\\r\";\n      \n    }\n  }\n  switch (exit) {\n    case 1 : \n        var s = Caml_string.caml_create_string(4);\n        s[0] = /* \"\\\\\" */92;\n        s[1] = 48 + (c / 100 | 0) | 0;\n        s[2] = 48 + (c / 10 | 0) % 10 | 0;\n        s[3] = 48 + c % 10 | 0;\n        return Caml_string.bytes_to_string(s);\n    case 2 : \n        var s$1 = Caml_string.caml_create_string(1);\n        s$1[0] = c;\n        return Caml_string.bytes_to_string(s$1);\n    \n  }\n}\n\nfunction lowercase(c) {\n  if (c >= /* \"A\" */65 && c <= /* \"Z\" */90 || c >= /* \"\\192\" */192 && c <= /* \"\\214\" */214 || c >= /* \"\\216\" */216 && c <= /* \"\\222\" */222) {\n    return c + 32 | 0;\n  } else {\n    return c;\n  }\n}\n\nfunction uppercase(c) {\n  if (c >= /* \"a\" */97 && c <= /* \"z\" */122 || c >= /* \"\\224\" */224 && c <= /* \"\\246\" */246 || c >= /* \"\\248\" */248 && c <= /* \"\\254\" */254) {\n    return c - 32 | 0;\n  } else {\n    return c;\n  }\n}\n\nfunction compare(c1, c2) {\n  return c1 - c2 | 0;\n}\n\nexports.chr = chr;\nexports.escaped = escaped;\nexports.lowercase = lowercase;\nexports.uppercase = uppercase;\nexports.compare = compare;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/char.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/curry.js":
/*!**************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/curry.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_array = __webpack_require__(/*! ./caml_array.js */ \"./node_modules/bs-platform/lib/js/caml_array.js\");\n\nfunction app(_f, _args) {\n  while(true) {\n    var args = _args;\n    var f = _f;\n    var arity = f.length;\n    var arity$1 = arity === 0 ? 1 : arity;\n    var len = args.length;\n    var d = arity$1 - len | 0;\n    if (d === 0) {\n      return f.apply(null, args);\n    } else if (d < 0) {\n      _args = Caml_array.caml_array_sub(args, arity$1, -d | 0);\n      _f = f.apply(null, Caml_array.caml_array_sub(args, 0, arity$1));\n      continue ;\n      \n    } else {\n      return (function(f,args){\n      return function (x) {\n        return app(f, args.concat(/* array */[x]));\n      }\n      }(f,args));\n    }\n  };\n}\n\nfunction curry_1(o, a0, arity) {\n  if (arity > 7 || arity < 0) {\n    return app(o, /* array */[a0]);\n  } else {\n    switch (arity) {\n      case 0 : \n      case 1 : \n          return o(a0);\n      case 2 : \n          return (function (param) {\n              return o(a0, param);\n            });\n      case 3 : \n          return (function (param, param$1) {\n              return o(a0, param, param$1);\n            });\n      case 4 : \n          return (function (param, param$1, param$2) {\n              return o(a0, param, param$1, param$2);\n            });\n      case 5 : \n          return (function (param, param$1, param$2, param$3) {\n              return o(a0, param, param$1, param$2, param$3);\n            });\n      case 6 : \n          return (function (param, param$1, param$2, param$3, param$4) {\n              return o(a0, param, param$1, param$2, param$3, param$4);\n            });\n      case 7 : \n          return (function (param, param$1, param$2, param$3, param$4, param$5) {\n              return o(a0, param, param$1, param$2, param$3, param$4, param$5);\n            });\n      \n    }\n  }\n}\n\nfunction _1(o, a0) {\n  var arity = o.length;\n  if (arity === 1) {\n    return o(a0);\n  } else {\n    return curry_1(o, a0, arity);\n  }\n}\n\nfunction __1(o) {\n  var arity = o.length;\n  if (arity === 1) {\n    return o;\n  } else {\n    return (function (a0) {\n        return _1(o, a0);\n      });\n  }\n}\n\nfunction curry_2(o, a0, a1, arity) {\n  if (arity > 7 || arity < 0) {\n    return app(o, /* array */[\n                a0,\n                a1\n              ]);\n  } else {\n    switch (arity) {\n      case 0 : \n      case 1 : \n          return app(o(a0), /* array */[a1]);\n      case 2 : \n          return o(a0, a1);\n      case 3 : \n          return (function (param) {\n              return o(a0, a1, param);\n            });\n      case 4 : \n          return (function (param, param$1) {\n              return o(a0, a1, param, param$1);\n            });\n      case 5 : \n          return (function (param, param$1, param$2) {\n              return o(a0, a1, param, param$1, param$2);\n            });\n      case 6 : \n          return (function (param, param$1, param$2, param$3) {\n              return o(a0, a1, param, param$1, param$2, param$3);\n            });\n      case 7 : \n          return (function (param, param$1, param$2, param$3, param$4) {\n              return o(a0, a1, param, param$1, param$2, param$3, param$4);\n            });\n      \n    }\n  }\n}\n\nfunction _2(o, a0, a1) {\n  var arity = o.length;\n  if (arity === 2) {\n    return o(a0, a1);\n  } else {\n    return curry_2(o, a0, a1, arity);\n  }\n}\n\nfunction __2(o) {\n  var arity = o.length;\n  if (arity === 2) {\n    return o;\n  } else {\n    return (function (a0, a1) {\n        return _2(o, a0, a1);\n      });\n  }\n}\n\nfunction curry_3(o, a0, a1, a2, arity) {\n  var exit = 0;\n  if (arity > 7 || arity < 0) {\n    return app(o, /* array */[\n                a0,\n                a1,\n                a2\n              ]);\n  } else {\n    switch (arity) {\n      case 0 : \n      case 1 : \n          exit = 1;\n          break;\n      case 2 : \n          return app(o(a0, a1), /* array */[a2]);\n      case 3 : \n          return o(a0, a1, a2);\n      case 4 : \n          return (function (param) {\n              return o(a0, a1, a2, param);\n            });\n      case 5 : \n          return (function (param, param$1) {\n              return o(a0, a1, a2, param, param$1);\n            });\n      case 6 : \n          return (function (param, param$1, param$2) {\n              return o(a0, a1, a2, param, param$1, param$2);\n            });\n      case 7 : \n          return (function (param, param$1, param$2, param$3) {\n              return o(a0, a1, a2, param, param$1, param$2, param$3);\n            });\n      \n    }\n  }\n  if (exit === 1) {\n    return app(o(a0), /* array */[\n                a1,\n                a2\n              ]);\n  }\n  \n}\n\nfunction _3(o, a0, a1, a2) {\n  var arity = o.length;\n  if (arity === 3) {\n    return o(a0, a1, a2);\n  } else {\n    return curry_3(o, a0, a1, a2, arity);\n  }\n}\n\nfunction __3(o) {\n  var arity = o.length;\n  if (arity === 3) {\n    return o;\n  } else {\n    return (function (a0, a1, a2) {\n        return _3(o, a0, a1, a2);\n      });\n  }\n}\n\nfunction curry_4(o, a0, a1, a2, a3, arity) {\n  var exit = 0;\n  if (arity > 7 || arity < 0) {\n    return app(o, /* array */[\n                a0,\n                a1,\n                a2,\n                a3\n              ]);\n  } else {\n    switch (arity) {\n      case 0 : \n      case 1 : \n          exit = 1;\n          break;\n      case 2 : \n          return app(o(a0, a1), /* array */[\n                      a2,\n                      a3\n                    ]);\n      case 3 : \n          return app(o(a0, a1, a2), /* array */[a3]);\n      case 4 : \n          return o(a0, a1, a2, a3);\n      case 5 : \n          return (function (param) {\n              return o(a0, a1, a2, a3, param);\n            });\n      case 6 : \n          return (function (param, param$1) {\n              return o(a0, a1, a2, a3, param, param$1);\n            });\n      case 7 : \n          return (function (param, param$1, param$2) {\n              return o(a0, a1, a2, a3, param, param$1, param$2);\n            });\n      \n    }\n  }\n  if (exit === 1) {\n    return app(o(a0), /* array */[\n                a1,\n                a2,\n                a3\n              ]);\n  }\n  \n}\n\nfunction _4(o, a0, a1, a2, a3) {\n  var arity = o.length;\n  if (arity === 4) {\n    return o(a0, a1, a2, a3);\n  } else {\n    return curry_4(o, a0, a1, a2, a3, arity);\n  }\n}\n\nfunction __4(o) {\n  var arity = o.length;\n  if (arity === 4) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3) {\n        return _4(o, a0, a1, a2, a3);\n      });\n  }\n}\n\nfunction curry_5(o, a0, a1, a2, a3, a4, arity) {\n  var exit = 0;\n  if (arity > 7 || arity < 0) {\n    return app(o, /* array */[\n                a0,\n                a1,\n                a2,\n                a3,\n                a4\n              ]);\n  } else {\n    switch (arity) {\n      case 0 : \n      case 1 : \n          exit = 1;\n          break;\n      case 2 : \n          return app(o(a0, a1), /* array */[\n                      a2,\n                      a3,\n                      a4\n                    ]);\n      case 3 : \n          return app(o(a0, a1, a2), /* array */[\n                      a3,\n                      a4\n                    ]);\n      case 4 : \n          return app(o(a0, a1, a2, a3), /* array */[a4]);\n      case 5 : \n          return o(a0, a1, a2, a3, a4);\n      case 6 : \n          return (function (param) {\n              return o(a0, a1, a2, a3, a4, param);\n            });\n      case 7 : \n          return (function (param, param$1) {\n              return o(a0, a1, a2, a3, a4, param, param$1);\n            });\n      \n    }\n  }\n  if (exit === 1) {\n    return app(o(a0), /* array */[\n                a1,\n                a2,\n                a3,\n                a4\n              ]);\n  }\n  \n}\n\nfunction _5(o, a0, a1, a2, a3, a4) {\n  var arity = o.length;\n  if (arity === 5) {\n    return o(a0, a1, a2, a3, a4);\n  } else {\n    return curry_5(o, a0, a1, a2, a3, a4, arity);\n  }\n}\n\nfunction __5(o) {\n  var arity = o.length;\n  if (arity === 5) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4) {\n        return _5(o, a0, a1, a2, a3, a4);\n      });\n  }\n}\n\nfunction curry_6(o, a0, a1, a2, a3, a4, a5, arity) {\n  var exit = 0;\n  if (arity > 7 || arity < 0) {\n    return app(o, /* array */[\n                a0,\n                a1,\n                a2,\n                a3,\n                a4,\n                a5\n              ]);\n  } else {\n    switch (arity) {\n      case 0 : \n      case 1 : \n          exit = 1;\n          break;\n      case 2 : \n          return app(o(a0, a1), /* array */[\n                      a2,\n                      a3,\n                      a4,\n                      a5\n                    ]);\n      case 3 : \n          return app(o(a0, a1, a2), /* array */[\n                      a3,\n                      a4,\n                      a5\n                    ]);\n      case 4 : \n          return app(o(a0, a1, a2, a3), /* array */[\n                      a4,\n                      a5\n                    ]);\n      case 5 : \n          return app(o(a0, a1, a2, a3, a4), /* array */[a5]);\n      case 6 : \n          return o(a0, a1, a2, a3, a4, a5);\n      case 7 : \n          return (function (param) {\n              return o(a0, a1, a2, a3, a4, a5, param);\n            });\n      \n    }\n  }\n  if (exit === 1) {\n    return app(o(a0), /* array */[\n                a1,\n                a2,\n                a3,\n                a4,\n                a5\n              ]);\n  }\n  \n}\n\nfunction _6(o, a0, a1, a2, a3, a4, a5) {\n  var arity = o.length;\n  if (arity === 6) {\n    return o(a0, a1, a2, a3, a4, a5);\n  } else {\n    return curry_6(o, a0, a1, a2, a3, a4, a5, arity);\n  }\n}\n\nfunction __6(o) {\n  var arity = o.length;\n  if (arity === 6) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4, a5) {\n        return _6(o, a0, a1, a2, a3, a4, a5);\n      });\n  }\n}\n\nfunction curry_7(o, a0, a1, a2, a3, a4, a5, a6, arity) {\n  var exit = 0;\n  if (arity > 7 || arity < 0) {\n    return app(o, /* array */[\n                a0,\n                a1,\n                a2,\n                a3,\n                a4,\n                a5,\n                a6\n              ]);\n  } else {\n    switch (arity) {\n      case 0 : \n      case 1 : \n          exit = 1;\n          break;\n      case 2 : \n          return app(o(a0, a1), /* array */[\n                      a2,\n                      a3,\n                      a4,\n                      a5,\n                      a6\n                    ]);\n      case 3 : \n          return app(o(a0, a1, a2), /* array */[\n                      a3,\n                      a4,\n                      a5,\n                      a6\n                    ]);\n      case 4 : \n          return app(o(a0, a1, a2, a3), /* array */[\n                      a4,\n                      a5,\n                      a6\n                    ]);\n      case 5 : \n          return app(o(a0, a1, a2, a3, a4), /* array */[\n                      a5,\n                      a6\n                    ]);\n      case 6 : \n          return app(o(a0, a1, a2, a3, a4, a5), /* array */[a6]);\n      case 7 : \n          return o(a0, a1, a2, a3, a4, a5, a6);\n      \n    }\n  }\n  if (exit === 1) {\n    return app(o(a0), /* array */[\n                a1,\n                a2,\n                a3,\n                a4,\n                a5,\n                a6\n              ]);\n  }\n  \n}\n\nfunction _7(o, a0, a1, a2, a3, a4, a5, a6) {\n  var arity = o.length;\n  if (arity === 7) {\n    return o(a0, a1, a2, a3, a4, a5, a6);\n  } else {\n    return curry_7(o, a0, a1, a2, a3, a4, a5, a6, arity);\n  }\n}\n\nfunction __7(o) {\n  var arity = o.length;\n  if (arity === 7) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4, a5, a6) {\n        return _7(o, a0, a1, a2, a3, a4, a5, a6);\n      });\n  }\n}\n\nfunction curry_8(o, a0, a1, a2, a3, a4, a5, a6, a7, arity) {\n  var exit = 0;\n  if (arity > 7 || arity < 0) {\n    return app(o, /* array */[\n                a0,\n                a1,\n                a2,\n                a3,\n                a4,\n                a5,\n                a6,\n                a7\n              ]);\n  } else {\n    switch (arity) {\n      case 0 : \n      case 1 : \n          exit = 1;\n          break;\n      case 2 : \n          return app(o(a0, a1), /* array */[\n                      a2,\n                      a3,\n                      a4,\n                      a5,\n                      a6,\n                      a7\n                    ]);\n      case 3 : \n          return app(o(a0, a1, a2), /* array */[\n                      a3,\n                      a4,\n                      a5,\n                      a6,\n                      a7\n                    ]);\n      case 4 : \n          return app(o(a0, a1, a2, a3), /* array */[\n                      a4,\n                      a5,\n                      a6,\n                      a7\n                    ]);\n      case 5 : \n          return app(o(a0, a1, a2, a3, a4), /* array */[\n                      a5,\n                      a6,\n                      a7\n                    ]);\n      case 6 : \n          return app(o(a0, a1, a2, a3, a4, a5), /* array */[\n                      a6,\n                      a7\n                    ]);\n      case 7 : \n          return app(o(a0, a1, a2, a3, a4, a5, a6), /* array */[a7]);\n      \n    }\n  }\n  if (exit === 1) {\n    return app(o(a0), /* array */[\n                a1,\n                a2,\n                a3,\n                a4,\n                a5,\n                a6,\n                a7\n              ]);\n  }\n  \n}\n\nfunction _8(o, a0, a1, a2, a3, a4, a5, a6, a7) {\n  var arity = o.length;\n  if (arity === 8) {\n    return o(a0, a1, a2, a3, a4, a5, a6, a7);\n  } else {\n    return curry_8(o, a0, a1, a2, a3, a4, a5, a6, a7, arity);\n  }\n}\n\nfunction __8(o) {\n  var arity = o.length;\n  if (arity === 8) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return _8(o, a0, a1, a2, a3, a4, a5, a6, a7);\n      });\n  }\n}\n\nexports.app = app;\nexports.curry_1 = curry_1;\nexports._1 = _1;\nexports.__1 = __1;\nexports.curry_2 = curry_2;\nexports._2 = _2;\nexports.__2 = __2;\nexports.curry_3 = curry_3;\nexports._3 = _3;\nexports.__3 = __3;\nexports.curry_4 = curry_4;\nexports._4 = _4;\nexports.__4 = __4;\nexports.curry_5 = curry_5;\nexports._5 = _5;\nexports.__5 = __5;\nexports.curry_6 = curry_6;\nexports._6 = _6;\nexports.__6 = __6;\nexports.curry_7 = curry_7;\nexports._7 = _7;\nexports.__7 = __7;\nexports.curry_8 = curry_8;\nexports._8 = _8;\nexports.__8 = __8;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/curry.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/js_exn.js":
/*!***************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/js_exn.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Caml_exceptions = __webpack_require__(/*! ./caml_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_exceptions.js\");\n\nvar $$Error = Caml_exceptions.create(\"Js_exn.Error\");\n\nfunction internalToOCamlException(e) {\n  if (Caml_exceptions.isCamlExceptionOrOpenVariant(e)) {\n    return e;\n  } else {\n    return [\n            $$Error,\n            e\n          ];\n  }\n}\n\nfunction raiseError(str) {\n  throw new Error(str);\n}\n\nfunction raiseEvalError(str) {\n  throw new EvalError(str);\n}\n\nfunction raiseRangeError(str) {\n  throw new RangeError(str);\n}\n\nfunction raiseReferenceError(str) {\n  throw new ReferenceError(str);\n}\n\nfunction raiseSyntaxError(str) {\n  throw new SyntaxError(str);\n}\n\nfunction raiseTypeError(str) {\n  throw new TypeError(str);\n}\n\nfunction raiseUriError(str) {\n  throw new URIError(str);\n}\n\nexports.$$Error = $$Error;\nexports.internalToOCamlException = internalToOCamlException;\nexports.raiseError = raiseError;\nexports.raiseEvalError = raiseEvalError;\nexports.raiseRangeError = raiseRangeError;\nexports.raiseReferenceError = raiseReferenceError;\nexports.raiseSyntaxError = raiseSyntaxError;\nexports.raiseTypeError = raiseTypeError;\nexports.raiseUriError = raiseUriError;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/js_exn.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/lexing.js":
/*!***************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/lexing.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Bytes = __webpack_require__(/*! ./bytes.js */ \"./node_modules/bs-platform/lib/js/bytes.js\");\nvar Curry = __webpack_require__(/*! ./curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Caml_array = __webpack_require__(/*! ./caml_array.js */ \"./node_modules/bs-platform/lib/js/caml_array.js\");\nvar Caml_bytes = __webpack_require__(/*! ./caml_bytes.js */ \"./node_modules/bs-platform/lib/js/caml_bytes.js\");\nvar Caml_lexer = __webpack_require__(/*! ./caml_lexer.js */ \"./node_modules/bs-platform/lib/js/caml_lexer.js\");\nvar Pervasives = __webpack_require__(/*! ./pervasives.js */ \"./node_modules/bs-platform/lib/js/pervasives.js\");\nvar Caml_string = __webpack_require__(/*! ./caml_string.js */ \"./node_modules/bs-platform/lib/js/caml_string.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction engine(tbl, state, buf) {\n  var result = Caml_lexer.caml_lex_engine(tbl, state, buf);\n  if (result >= 0) {\n    buf[/* lex_start_p */10] = buf[/* lex_curr_p */11];\n    var init = buf[/* lex_curr_p */11];\n    buf[/* lex_curr_p */11] = /* record */[\n      /* pos_fname */init[/* pos_fname */0],\n      /* pos_lnum */init[/* pos_lnum */1],\n      /* pos_bol */init[/* pos_bol */2],\n      /* pos_cnum */buf[/* lex_abs_pos */3] + buf[/* lex_curr_pos */5] | 0\n    ];\n  }\n  return result;\n}\n\nfunction new_engine(tbl, state, buf) {\n  var result = Caml_lexer.caml_new_lex_engine(tbl, state, buf);\n  if (result >= 0) {\n    buf[/* lex_start_p */10] = buf[/* lex_curr_p */11];\n    var init = buf[/* lex_curr_p */11];\n    buf[/* lex_curr_p */11] = /* record */[\n      /* pos_fname */init[/* pos_fname */0],\n      /* pos_lnum */init[/* pos_lnum */1],\n      /* pos_bol */init[/* pos_bol */2],\n      /* pos_cnum */buf[/* lex_abs_pos */3] + buf[/* lex_curr_pos */5] | 0\n    ];\n  }\n  return result;\n}\n\nvar zero_pos = /* record */[\n  /* pos_fname */\"\",\n  /* pos_lnum */1,\n  /* pos_bol */0,\n  /* pos_cnum */0\n];\n\nfunction from_function(f) {\n  var partial_arg = Caml_string.caml_create_string(512);\n  return /* record */[\n          /* refill_buff */(function (param) {\n              var read_fun = f;\n              var aux_buffer = partial_arg;\n              var lexbuf = param;\n              var read = Curry._2(read_fun, aux_buffer, aux_buffer.length);\n              var n = read > 0 ? read : (lexbuf[/* lex_eof_reached */8] = /* true */1, 0);\n              if ((lexbuf[/* lex_buffer_len */2] + n | 0) > lexbuf[/* lex_buffer */1].length) {\n                if (((lexbuf[/* lex_buffer_len */2] - lexbuf[/* lex_start_pos */4] | 0) + n | 0) <= lexbuf[/* lex_buffer */1].length) {\n                  Bytes.blit(lexbuf[/* lex_buffer */1], lexbuf[/* lex_start_pos */4], lexbuf[/* lex_buffer */1], 0, lexbuf[/* lex_buffer_len */2] - lexbuf[/* lex_start_pos */4] | 0);\n                } else {\n                  var newlen = (lexbuf[/* lex_buffer */1].length << 1);\n                  if (((lexbuf[/* lex_buffer_len */2] - lexbuf[/* lex_start_pos */4] | 0) + n | 0) > newlen) {\n                    throw [\n                          Caml_builtin_exceptions.failure,\n                          \"Lexing.lex_refill: cannot grow buffer\"\n                        ];\n                  }\n                  var newbuf = Caml_string.caml_create_string(newlen);\n                  Bytes.blit(lexbuf[/* lex_buffer */1], lexbuf[/* lex_start_pos */4], newbuf, 0, lexbuf[/* lex_buffer_len */2] - lexbuf[/* lex_start_pos */4] | 0);\n                  lexbuf[/* lex_buffer */1] = newbuf;\n                }\n                var s = lexbuf[/* lex_start_pos */4];\n                lexbuf[/* lex_abs_pos */3] = lexbuf[/* lex_abs_pos */3] + s | 0;\n                lexbuf[/* lex_curr_pos */5] = lexbuf[/* lex_curr_pos */5] - s | 0;\n                lexbuf[/* lex_start_pos */4] = 0;\n                lexbuf[/* lex_last_pos */6] = lexbuf[/* lex_last_pos */6] - s | 0;\n                lexbuf[/* lex_buffer_len */2] = lexbuf[/* lex_buffer_len */2] - s | 0;\n                var t = lexbuf[/* lex_mem */9];\n                for(var i = 0 ,i_finish = t.length - 1 | 0; i <= i_finish; ++i){\n                  var v = Caml_array.caml_array_get(t, i);\n                  if (v >= 0) {\n                    Caml_array.caml_array_set(t, i, v - s | 0);\n                  }\n                  \n                }\n              }\n              Bytes.blit(aux_buffer, 0, lexbuf[/* lex_buffer */1], lexbuf[/* lex_buffer_len */2], n);\n              lexbuf[/* lex_buffer_len */2] = lexbuf[/* lex_buffer_len */2] + n | 0;\n              return /* () */0;\n            }),\n          /* lex_buffer */Caml_string.caml_create_string(1024),\n          /* lex_buffer_len */0,\n          /* lex_abs_pos */0,\n          /* lex_start_pos */0,\n          /* lex_curr_pos */0,\n          /* lex_last_pos */0,\n          /* lex_last_action */0,\n          /* lex_eof_reached : false */0,\n          /* lex_mem : int array */[],\n          /* lex_start_p */zero_pos,\n          /* lex_curr_p */zero_pos\n        ];\n}\n\nfunction from_channel(ic) {\n  return from_function((function (buf, n) {\n                return Pervasives.input(ic, buf, 0, n);\n              }));\n}\n\nfunction from_string(s) {\n  return /* record */[\n          /* refill_buff */(function (lexbuf) {\n              lexbuf[/* lex_eof_reached */8] = /* true */1;\n              return /* () */0;\n            }),\n          /* lex_buffer */Bytes.of_string(s),\n          /* lex_buffer_len */s.length,\n          /* lex_abs_pos */0,\n          /* lex_start_pos */0,\n          /* lex_curr_pos */0,\n          /* lex_last_pos */0,\n          /* lex_last_action */0,\n          /* lex_eof_reached : true */1,\n          /* lex_mem : int array */[],\n          /* lex_start_p */zero_pos,\n          /* lex_curr_p */zero_pos\n        ];\n}\n\nfunction lexeme(lexbuf) {\n  var len = lexbuf[/* lex_curr_pos */5] - lexbuf[/* lex_start_pos */4] | 0;\n  return Bytes.sub_string(lexbuf[/* lex_buffer */1], lexbuf[/* lex_start_pos */4], len);\n}\n\nfunction sub_lexeme(lexbuf, i1, i2) {\n  var len = i2 - i1 | 0;\n  return Bytes.sub_string(lexbuf[/* lex_buffer */1], i1, len);\n}\n\nfunction sub_lexeme_opt(lexbuf, i1, i2) {\n  if (i1 >= 0) {\n    var len = i2 - i1 | 0;\n    return /* Some */[Bytes.sub_string(lexbuf[/* lex_buffer */1], i1, len)];\n  } else {\n    return /* None */0;\n  }\n}\n\nfunction sub_lexeme_char(lexbuf, i) {\n  return Caml_bytes.get(lexbuf[/* lex_buffer */1], i);\n}\n\nfunction sub_lexeme_char_opt(lexbuf, i) {\n  if (i >= 0) {\n    return /* Some */[Caml_bytes.get(lexbuf[/* lex_buffer */1], i)];\n  } else {\n    return /* None */0;\n  }\n}\n\nfunction lexeme_char(lexbuf, i) {\n  return Caml_bytes.get(lexbuf[/* lex_buffer */1], lexbuf[/* lex_start_pos */4] + i | 0);\n}\n\nfunction lexeme_start(lexbuf) {\n  return lexbuf[/* lex_start_p */10][/* pos_cnum */3];\n}\n\nfunction lexeme_end(lexbuf) {\n  return lexbuf[/* lex_curr_p */11][/* pos_cnum */3];\n}\n\nfunction lexeme_start_p(lexbuf) {\n  return lexbuf[/* lex_start_p */10];\n}\n\nfunction lexeme_end_p(lexbuf) {\n  return lexbuf[/* lex_curr_p */11];\n}\n\nfunction new_line(lexbuf) {\n  var lcp = lexbuf[/* lex_curr_p */11];\n  lexbuf[/* lex_curr_p */11] = /* record */[\n    /* pos_fname */lcp[/* pos_fname */0],\n    /* pos_lnum */lcp[/* pos_lnum */1] + 1 | 0,\n    /* pos_bol */lcp[/* pos_cnum */3],\n    /* pos_cnum */lcp[/* pos_cnum */3]\n  ];\n  return /* () */0;\n}\n\nfunction flush_input(lb) {\n  lb[/* lex_curr_pos */5] = 0;\n  lb[/* lex_abs_pos */3] = 0;\n  var init = lb[/* lex_curr_p */11];\n  lb[/* lex_curr_p */11] = /* record */[\n    /* pos_fname */init[/* pos_fname */0],\n    /* pos_lnum */init[/* pos_lnum */1],\n    /* pos_bol */init[/* pos_bol */2],\n    /* pos_cnum */0\n  ];\n  lb[/* lex_buffer_len */2] = 0;\n  return /* () */0;\n}\n\nvar dummy_pos = /* record */[\n  /* pos_fname */\"\",\n  /* pos_lnum */0,\n  /* pos_bol */0,\n  /* pos_cnum */-1\n];\n\nexports.dummy_pos = dummy_pos;\nexports.from_channel = from_channel;\nexports.from_string = from_string;\nexports.from_function = from_function;\nexports.lexeme = lexeme;\nexports.lexeme_char = lexeme_char;\nexports.lexeme_start = lexeme_start;\nexports.lexeme_end = lexeme_end;\nexports.lexeme_start_p = lexeme_start_p;\nexports.lexeme_end_p = lexeme_end_p;\nexports.new_line = new_line;\nexports.flush_input = flush_input;\nexports.sub_lexeme = sub_lexeme;\nexports.sub_lexeme_opt = sub_lexeme_opt;\nexports.sub_lexeme_char = sub_lexeme_char;\nexports.sub_lexeme_char_opt = sub_lexeme_char_opt;\nexports.engine = engine;\nexports.new_engine = new_engine;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/lexing.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/list.js":
/*!*************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/list.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Curry = __webpack_require__(/*! ./curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Caml_obj = __webpack_require__(/*! ./caml_obj.js */ \"./node_modules/bs-platform/lib/js/caml_obj.js\");\nvar Pervasives = __webpack_require__(/*! ./pervasives.js */ \"./node_modules/bs-platform/lib/js/pervasives.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\n\nfunction length(l) {\n  var _len = 0;\n  var _param = l;\n  while(true) {\n    var param = _param;\n    var len = _len;\n    if (param) {\n      _param = param[1];\n      _len = len + 1 | 0;\n      continue ;\n      \n    } else {\n      return len;\n    }\n  };\n}\n\nfunction hd(param) {\n  if (param) {\n    return param[0];\n  } else {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"hd\"\n        ];\n  }\n}\n\nfunction tl(param) {\n  if (param) {\n    return param[1];\n  } else {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"tl\"\n        ];\n  }\n}\n\nfunction nth(l, n) {\n  if (n < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"List.nth\"\n        ];\n  } else {\n    var _l = l;\n    var _n = n;\n    while(true) {\n      var n$1 = _n;\n      var l$1 = _l;\n      if (l$1) {\n        if (n$1 === 0) {\n          return l$1[0];\n        } else {\n          _n = n$1 - 1 | 0;\n          _l = l$1[1];\n          continue ;\n          \n        }\n      } else {\n        throw [\n              Caml_builtin_exceptions.failure,\n              \"nth\"\n            ];\n      }\n    };\n  }\n}\n\nfunction rev_append(_l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    if (l1) {\n      _l2 = /* :: */[\n        l1[0],\n        l2\n      ];\n      _l1 = l1[1];\n      continue ;\n      \n    } else {\n      return l2;\n    }\n  };\n}\n\nfunction rev(l) {\n  return rev_append(l, /* [] */0);\n}\n\nfunction flatten(param) {\n  if (param) {\n    return Pervasives.$at(param[0], flatten(param[1]));\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction map(f, param) {\n  if (param) {\n    var r = Curry._1(f, param[0]);\n    return /* :: */[\n            r,\n            map(f, param[1])\n          ];\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction mapi(i, f, param) {\n  if (param) {\n    var r = Curry._2(f, i, param[0]);\n    return /* :: */[\n            r,\n            mapi(i + 1 | 0, f, param[1])\n          ];\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction mapi$1(f, l) {\n  return mapi(0, f, l);\n}\n\nfunction rev_map(f, l) {\n  var _accu = /* [] */0;\n  var _param = l;\n  while(true) {\n    var param = _param;\n    var accu = _accu;\n    if (param) {\n      _param = param[1];\n      _accu = /* :: */[\n        Curry._1(f, param[0]),\n        accu\n      ];\n      continue ;\n      \n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction iter(f, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      Curry._1(f, param[0]);\n      _param = param[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction iteri(f, l) {\n  var _i = 0;\n  var f$1 = f;\n  var _param = l;\n  while(true) {\n    var param = _param;\n    var i = _i;\n    if (param) {\n      Curry._2(f$1, i, param[0]);\n      _param = param[1];\n      _i = i + 1 | 0;\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction fold_left(f, _accu, _l) {\n  while(true) {\n    var l = _l;\n    var accu = _accu;\n    if (l) {\n      _l = l[1];\n      _accu = Curry._2(f, accu, l[0]);\n      continue ;\n      \n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction fold_right(f, l, accu) {\n  if (l) {\n    return Curry._2(f, l[0], fold_right(f, l[1], accu));\n  } else {\n    return accu;\n  }\n}\n\nfunction map2(f, l1, l2) {\n  if (l1) {\n    if (l2) {\n      var r = Curry._2(f, l1[0], l2[0]);\n      return /* :: */[\n              r,\n              map2(f, l1[1], l2[1])\n            ];\n    } else {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.map2\"\n          ];\n    }\n  } else if (l2) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"List.map2\"\n        ];\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction rev_map2(f, l1, l2) {\n  var _accu = /* [] */0;\n  var _l1 = l1;\n  var _l2 = l2;\n  while(true) {\n    var l2$1 = _l2;\n    var l1$1 = _l1;\n    var accu = _accu;\n    if (l1$1) {\n      if (l2$1) {\n        _l2 = l2$1[1];\n        _l1 = l1$1[1];\n        _accu = /* :: */[\n          Curry._2(f, l1$1[0], l2$1[0]),\n          accu\n        ];\n        continue ;\n        \n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.rev_map2\"\n            ];\n      }\n    } else if (l2$1) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.rev_map2\"\n          ];\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction iter2(f, _l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    if (l1) {\n      if (l2) {\n        Curry._2(f, l1[0], l2[0]);\n        _l2 = l2[1];\n        _l1 = l1[1];\n        continue ;\n        \n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.iter2\"\n            ];\n      }\n    } else if (l2) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.iter2\"\n          ];\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction fold_left2(f, _accu, _l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    var accu = _accu;\n    if (l1) {\n      if (l2) {\n        _l2 = l2[1];\n        _l1 = l1[1];\n        _accu = Curry._3(f, accu, l1[0], l2[0]);\n        continue ;\n        \n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.fold_left2\"\n            ];\n      }\n    } else if (l2) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.fold_left2\"\n          ];\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction fold_right2(f, l1, l2, accu) {\n  if (l1) {\n    if (l2) {\n      return Curry._3(f, l1[0], l2[0], fold_right2(f, l1[1], l2[1], accu));\n    } else {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.fold_right2\"\n          ];\n    }\n  } else if (l2) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"List.fold_right2\"\n        ];\n  } else {\n    return accu;\n  }\n}\n\nfunction for_all(p, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (Curry._1(p, param[0])) {\n        _param = param[1];\n        continue ;\n        \n      } else {\n        return /* false */0;\n      }\n    } else {\n      return /* true */1;\n    }\n  };\n}\n\nfunction exists(p, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (Curry._1(p, param[0])) {\n        return /* true */1;\n      } else {\n        _param = param[1];\n        continue ;\n        \n      }\n    } else {\n      return /* false */0;\n    }\n  };\n}\n\nfunction for_all2(p, _l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    if (l1) {\n      if (l2) {\n        if (Curry._2(p, l1[0], l2[0])) {\n          _l2 = l2[1];\n          _l1 = l1[1];\n          continue ;\n          \n        } else {\n          return /* false */0;\n        }\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.for_all2\"\n            ];\n      }\n    } else if (l2) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.for_all2\"\n          ];\n    } else {\n      return /* true */1;\n    }\n  };\n}\n\nfunction exists2(p, _l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    if (l1) {\n      if (l2) {\n        if (Curry._2(p, l1[0], l2[0])) {\n          return /* true */1;\n        } else {\n          _l2 = l2[1];\n          _l1 = l1[1];\n          continue ;\n          \n        }\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.exists2\"\n            ];\n      }\n    } else if (l2) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.exists2\"\n          ];\n    } else {\n      return /* false */0;\n    }\n  };\n}\n\nfunction mem(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (Caml_obj.caml_equal(param[0], x)) {\n        return /* true */1;\n      } else {\n        _param = param[1];\n        continue ;\n        \n      }\n    } else {\n      return /* false */0;\n    }\n  };\n}\n\nfunction memq(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (param[0] === x) {\n        return /* true */1;\n      } else {\n        _param = param[1];\n        continue ;\n        \n      }\n    } else {\n      return /* false */0;\n    }\n  };\n}\n\nfunction assoc(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      var match = param[0];\n      if (Caml_obj.caml_equal(match[0], x)) {\n        return match[1];\n      } else {\n        _param = param[1];\n        continue ;\n        \n      }\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  };\n}\n\nfunction assq(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      var match = param[0];\n      if (match[0] === x) {\n        return match[1];\n      } else {\n        _param = param[1];\n        continue ;\n        \n      }\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  };\n}\n\nfunction mem_assoc(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (Caml_obj.caml_equal(param[0][0], x)) {\n        return /* true */1;\n      } else {\n        _param = param[1];\n        continue ;\n        \n      }\n    } else {\n      return /* false */0;\n    }\n  };\n}\n\nfunction mem_assq(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (param[0][0] === x) {\n        return /* true */1;\n      } else {\n        _param = param[1];\n        continue ;\n        \n      }\n    } else {\n      return /* false */0;\n    }\n  };\n}\n\nfunction remove_assoc(x, param) {\n  if (param) {\n    var l = param[1];\n    var pair = param[0];\n    if (Caml_obj.caml_equal(pair[0], x)) {\n      return l;\n    } else {\n      return /* :: */[\n              pair,\n              remove_assoc(x, l)\n            ];\n    }\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction remove_assq(x, param) {\n  if (param) {\n    var l = param[1];\n    var pair = param[0];\n    if (pair[0] === x) {\n      return l;\n    } else {\n      return /* :: */[\n              pair,\n              remove_assq(x, l)\n            ];\n    }\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction find(p, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      var x = param[0];\n      if (Curry._1(p, x)) {\n        return x;\n      } else {\n        _param = param[1];\n        continue ;\n        \n      }\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  };\n}\n\nfunction find_all(p) {\n  return (function (param) {\n      var _accu = /* [] */0;\n      var _param = param;\n      while(true) {\n        var param$1 = _param;\n        var accu = _accu;\n        if (param$1) {\n          var l = param$1[1];\n          var x = param$1[0];\n          if (Curry._1(p, x)) {\n            _param = l;\n            _accu = /* :: */[\n              x,\n              accu\n            ];\n            continue ;\n            \n          } else {\n            _param = l;\n            continue ;\n            \n          }\n        } else {\n          return rev_append(accu, /* [] */0);\n        }\n      };\n    });\n}\n\nfunction partition(p, l) {\n  var _yes = /* [] */0;\n  var _no = /* [] */0;\n  var _param = l;\n  while(true) {\n    var param = _param;\n    var no = _no;\n    var yes = _yes;\n    if (param) {\n      var l$1 = param[1];\n      var x = param[0];\n      if (Curry._1(p, x)) {\n        _param = l$1;\n        _yes = /* :: */[\n          x,\n          yes\n        ];\n        continue ;\n        \n      } else {\n        _param = l$1;\n        _no = /* :: */[\n          x,\n          no\n        ];\n        continue ;\n        \n      }\n    } else {\n      return /* tuple */[\n              rev_append(yes, /* [] */0),\n              rev_append(no, /* [] */0)\n            ];\n    }\n  };\n}\n\nfunction split(param) {\n  if (param) {\n    var match = param[0];\n    var match$1 = split(param[1]);\n    return /* tuple */[\n            /* :: */[\n              match[0],\n              match$1[0]\n            ],\n            /* :: */[\n              match[1],\n              match$1[1]\n            ]\n          ];\n  } else {\n    return /* tuple */[\n            /* [] */0,\n            /* [] */0\n          ];\n  }\n}\n\nfunction combine(l1, l2) {\n  if (l1) {\n    if (l2) {\n      return /* :: */[\n              /* tuple */[\n                l1[0],\n                l2[0]\n              ],\n              combine(l1[1], l2[1])\n            ];\n    } else {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.combine\"\n          ];\n    }\n  } else if (l2) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"List.combine\"\n        ];\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction merge(cmp, l1, l2) {\n  if (l1) {\n    if (l2) {\n      var h2 = l2[0];\n      var h1 = l1[0];\n      if (Curry._2(cmp, h1, h2) <= 0) {\n        return /* :: */[\n                h1,\n                merge(cmp, l1[1], l2)\n              ];\n      } else {\n        return /* :: */[\n                h2,\n                merge(cmp, l1, l2[1])\n              ];\n      }\n    } else {\n      return l1;\n    }\n  } else {\n    return l2;\n  }\n}\n\nfunction chop(_k, _l) {\n  while(true) {\n    var l = _l;\n    var k = _k;\n    if (k === 0) {\n      return l;\n    } else if (l) {\n      _l = l[1];\n      _k = k - 1 | 0;\n      continue ;\n      \n    } else {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            [\n              \"list.ml\",\n              223,\n              11\n            ]\n          ];\n    }\n  };\n}\n\nfunction stable_sort(cmp, l) {\n  var sort = function (n, l) {\n    var exit = 0;\n    if (n !== 2) {\n      if (n !== 3 || !l) {\n        exit = 1;\n      } else {\n        var match = l[1];\n        if (match) {\n          var match$1 = match[1];\n          if (match$1) {\n            var x3 = match$1[0];\n            var x2 = match[0];\n            var x1 = l[0];\n            if (Curry._2(cmp, x1, x2) <= 0) {\n              if (Curry._2(cmp, x2, x3) <= 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else if (Curry._2(cmp, x1, x3) <= 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x3,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                return /* :: */[\n                        x3,\n                        /* :: */[\n                          x1,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              }\n            } else if (Curry._2(cmp, x1, x3) <= 0) {\n              return /* :: */[\n                      x2,\n                      /* :: */[\n                        x1,\n                        /* :: */[\n                          x3,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            } else if (Curry._2(cmp, x2, x3) <= 0) {\n              return /* :: */[\n                      x2,\n                      /* :: */[\n                        x3,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            } else {\n              return /* :: */[\n                      x3,\n                      /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            }\n          } else {\n            exit = 1;\n          }\n        } else {\n          exit = 1;\n        }\n      }\n    } else if (l) {\n      var match$2 = l[1];\n      if (match$2) {\n        var x2$1 = match$2[0];\n        var x1$1 = l[0];\n        if (Curry._2(cmp, x1$1, x2$1) <= 0) {\n          return /* :: */[\n                  x1$1,\n                  /* :: */[\n                    x2$1,\n                    /* [] */0\n                  ]\n                ];\n        } else {\n          return /* :: */[\n                  x2$1,\n                  /* :: */[\n                    x1$1,\n                    /* [] */0\n                  ]\n                ];\n        }\n      } else {\n        exit = 1;\n      }\n    } else {\n      exit = 1;\n    }\n    if (exit === 1) {\n      var n1 = (n >> 1);\n      var n2 = n - n1 | 0;\n      var l2 = chop(n1, l);\n      var s1 = rev_sort(n1, l);\n      var s2 = rev_sort(n2, l2);\n      var _l1 = s1;\n      var _l2 = s2;\n      var _accu = /* [] */0;\n      while(true) {\n        var accu = _accu;\n        var l2$1 = _l2;\n        var l1 = _l1;\n        if (l1) {\n          if (l2$1) {\n            var h2 = l2$1[0];\n            var h1 = l1[0];\n            if (Curry._2(cmp, h1, h2) > 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l1 = l1[1];\n              continue ;\n              \n            } else {\n              _accu = /* :: */[\n                h2,\n                accu\n              ];\n              _l2 = l2$1[1];\n              continue ;\n              \n            }\n          } else {\n            return rev_append(l1, accu);\n          }\n        } else {\n          return rev_append(l2$1, accu);\n        }\n      };\n    }\n    \n  };\n  var rev_sort = function (n, l) {\n    var exit = 0;\n    if (n !== 2) {\n      if (n !== 3 || !l) {\n        exit = 1;\n      } else {\n        var match = l[1];\n        if (match) {\n          var match$1 = match[1];\n          if (match$1) {\n            var x3 = match$1[0];\n            var x2 = match[0];\n            var x1 = l[0];\n            if (Curry._2(cmp, x1, x2) > 0) {\n              if (Curry._2(cmp, x2, x3) > 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else if (Curry._2(cmp, x1, x3) > 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x3,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                return /* :: */[\n                        x3,\n                        /* :: */[\n                          x1,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              }\n            } else if (Curry._2(cmp, x1, x3) > 0) {\n              return /* :: */[\n                      x2,\n                      /* :: */[\n                        x1,\n                        /* :: */[\n                          x3,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            } else if (Curry._2(cmp, x2, x3) > 0) {\n              return /* :: */[\n                      x2,\n                      /* :: */[\n                        x3,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            } else {\n              return /* :: */[\n                      x3,\n                      /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            }\n          } else {\n            exit = 1;\n          }\n        } else {\n          exit = 1;\n        }\n      }\n    } else if (l) {\n      var match$2 = l[1];\n      if (match$2) {\n        var x2$1 = match$2[0];\n        var x1$1 = l[0];\n        if (Curry._2(cmp, x1$1, x2$1) > 0) {\n          return /* :: */[\n                  x1$1,\n                  /* :: */[\n                    x2$1,\n                    /* [] */0\n                  ]\n                ];\n        } else {\n          return /* :: */[\n                  x2$1,\n                  /* :: */[\n                    x1$1,\n                    /* [] */0\n                  ]\n                ];\n        }\n      } else {\n        exit = 1;\n      }\n    } else {\n      exit = 1;\n    }\n    if (exit === 1) {\n      var n1 = (n >> 1);\n      var n2 = n - n1 | 0;\n      var l2 = chop(n1, l);\n      var s1 = sort(n1, l);\n      var s2 = sort(n2, l2);\n      var _l1 = s1;\n      var _l2 = s2;\n      var _accu = /* [] */0;\n      while(true) {\n        var accu = _accu;\n        var l2$1 = _l2;\n        var l1 = _l1;\n        if (l1) {\n          if (l2$1) {\n            var h2 = l2$1[0];\n            var h1 = l1[0];\n            if (Curry._2(cmp, h1, h2) <= 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l1 = l1[1];\n              continue ;\n              \n            } else {\n              _accu = /* :: */[\n                h2,\n                accu\n              ];\n              _l2 = l2$1[1];\n              continue ;\n              \n            }\n          } else {\n            return rev_append(l1, accu);\n          }\n        } else {\n          return rev_append(l2$1, accu);\n        }\n      };\n    }\n    \n  };\n  var len = length(l);\n  if (len < 2) {\n    return l;\n  } else {\n    return sort(len, l);\n  }\n}\n\nfunction sort_uniq(cmp, l) {\n  var sort = function (n, l) {\n    var exit = 0;\n    if (n !== 2) {\n      if (n !== 3 || !l) {\n        exit = 1;\n      } else {\n        var match = l[1];\n        if (match) {\n          var match$1 = match[1];\n          if (match$1) {\n            var x3 = match$1[0];\n            var x2 = match[0];\n            var x1 = l[0];\n            var c = Curry._2(cmp, x1, x2);\n            if (c === 0) {\n              var c$1 = Curry._2(cmp, x2, x3);\n              if (c$1 === 0) {\n                return /* :: */[\n                        x2,\n                        /* [] */0\n                      ];\n              } else if (c$1 < 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x3,\n                          /* [] */0\n                        ]\n                      ];\n              } else {\n                return /* :: */[\n                        x3,\n                        /* :: */[\n                          x2,\n                          /* [] */0\n                        ]\n                      ];\n              }\n            } else if (c < 0) {\n              var c$2 = Curry._2(cmp, x2, x3);\n              if (c$2 === 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* [] */0\n                        ]\n                      ];\n              } else if (c$2 < 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                var c$3 = Curry._2(cmp, x1, x3);\n                if (c$3 === 0) {\n                  return /* :: */[\n                          x1,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ];\n                } else if (c$3 < 0) {\n                  return /* :: */[\n                          x1,\n                          /* :: */[\n                            x3,\n                            /* :: */[\n                              x2,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                } else {\n                  return /* :: */[\n                          x3,\n                          /* :: */[\n                            x1,\n                            /* :: */[\n                              x2,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                }\n              }\n            } else {\n              var c$4 = Curry._2(cmp, x1, x3);\n              if (c$4 === 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ];\n              } else if (c$4 < 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                var c$5 = Curry._2(cmp, x2, x3);\n                if (c$5 === 0) {\n                  return /* :: */[\n                          x2,\n                          /* :: */[\n                            x1,\n                            /* [] */0\n                          ]\n                        ];\n                } else if (c$5 < 0) {\n                  return /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* :: */[\n                              x1,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                } else {\n                  return /* :: */[\n                          x3,\n                          /* :: */[\n                            x2,\n                            /* :: */[\n                              x1,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                }\n              }\n            }\n          } else {\n            exit = 1;\n          }\n        } else {\n          exit = 1;\n        }\n      }\n    } else if (l) {\n      var match$2 = l[1];\n      if (match$2) {\n        var x2$1 = match$2[0];\n        var x1$1 = l[0];\n        var c$6 = Curry._2(cmp, x1$1, x2$1);\n        if (c$6 === 0) {\n          return /* :: */[\n                  x1$1,\n                  /* [] */0\n                ];\n        } else if (c$6 < 0) {\n          return /* :: */[\n                  x1$1,\n                  /* :: */[\n                    x2$1,\n                    /* [] */0\n                  ]\n                ];\n        } else {\n          return /* :: */[\n                  x2$1,\n                  /* :: */[\n                    x1$1,\n                    /* [] */0\n                  ]\n                ];\n        }\n      } else {\n        exit = 1;\n      }\n    } else {\n      exit = 1;\n    }\n    if (exit === 1) {\n      var n1 = (n >> 1);\n      var n2 = n - n1 | 0;\n      var l2 = chop(n1, l);\n      var s1 = rev_sort(n1, l);\n      var s2 = rev_sort(n2, l2);\n      var _l1 = s1;\n      var _l2 = s2;\n      var _accu = /* [] */0;\n      while(true) {\n        var accu = _accu;\n        var l2$1 = _l2;\n        var l1 = _l1;\n        if (l1) {\n          if (l2$1) {\n            var t2 = l2$1[1];\n            var h2 = l2$1[0];\n            var t1 = l1[1];\n            var h1 = l1[0];\n            var c$7 = Curry._2(cmp, h1, h2);\n            if (c$7 === 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l2 = t2;\n              _l1 = t1;\n              continue ;\n              \n            } else if (c$7 > 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l1 = t1;\n              continue ;\n              \n            } else {\n              _accu = /* :: */[\n                h2,\n                accu\n              ];\n              _l2 = t2;\n              continue ;\n              \n            }\n          } else {\n            return rev_append(l1, accu);\n          }\n        } else {\n          return rev_append(l2$1, accu);\n        }\n      };\n    }\n    \n  };\n  var rev_sort = function (n, l) {\n    var exit = 0;\n    if (n !== 2) {\n      if (n !== 3 || !l) {\n        exit = 1;\n      } else {\n        var match = l[1];\n        if (match) {\n          var match$1 = match[1];\n          if (match$1) {\n            var x3 = match$1[0];\n            var x2 = match[0];\n            var x1 = l[0];\n            var c = Curry._2(cmp, x1, x2);\n            if (c === 0) {\n              var c$1 = Curry._2(cmp, x2, x3);\n              if (c$1 === 0) {\n                return /* :: */[\n                        x2,\n                        /* [] */0\n                      ];\n              } else if (c$1 > 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x3,\n                          /* [] */0\n                        ]\n                      ];\n              } else {\n                return /* :: */[\n                        x3,\n                        /* :: */[\n                          x2,\n                          /* [] */0\n                        ]\n                      ];\n              }\n            } else if (c > 0) {\n              var c$2 = Curry._2(cmp, x2, x3);\n              if (c$2 === 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* [] */0\n                        ]\n                      ];\n              } else if (c$2 > 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                var c$3 = Curry._2(cmp, x1, x3);\n                if (c$3 === 0) {\n                  return /* :: */[\n                          x1,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ];\n                } else if (c$3 > 0) {\n                  return /* :: */[\n                          x1,\n                          /* :: */[\n                            x3,\n                            /* :: */[\n                              x2,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                } else {\n                  return /* :: */[\n                          x3,\n                          /* :: */[\n                            x1,\n                            /* :: */[\n                              x2,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                }\n              }\n            } else {\n              var c$4 = Curry._2(cmp, x1, x3);\n              if (c$4 === 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ];\n              } else if (c$4 > 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                var c$5 = Curry._2(cmp, x2, x3);\n                if (c$5 === 0) {\n                  return /* :: */[\n                          x2,\n                          /* :: */[\n                            x1,\n                            /* [] */0\n                          ]\n                        ];\n                } else if (c$5 > 0) {\n                  return /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* :: */[\n                              x1,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                } else {\n                  return /* :: */[\n                          x3,\n                          /* :: */[\n                            x2,\n                            /* :: */[\n                              x1,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                }\n              }\n            }\n          } else {\n            exit = 1;\n          }\n        } else {\n          exit = 1;\n        }\n      }\n    } else if (l) {\n      var match$2 = l[1];\n      if (match$2) {\n        var x2$1 = match$2[0];\n        var x1$1 = l[0];\n        var c$6 = Curry._2(cmp, x1$1, x2$1);\n        if (c$6 === 0) {\n          return /* :: */[\n                  x1$1,\n                  /* [] */0\n                ];\n        } else if (c$6 > 0) {\n          return /* :: */[\n                  x1$1,\n                  /* :: */[\n                    x2$1,\n                    /* [] */0\n                  ]\n                ];\n        } else {\n          return /* :: */[\n                  x2$1,\n                  /* :: */[\n                    x1$1,\n                    /* [] */0\n                  ]\n                ];\n        }\n      } else {\n        exit = 1;\n      }\n    } else {\n      exit = 1;\n    }\n    if (exit === 1) {\n      var n1 = (n >> 1);\n      var n2 = n - n1 | 0;\n      var l2 = chop(n1, l);\n      var s1 = sort(n1, l);\n      var s2 = sort(n2, l2);\n      var _l1 = s1;\n      var _l2 = s2;\n      var _accu = /* [] */0;\n      while(true) {\n        var accu = _accu;\n        var l2$1 = _l2;\n        var l1 = _l1;\n        if (l1) {\n          if (l2$1) {\n            var t2 = l2$1[1];\n            var h2 = l2$1[0];\n            var t1 = l1[1];\n            var h1 = l1[0];\n            var c$7 = Curry._2(cmp, h1, h2);\n            if (c$7 === 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l2 = t2;\n              _l1 = t1;\n              continue ;\n              \n            } else if (c$7 < 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l1 = t1;\n              continue ;\n              \n            } else {\n              _accu = /* :: */[\n                h2,\n                accu\n              ];\n              _l2 = t2;\n              continue ;\n              \n            }\n          } else {\n            return rev_append(l1, accu);\n          }\n        } else {\n          return rev_append(l2$1, accu);\n        }\n      };\n    }\n    \n  };\n  var len = length(l);\n  if (len < 2) {\n    return l;\n  } else {\n    return sort(len, l);\n  }\n}\n\nvar append = Pervasives.$at;\n\nvar concat = flatten;\n\nvar filter = find_all;\n\nvar sort = stable_sort;\n\nvar fast_sort = stable_sort;\n\nexports.length = length;\nexports.hd = hd;\nexports.tl = tl;\nexports.nth = nth;\nexports.rev = rev;\nexports.append = append;\nexports.rev_append = rev_append;\nexports.concat = concat;\nexports.flatten = flatten;\nexports.iter = iter;\nexports.iteri = iteri;\nexports.map = map;\nexports.mapi = mapi$1;\nexports.rev_map = rev_map;\nexports.fold_left = fold_left;\nexports.fold_right = fold_right;\nexports.iter2 = iter2;\nexports.map2 = map2;\nexports.rev_map2 = rev_map2;\nexports.fold_left2 = fold_left2;\nexports.fold_right2 = fold_right2;\nexports.for_all = for_all;\nexports.exists = exists;\nexports.for_all2 = for_all2;\nexports.exists2 = exists2;\nexports.mem = mem;\nexports.memq = memq;\nexports.find = find;\nexports.filter = filter;\nexports.find_all = find_all;\nexports.partition = partition;\nexports.assoc = assoc;\nexports.assq = assq;\nexports.mem_assoc = mem_assoc;\nexports.mem_assq = mem_assq;\nexports.remove_assoc = remove_assoc;\nexports.remove_assq = remove_assq;\nexports.split = split;\nexports.combine = combine;\nexports.sort = sort;\nexports.stable_sort = stable_sort;\nexports.fast_sort = fast_sort;\nexports.sort_uniq = sort_uniq;\nexports.merge = merge;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/list.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/pervasives.js":
/*!*******************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/pervasives.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Curry = __webpack_require__(/*! ./curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Caml_io = __webpack_require__(/*! ./caml_io.js */ \"./node_modules/bs-platform/lib/js/caml_io.js\");\nvar Caml_sys = __webpack_require__(/*! ./caml_sys.js */ \"./node_modules/bs-platform/lib/js/caml_sys.js\");\nvar Caml_format = __webpack_require__(/*! ./caml_format.js */ \"./node_modules/bs-platform/lib/js/caml_format.js\");\nvar Caml_string = __webpack_require__(/*! ./caml_string.js */ \"./node_modules/bs-platform/lib/js/caml_string.js\");\nvar Caml_exceptions = __webpack_require__(/*! ./caml_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_exceptions.js\");\nvar Caml_missing_polyfill = __webpack_require__(/*! ./caml_missing_polyfill.js */ \"./node_modules/bs-platform/lib/js/caml_missing_polyfill.js\");\nvar Caml_builtin_exceptions = __webpack_require__(/*! ./caml_builtin_exceptions.js */ \"./node_modules/bs-platform/lib/js/caml_builtin_exceptions.js\");\nvar CamlinternalFormatBasics = __webpack_require__(/*! ./camlinternalFormatBasics.js */ \"./node_modules/bs-platform/lib/js/camlinternalFormatBasics.js\");\n\nfunction failwith(s) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        s\n      ];\n}\n\nfunction invalid_arg(s) {\n  throw [\n        Caml_builtin_exceptions.invalid_argument,\n        s\n      ];\n}\n\nvar Exit = Caml_exceptions.create(\"Pervasives.Exit\");\n\nfunction abs(x) {\n  if (x >= 0) {\n    return x;\n  } else {\n    return -x | 0;\n  }\n}\n\nfunction lnot(x) {\n  return x ^ -1;\n}\n\nvar min_int = -2147483648;\n\nfunction char_of_int(n) {\n  if (n < 0 || n > 255) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"char_of_int\"\n        ];\n  } else {\n    return n;\n  }\n}\n\nfunction string_of_bool(b) {\n  if (b) {\n    return \"true\";\n  } else {\n    return \"false\";\n  }\n}\n\nfunction bool_of_string(param) {\n  switch (param) {\n    case \"false\" : \n        return /* false */0;\n    case \"true\" : \n        return /* true */1;\n    default:\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"bool_of_string\"\n          ];\n  }\n}\n\nfunction valid_float_lexem(s) {\n  var l = s.length;\n  var _i = 0;\n  while(true) {\n    var i = _i;\n    if (i >= l) {\n      return s + \".\";\n    } else {\n      var match = Caml_string.get(s, i);\n      if (match >= 48) {\n        if (match >= 58) {\n          return s;\n        } else {\n          _i = i + 1 | 0;\n          continue ;\n          \n        }\n      } else if (match !== 45) {\n        return s;\n      } else {\n        _i = i + 1 | 0;\n        continue ;\n        \n      }\n    }\n  };\n}\n\nfunction string_of_float(f) {\n  return valid_float_lexem(Caml_format.caml_format_float(\"%.12g\", f));\n}\n\nfunction $at(l1, l2) {\n  if (l1) {\n    return /* :: */[\n            l1[0],\n            $at(l1[1], l2)\n          ];\n  } else {\n    return l2;\n  }\n}\n\nvar stdin = Caml_io.stdin;\n\nvar stdout = Caml_io.stdout;\n\nvar stderr = Caml_io.stderr;\n\nfunction open_out_gen(_, _$1, _$2) {\n  return Caml_io.caml_ml_open_descriptor_out(Caml_missing_polyfill.not_implemented(\"caml_sys_open not implemented by bucklescript yet\\n\"));\n}\n\nfunction open_out(name) {\n  return open_out_gen(/* :: */[\n              /* Open_wronly */1,\n              /* :: */[\n                /* Open_creat */3,\n                /* :: */[\n                  /* Open_trunc */4,\n                  /* :: */[\n                    /* Open_text */7,\n                    /* [] */0\n                  ]\n                ]\n              ]\n            ], 438, name);\n}\n\nfunction open_out_bin(name) {\n  return open_out_gen(/* :: */[\n              /* Open_wronly */1,\n              /* :: */[\n                /* Open_creat */3,\n                /* :: */[\n                  /* Open_trunc */4,\n                  /* :: */[\n                    /* Open_binary */6,\n                    /* [] */0\n                  ]\n                ]\n              ]\n            ], 438, name);\n}\n\nfunction flush_all() {\n  var _param = Caml_io.caml_ml_out_channels_list(/* () */0);\n  while(true) {\n    var param = _param;\n    if (param) {\n      try {\n        Caml_io.caml_ml_flush(param[0]);\n      }\n      catch (exn){\n        \n      }\n      _param = param[1];\n      continue ;\n      \n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction output_bytes(oc, s) {\n  return Caml_io.caml_ml_output(oc, s, 0, s.length);\n}\n\nfunction output_string(oc, s) {\n  return Caml_io.caml_ml_output(oc, s, 0, s.length);\n}\n\nfunction output(oc, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"output\"\n        ];\n  } else {\n    return Caml_io.caml_ml_output(oc, s, ofs, len);\n  }\n}\n\nfunction output_substring(oc, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"output_substring\"\n        ];\n  } else {\n    return Caml_io.caml_ml_output(oc, s, ofs, len);\n  }\n}\n\nfunction output_value(_, _$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_output_value not implemented by bucklescript yet\\n\");\n}\n\nfunction close_out(oc) {\n  Caml_io.caml_ml_flush(oc);\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel not implemented by bucklescript yet\\n\");\n}\n\nfunction close_out_noerr(oc) {\n  try {\n    Caml_io.caml_ml_flush(oc);\n  }\n  catch (exn){\n    \n  }\n  try {\n    return Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel not implemented by bucklescript yet\\n\");\n  }\n  catch (exn$1){\n    return /* () */0;\n  }\n}\n\nfunction open_in_gen(_, _$1, _$2) {\n  return Caml_io.caml_ml_open_descriptor_in(Caml_missing_polyfill.not_implemented(\"caml_sys_open not implemented by bucklescript yet\\n\"));\n}\n\nfunction open_in(name) {\n  return open_in_gen(/* :: */[\n              /* Open_rdonly */0,\n              /* :: */[\n                /* Open_text */7,\n                /* [] */0\n              ]\n            ], 0, name);\n}\n\nfunction open_in_bin(name) {\n  return open_in_gen(/* :: */[\n              /* Open_rdonly */0,\n              /* :: */[\n                /* Open_binary */6,\n                /* [] */0\n              ]\n            ], 0, name);\n}\n\nfunction input(_, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"input\"\n        ];\n  } else {\n    return Caml_missing_polyfill.not_implemented(\"caml_ml_input not implemented by bucklescript yet\\n\");\n  }\n}\n\nfunction unsafe_really_input(_, _$1, _ofs, _len) {\n  while(true) {\n    var len = _len;\n    var ofs = _ofs;\n    if (len <= 0) {\n      return /* () */0;\n    } else {\n      var r = Caml_missing_polyfill.not_implemented(\"caml_ml_input not implemented by bucklescript yet\\n\");\n      if (r === 0) {\n        throw Caml_builtin_exceptions.end_of_file;\n      } else {\n        _len = len - r | 0;\n        _ofs = ofs + r | 0;\n        continue ;\n        \n      }\n    }\n  };\n}\n\nfunction really_input(ic, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"really_input\"\n        ];\n  } else {\n    return unsafe_really_input(ic, s, ofs, len);\n  }\n}\n\nfunction really_input_string(ic, len) {\n  var s = Caml_string.caml_create_string(len);\n  really_input(ic, s, 0, len);\n  return Caml_string.bytes_to_string(s);\n}\n\nfunction input_line(chan) {\n  var build_result = function (buf, _pos, _param) {\n    while(true) {\n      var param = _param;\n      var pos = _pos;\n      if (param) {\n        var hd = param[0];\n        var len = hd.length;\n        Caml_string.caml_blit_bytes(hd, 0, buf, pos - len | 0, len);\n        _param = param[1];\n        _pos = pos - len | 0;\n        continue ;\n        \n      } else {\n        return buf;\n      }\n    };\n  };\n  var scan = function (_accu, _len) {\n    while(true) {\n      var len = _len;\n      var accu = _accu;\n      var n = Caml_missing_polyfill.not_implemented(\"caml_ml_input_scan_line not implemented by bucklescript yet\\n\");\n      if (n === 0) {\n        if (accu) {\n          return build_result(Caml_string.caml_create_string(len), len, accu);\n        } else {\n          throw Caml_builtin_exceptions.end_of_file;\n        }\n      } else if (n > 0) {\n        var res = Caml_string.caml_create_string(n - 1 | 0);\n        Caml_missing_polyfill.not_implemented(\"caml_ml_input not implemented by bucklescript yet\\n\");\n        Caml_io.caml_ml_input_char(chan);\n        if (accu) {\n          var len$1 = (len + n | 0) - 1 | 0;\n          return build_result(Caml_string.caml_create_string(len$1), len$1, /* :: */[\n                      res,\n                      accu\n                    ]);\n        } else {\n          return res;\n        }\n      } else {\n        var beg = Caml_string.caml_create_string(-n | 0);\n        Caml_missing_polyfill.not_implemented(\"caml_ml_input not implemented by bucklescript yet\\n\");\n        _len = len - n | 0;\n        _accu = /* :: */[\n          beg,\n          accu\n        ];\n        continue ;\n        \n      }\n    };\n  };\n  return Caml_string.bytes_to_string(scan(/* [] */0, 0));\n}\n\nfunction close_in_noerr() {\n  try {\n    return Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel not implemented by bucklescript yet\\n\");\n  }\n  catch (exn){\n    return /* () */0;\n  }\n}\n\nfunction print_char(c) {\n  return Caml_io.caml_ml_output_char(stdout, c);\n}\n\nfunction print_string(s) {\n  return output_string(stdout, s);\n}\n\nfunction print_bytes(s) {\n  return output_bytes(stdout, s);\n}\n\nfunction print_int(i) {\n  return output_string(stdout, String(i));\n}\n\nfunction print_float(f) {\n  return output_string(stdout, valid_float_lexem(Caml_format.caml_format_float(\"%.12g\", f)));\n}\n\nfunction print_newline() {\n  Caml_io.caml_ml_output_char(stdout, /* \"\\n\" */10);\n  return Caml_io.caml_ml_flush(stdout);\n}\n\nfunction prerr_char(c) {\n  return Caml_io.caml_ml_output_char(stderr, c);\n}\n\nfunction prerr_string(s) {\n  return output_string(stderr, s);\n}\n\nfunction prerr_bytes(s) {\n  return output_bytes(stderr, s);\n}\n\nfunction prerr_int(i) {\n  return output_string(stderr, String(i));\n}\n\nfunction prerr_float(f) {\n  return output_string(stderr, valid_float_lexem(Caml_format.caml_format_float(\"%.12g\", f)));\n}\n\nfunction prerr_newline() {\n  Caml_io.caml_ml_output_char(stderr, /* \"\\n\" */10);\n  return Caml_io.caml_ml_flush(stderr);\n}\n\nfunction read_line() {\n  Caml_io.caml_ml_flush(stdout);\n  return input_line(stdin);\n}\n\nfunction read_int() {\n  return Caml_format.caml_int_of_string((Caml_io.caml_ml_flush(stdout), input_line(stdin)));\n}\n\nfunction read_float() {\n  return Caml_format.caml_float_of_string((Caml_io.caml_ml_flush(stdout), input_line(stdin)));\n}\n\nfunction string_of_format(param) {\n  return param[1];\n}\n\nfunction $caret$caret(param, param$1) {\n  return /* Format */[\n          CamlinternalFormatBasics.concat_fmt(param[0], param$1[0]),\n          param[1] + (\"%,\" + param$1[1])\n        ];\n}\n\nvar exit_function = [flush_all];\n\nfunction at_exit(f) {\n  var g = exit_function[0];\n  exit_function[0] = (function () {\n      Curry._1(f, /* () */0);\n      return Curry._1(g, /* () */0);\n    });\n  return /* () */0;\n}\n\nfunction do_at_exit() {\n  return Curry._1(exit_function[0], /* () */0);\n}\n\nfunction exit(retcode) {\n  do_at_exit(/* () */0);\n  return Caml_sys.caml_sys_exit(retcode);\n}\n\nvar max_int = 2147483647;\n\nvar epsilon_float = 2.220446049250313e-16;\n\nvar flush = Caml_io.caml_ml_flush;\n\nvar output_char = Caml_io.caml_ml_output_char;\n\nvar output_byte = Caml_io.caml_ml_output_char;\n\nfunction output_binary_int(_, _$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_output_int not implemented by bucklescript yet\\n\");\n}\n\nfunction seek_out(_, _$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_seek_out not implemented by bucklescript yet\\n\");\n}\n\nfunction pos_out() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_pos_out not implemented by bucklescript yet\\n\");\n}\n\nfunction out_channel_length() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_channel_size not implemented by bucklescript yet\\n\");\n}\n\nfunction set_binary_mode_out(_, _$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_set_binary_mode not implemented by bucklescript yet\\n\");\n}\n\nvar input_char = Caml_io.caml_ml_input_char;\n\nvar input_byte = Caml_io.caml_ml_input_char;\n\nfunction input_binary_int() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_input_int not implemented by bucklescript yet\\n\");\n}\n\nfunction input_value() {\n  return Caml_missing_polyfill.not_implemented(\"caml_input_value not implemented by bucklescript yet\\n\");\n}\n\nfunction seek_in(_, _$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_seek_in not implemented by bucklescript yet\\n\");\n}\n\nfunction pos_in() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_pos_in not implemented by bucklescript yet\\n\");\n}\n\nfunction in_channel_length() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_channel_size not implemented by bucklescript yet\\n\");\n}\n\nfunction close_in() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel not implemented by bucklescript yet\\n\");\n}\n\nfunction set_binary_mode_in(_, _$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_set_binary_mode not implemented by bucklescript yet\\n\");\n}\n\nfunction LargeFile_000(_, _$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_seek_out_64 not implemented by bucklescript yet\\n\");\n}\n\nfunction LargeFile_001() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_pos_out_64 not implemented by bucklescript yet\\n\");\n}\n\nfunction LargeFile_002() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_channel_size_64 not implemented by bucklescript yet\\n\");\n}\n\nfunction LargeFile_003(_, _$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_seek_in_64 not implemented by bucklescript yet\\n\");\n}\n\nfunction LargeFile_004() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_pos_in_64 not implemented by bucklescript yet\\n\");\n}\n\nfunction LargeFile_005() {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_channel_size_64 not implemented by bucklescript yet\\n\");\n}\n\nvar LargeFile = [\n  LargeFile_000,\n  LargeFile_001,\n  LargeFile_002,\n  LargeFile_003,\n  LargeFile_004,\n  LargeFile_005\n];\n\nexports.invalid_arg = invalid_arg;\nexports.failwith = failwith;\nexports.Exit = Exit;\nexports.abs = abs;\nexports.max_int = max_int;\nexports.min_int = min_int;\nexports.lnot = lnot;\nexports.epsilon_float = epsilon_float;\nexports.char_of_int = char_of_int;\nexports.string_of_bool = string_of_bool;\nexports.bool_of_string = bool_of_string;\nexports.string_of_float = string_of_float;\nexports.$at = $at;\nexports.stdin = stdin;\nexports.stdout = stdout;\nexports.stderr = stderr;\nexports.print_char = print_char;\nexports.print_string = print_string;\nexports.print_bytes = print_bytes;\nexports.print_int = print_int;\nexports.print_float = print_float;\nexports.print_newline = print_newline;\nexports.prerr_char = prerr_char;\nexports.prerr_string = prerr_string;\nexports.prerr_bytes = prerr_bytes;\nexports.prerr_int = prerr_int;\nexports.prerr_float = prerr_float;\nexports.prerr_newline = prerr_newline;\nexports.read_line = read_line;\nexports.read_int = read_int;\nexports.read_float = read_float;\nexports.open_out = open_out;\nexports.open_out_bin = open_out_bin;\nexports.open_out_gen = open_out_gen;\nexports.flush = flush;\nexports.flush_all = flush_all;\nexports.output_char = output_char;\nexports.output_string = output_string;\nexports.output_bytes = output_bytes;\nexports.output = output;\nexports.output_substring = output_substring;\nexports.output_byte = output_byte;\nexports.output_binary_int = output_binary_int;\nexports.output_value = output_value;\nexports.seek_out = seek_out;\nexports.pos_out = pos_out;\nexports.out_channel_length = out_channel_length;\nexports.close_out = close_out;\nexports.close_out_noerr = close_out_noerr;\nexports.set_binary_mode_out = set_binary_mode_out;\nexports.open_in = open_in;\nexports.open_in_bin = open_in_bin;\nexports.open_in_gen = open_in_gen;\nexports.input_char = input_char;\nexports.input_line = input_line;\nexports.input = input;\nexports.really_input = really_input;\nexports.really_input_string = really_input_string;\nexports.input_byte = input_byte;\nexports.input_binary_int = input_binary_int;\nexports.input_value = input_value;\nexports.seek_in = seek_in;\nexports.pos_in = pos_in;\nexports.in_channel_length = in_channel_length;\nexports.close_in = close_in;\nexports.close_in_noerr = close_in_noerr;\nexports.set_binary_mode_in = set_binary_mode_in;\nexports.LargeFile = LargeFile;\nexports.string_of_format = string_of_format;\nexports.$caret$caret = $caret$caret;\nexports.exit = exit;\nexports.at_exit = at_exit;\nexports.valid_float_lexem = valid_float_lexem;\nexports.unsafe_really_input = unsafe_really_input;\nexports.do_at_exit = do_at_exit;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/pervasives.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/printf.js":
/*!***************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/printf.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Curry = __webpack_require__(/*! ./curry.js */ \"./node_modules/bs-platform/lib/js/curry.js\");\nvar Buffer = __webpack_require__(/*! ./buffer.js */ \"./node_modules/bs-platform/lib/js/buffer.js\");\nvar Pervasives = __webpack_require__(/*! ./pervasives.js */ \"./node_modules/bs-platform/lib/js/pervasives.js\");\nvar CamlinternalFormat = __webpack_require__(/*! ./camlinternalFormat.js */ \"./node_modules/bs-platform/lib/js/camlinternalFormat.js\");\n\nfunction kfprintf(k, o, param) {\n  return CamlinternalFormat.make_printf((function (o, acc) {\n                CamlinternalFormat.output_acc(o, acc);\n                return Curry._1(k, o);\n              }), o, /* End_of_acc */0, param[0]);\n}\n\nfunction kbprintf(k, b, param) {\n  return CamlinternalFormat.make_printf((function (b, acc) {\n                CamlinternalFormat.bufput_acc(b, acc);\n                return Curry._1(k, b);\n              }), b, /* End_of_acc */0, param[0]);\n}\n\nfunction ikfprintf(k, oc, param) {\n  return CamlinternalFormat.make_printf((function (oc, _) {\n                return Curry._1(k, oc);\n              }), oc, /* End_of_acc */0, param[0]);\n}\n\nfunction fprintf(oc, fmt) {\n  return kfprintf((function () {\n                return /* () */0;\n              }), oc, fmt);\n}\n\nfunction bprintf(b, fmt) {\n  return kbprintf((function () {\n                return /* () */0;\n              }), b, fmt);\n}\n\nfunction ifprintf(oc, fmt) {\n  return ikfprintf((function () {\n                return /* () */0;\n              }), oc, fmt);\n}\n\nfunction printf(fmt) {\n  return fprintf(Pervasives.stdout, fmt);\n}\n\nfunction eprintf(fmt) {\n  return fprintf(Pervasives.stderr, fmt);\n}\n\nfunction ksprintf(k, param) {\n  var k$prime = function (_, acc) {\n    var buf = Buffer.create(64);\n    CamlinternalFormat.strput_acc(buf, acc);\n    return Curry._1(k, Buffer.contents(buf));\n  };\n  return CamlinternalFormat.make_printf(k$prime, /* () */0, /* End_of_acc */0, param[0]);\n}\n\nfunction sprintf(fmt) {\n  return ksprintf((function (s) {\n                return s;\n              }), fmt);\n}\n\nvar kprintf = ksprintf;\n\nexports.fprintf = fprintf;\nexports.printf = printf;\nexports.eprintf = eprintf;\nexports.sprintf = sprintf;\nexports.bprintf = bprintf;\nexports.ifprintf = ifprintf;\nexports.kfprintf = kfprintf;\nexports.ikfprintf = ikfprintf;\nexports.ksprintf = ksprintf;\nexports.kbprintf = kbprintf;\nexports.kprintf = kprintf;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/printf.js?");

/***/ }),

/***/ "./node_modules/bs-platform/lib/js/string.js":
/*!***************************************************!*\
  !*** ./node_modules/bs-platform/lib/js/string.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar List = __webpack_require__(/*! ./list.js */ \"./node_modules/bs-platform/lib/js/list.js\");\nvar Bytes = __webpack_require__(/*! ./bytes.js */ \"./node_modules/bs-platform/lib/js/bytes.js\");\nvar Caml_int32 = __webpack_require__(/*! ./caml_int32.js */ \"./node_modules/bs-platform/lib/js/caml_int32.js\");\nvar Caml_string = __webpack_require__(/*! ./caml_string.js */ \"./node_modules/bs-platform/lib/js/caml_string.js\");\nvar Caml_primitive = __webpack_require__(/*! ./caml_primitive.js */ \"./node_modules/bs-platform/lib/js/caml_primitive.js\");\n\nfunction make(n, c) {\n  return Caml_string.bytes_to_string(Bytes.make(n, c));\n}\n\nfunction init(n, f) {\n  return Caml_string.bytes_to_string(Bytes.init(n, f));\n}\n\nfunction copy(s) {\n  return Caml_string.bytes_to_string(Bytes.copy(Caml_string.bytes_of_string(s)));\n}\n\nfunction sub(s, ofs, len) {\n  return Caml_string.bytes_to_string(Bytes.sub(Caml_string.bytes_of_string(s), ofs, len));\n}\n\nfunction concat(sep, l) {\n  if (l) {\n    var hd = l[0];\n    var num = [0];\n    var len = [0];\n    List.iter((function (s) {\n            num[0] = num[0] + 1 | 0;\n            len[0] = len[0] + s.length | 0;\n            return /* () */0;\n          }), l);\n    var r = Caml_string.caml_create_string(len[0] + Caml_int32.imul(sep.length, num[0] - 1 | 0) | 0);\n    Caml_string.caml_blit_string(hd, 0, r, 0, hd.length);\n    var pos = [hd.length];\n    List.iter((function (s) {\n            Caml_string.caml_blit_string(sep, 0, r, pos[0], sep.length);\n            pos[0] = pos[0] + sep.length | 0;\n            Caml_string.caml_blit_string(s, 0, r, pos[0], s.length);\n            pos[0] = pos[0] + s.length | 0;\n            return /* () */0;\n          }), l[1]);\n    return Caml_string.bytes_to_string(r);\n  } else {\n    return \"\";\n  }\n}\n\nfunction iter(f, s) {\n  return Bytes.iter(f, Caml_string.bytes_of_string(s));\n}\n\nfunction iteri(f, s) {\n  return Bytes.iteri(f, Caml_string.bytes_of_string(s));\n}\n\nfunction map(f, s) {\n  return Caml_string.bytes_to_string(Bytes.map(f, Caml_string.bytes_of_string(s)));\n}\n\nfunction mapi(f, s) {\n  return Caml_string.bytes_to_string(Bytes.mapi(f, Caml_string.bytes_of_string(s)));\n}\n\nfunction is_space(param) {\n  var switcher = param - 9 | 0;\n  if (switcher > 4 || switcher < 0) {\n    if (switcher !== 23) {\n      return /* false */0;\n    } else {\n      return /* true */1;\n    }\n  } else if (switcher !== 2) {\n    return /* true */1;\n  } else {\n    return /* false */0;\n  }\n}\n\nfunction trim(s) {\n  if (s === \"\" || !(is_space(s.charCodeAt(0)) || is_space(s.charCodeAt(s.length - 1 | 0)))) {\n    return s;\n  } else {\n    return Caml_string.bytes_to_string(Bytes.trim(Caml_string.bytes_of_string(s)));\n  }\n}\n\nfunction escaped(s) {\n  var needs_escape = function (_i) {\n    while(true) {\n      var i = _i;\n      if (i >= s.length) {\n        return /* false */0;\n      } else {\n        var match = s.charCodeAt(i);\n        if (match >= 32) {\n          var switcher = match - 34 | 0;\n          if (switcher > 58 || switcher < 0) {\n            if (switcher >= 93) {\n              return /* true */1;\n            } else {\n              _i = i + 1 | 0;\n              continue ;\n              \n            }\n          } else if (switcher > 57 || switcher < 1) {\n            return /* true */1;\n          } else {\n            _i = i + 1 | 0;\n            continue ;\n            \n          }\n        } else {\n          return /* true */1;\n        }\n      }\n    };\n  };\n  if (needs_escape(0)) {\n    return Caml_string.bytes_to_string(Bytes.escaped(Caml_string.bytes_of_string(s)));\n  } else {\n    return s;\n  }\n}\n\nfunction index(s, c) {\n  return Bytes.index(Caml_string.bytes_of_string(s), c);\n}\n\nfunction rindex(s, c) {\n  return Bytes.rindex(Caml_string.bytes_of_string(s), c);\n}\n\nfunction index_from(s, i, c) {\n  return Bytes.index_from(Caml_string.bytes_of_string(s), i, c);\n}\n\nfunction rindex_from(s, i, c) {\n  return Bytes.rindex_from(Caml_string.bytes_of_string(s), i, c);\n}\n\nfunction contains(s, c) {\n  return Bytes.contains(Caml_string.bytes_of_string(s), c);\n}\n\nfunction contains_from(s, i, c) {\n  return Bytes.contains_from(Caml_string.bytes_of_string(s), i, c);\n}\n\nfunction rcontains_from(s, i, c) {\n  return Bytes.rcontains_from(Caml_string.bytes_of_string(s), i, c);\n}\n\nfunction uppercase(s) {\n  return Caml_string.bytes_to_string(Bytes.uppercase(Caml_string.bytes_of_string(s)));\n}\n\nfunction lowercase(s) {\n  return Caml_string.bytes_to_string(Bytes.lowercase(Caml_string.bytes_of_string(s)));\n}\n\nfunction capitalize(s) {\n  return Caml_string.bytes_to_string(Bytes.capitalize(Caml_string.bytes_of_string(s)));\n}\n\nfunction uncapitalize(s) {\n  return Caml_string.bytes_to_string(Bytes.uncapitalize(Caml_string.bytes_of_string(s)));\n}\n\nvar compare = Caml_primitive.caml_string_compare;\n\nvar fill = Bytes.fill;\n\nvar blit = Bytes.blit_string;\n\nexports.make = make;\nexports.init = init;\nexports.copy = copy;\nexports.sub = sub;\nexports.fill = fill;\nexports.blit = blit;\nexports.concat = concat;\nexports.iter = iter;\nexports.iteri = iteri;\nexports.map = map;\nexports.mapi = mapi;\nexports.trim = trim;\nexports.escaped = escaped;\nexports.index = index;\nexports.rindex = rindex;\nexports.index_from = index_from;\nexports.rindex_from = rindex_from;\nexports.contains = contains;\nexports.contains_from = contains_from;\nexports.rcontains_from = rcontains_from;\nexports.uppercase = uppercase;\nexports.lowercase = lowercase;\nexports.capitalize = capitalize;\nexports.uncapitalize = uncapitalize;\nexports.compare = compare;\n/* No side effect */\n\n\n//# sourceURL=webpack:///./node_modules/bs-platform/lib/js/string.js?");

/***/ }),

/***/ "./node_modules/follow-redirects/index.js":
/*!************************************************!*\
  !*** ./node_modules/follow-redirects/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var url = __webpack_require__(/*! url */ \"url\");\nvar http = __webpack_require__(/*! http */ \"http\");\nvar https = __webpack_require__(/*! https */ \"https\");\nvar assert = __webpack_require__(/*! assert */ \"assert\");\nvar Writable = __webpack_require__(/*! stream */ \"stream\").Writable;\nvar debug = __webpack_require__(/*! debug */ \"./node_modules/follow-redirects/node_modules/debug/src/index.js\")(\"follow-redirects\");\n\n// RFC7231§4.2.1: Of the request methods defined by this specification,\n// the GET, HEAD, OPTIONS, and TRACE methods are defined to be safe.\nvar SAFE_METHODS = { GET: true, HEAD: true, OPTIONS: true, TRACE: true };\n\n// Create handlers that pass events from native requests\nvar eventHandlers = Object.create(null);\n[\"abort\", \"aborted\", \"error\", \"socket\", \"timeout\"].forEach(function (event) {\n  eventHandlers[event] = function (arg) {\n    this._redirectable.emit(event, arg);\n  };\n});\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  options.headers = options.headers || {};\n  this._options = options;\n  this._redirectCount = 0;\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    self._processResponse(response);\n  };\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  else {\n    this.emit(\"error\", new Error(\"Request body larger than maxBodyLength limit\"));\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  var currentRequest = this._currentRequest;\n  if (!data) {\n    currentRequest.end(null, null, callback);\n  }\n  else {\n    this.write(data, encoding, function () {\n      currentRequest.end(null, null, callback);\n    });\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"abort\", \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\", \"setTimeout\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.substr(0, protocol.length - 1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  this._currentUrl = url.format(this._options);\n\n  // Set up event handlers\n  request._redirectable = this;\n  for (var event in eventHandlers) {\n    /* istanbul ignore else */\n    if (event) {\n      request.on(event, eventHandlers[event]);\n    }\n  }\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end.\n    var requestBodyBuffers = this._requestBodyBuffers;\n    (function writeNext() {\n      if (requestBodyBuffers.length !== 0) {\n        var buffer = requestBodyBuffers.pop();\n        request.write(buffer.data, buffer.encoding, writeNext);\n      }\n      else {\n        request.end();\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n  var location = response.headers.location;\n  if (location && this._options.followRedirects !== false &&\n      response.statusCode >= 300 && response.statusCode < 400) {\n    // RFC7231§6.4: A client SHOULD detect and intervene\n    // in cyclical redirections (i.e., \"infinite\" redirection loops).\n    if (++this._redirectCount > this._options.maxRedirects) {\n      this.emit(\"error\", new Error(\"Max redirects exceeded.\"));\n      return;\n    }\n\n    // RFC7231§6.4: Automatic redirection needs to done with\n    // care for methods not known to be safe […],\n    // since the user might not wish to redirect an unsafe request.\n    // RFC7231§6.4.7: The 307 (Temporary Redirect) status code indicates\n    // that the target resource resides temporarily under a different URI\n    // and the user agent MUST NOT change the request method\n    // if it performs an automatic redirection to that URI.\n    var header;\n    var headers = this._options.headers;\n    if (response.statusCode !== 307 && !(this._options.method in SAFE_METHODS)) {\n      this._options.method = \"GET\";\n      // Drop a possible entity and headers related to it\n      this._requestBodyBuffers = [];\n      for (header in headers) {\n        if (/^content-/i.test(header)) {\n          delete headers[header];\n        }\n      }\n    }\n\n    // Drop the Host header, as the redirect might lead to a different host\n    if (!this._isRedirect) {\n      for (header in headers) {\n        if (/^host$/i.test(header)) {\n          delete headers[header];\n        }\n      }\n    }\n\n    // Perform the redirected request\n    var redirectUrl = url.resolve(this._currentUrl, location);\n    debug(\"redirecting to\", redirectUrl);\n    Object.assign(this._options, url.parse(redirectUrl));\n    this._isRedirect = true;\n    this._performRequest();\n  }\n  else {\n    // The response is not a redirect; return it as-is\n    response.responseUrl = this._currentUrl;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n  }\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    wrappedProtocol.request = function (options, callback) {\n      if (typeof options === \"string\") {\n        options = url.parse(options);\n        options.maxRedirects = exports.maxRedirects;\n      }\n      else {\n        options = Object.assign({\n          protocol: protocol,\n          maxRedirects: exports.maxRedirects,\n          maxBodyLength: exports.maxBodyLength,\n        }, options);\n      }\n      options.nativeProtocols = nativeProtocols;\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    };\n\n    // Executes a GET request, following redirects\n    wrappedProtocol.get = function (options, callback) {\n      var request = wrappedProtocol.request(options, callback);\n      request.end();\n      return request;\n    };\n  });\n  return exports;\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n\n\n//# sourceURL=webpack:///./node_modules/follow-redirects/index.js?");

/***/ }),

/***/ "./node_modules/follow-redirects/node_modules/debug/src/browser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/follow-redirects/node_modules/debug/src/browser.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(/*! ./debug */ \"./node_modules/follow-redirects/node_modules/debug/src/debug.js\");\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n//# sourceURL=webpack:///./node_modules/follow-redirects/node_modules/debug/src/browser.js?");

/***/ }),

/***/ "./node_modules/follow-redirects/node_modules/debug/src/debug.js":
/*!***********************************************************************!*\
  !*** ./node_modules/follow-redirects/node_modules/debug/src/debug.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(/*! ms */ \"./node_modules/ms/index.js\");\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n//# sourceURL=webpack:///./node_modules/follow-redirects/node_modules/debug/src/debug.js?");

/***/ }),

/***/ "./node_modules/follow-redirects/node_modules/debug/src/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/follow-redirects/node_modules/debug/src/index.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer') {\n  module.exports = __webpack_require__(/*! ./browser.js */ \"./node_modules/follow-redirects/node_modules/debug/src/browser.js\");\n} else {\n  module.exports = __webpack_require__(/*! ./node.js */ \"./node_modules/follow-redirects/node_modules/debug/src/node.js\");\n}\n\n\n//# sourceURL=webpack:///./node_modules/follow-redirects/node_modules/debug/src/index.js?");

/***/ }),

/***/ "./node_modules/follow-redirects/node_modules/debug/src/node.js":
/*!**********************************************************************!*\
  !*** ./node_modules/follow-redirects/node_modules/debug/src/node.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Module dependencies.\n */\n\nvar tty = __webpack_require__(/*! tty */ \"tty\");\nvar util = __webpack_require__(/*! util */ \"util\");\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(/*! ./debug */ \"./node_modules/follow-redirects/node_modules/debug/src/debug.js\");\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [ 6, 2, 3, 4, 5, 1 ];\n\ntry {\n  var supportsColor = __webpack_require__(/*! supports-color */ \"./node_modules/supports-color/index.js\");\n  if (supportsColor && supportsColor.level >= 2) {\n    exports.colors = [\n      20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68,\n      69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134,\n      135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,\n      172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204,\n      205, 206, 207, 208, 209, 214, 215, 220, 221\n    ];\n  }\n} catch (err) {\n  // swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(process.stderr.fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var colorCode = '\\u001b[3' + (c < 8 ? c : '8;5;' + c);\n    var prefix = '  ' + colorCode + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push(colorCode + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = getDate() + name + ' ' + args[0];\n  }\n}\n\nfunction getDate() {\n  if (exports.inspectOpts.hideDate) {\n    return '';\n  } else {\n    return new Date().toISOString() + ' ';\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log() {\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n\n\n//# sourceURL=webpack:///./node_modules/follow-redirects/node_modules/debug/src/node.js?");

/***/ }),

/***/ "./node_modules/has-flag/index.js":
/*!****************************************!*\
  !*** ./node_modules/has-flag/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n\n\n//# sourceURL=webpack:///./node_modules/has-flag/index.js?");

/***/ }),

/***/ "./node_modules/is-buffer/index.js":
/*!*****************************************!*\
  !*** ./node_modules/is-buffer/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n\n//# sourceURL=webpack:///./node_modules/is-buffer/index.js?");

/***/ }),

/***/ "./node_modules/ms/index.js":
/*!**********************************!*\
  !*** ./node_modules/ms/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n//# sourceURL=webpack:///./node_modules/ms/index.js?");

/***/ }),

/***/ "./node_modules/supports-color/index.js":
/*!**********************************************!*\
  !*** ./node_modules/supports-color/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nconst os = __webpack_require__(/*! os */ \"os\");\nconst hasFlag = __webpack_require__(/*! has-flag */ \"./node_modules/has-flag/index.js\");\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\t// VS code debugger doesn't have isTTY set\n\t\tif (env.VSCODE_PID) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n\n\n//# sourceURL=webpack:///./node_modules/supports-color/index.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! exports provided: fetch, parse, validate, enableCache, enableBatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fetch\", function() { return fetch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enableCache\", function() { return enableCache; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enableBatch\", function() { return enableBatch; });\n/* harmony import */ var _lib_js_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/js/parse */ \"./lib/js/parse.js\");\n/* harmony import */ var _lib_js_parse__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_lib_js_parse__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"parse\", function() { return _lib_js_parse__WEBPACK_IMPORTED_MODULE_0__[\"parse\"]; });\n\n/* harmony import */ var _lib_js_validate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/js/validate */ \"./lib/js/validate.js\");\n/* harmony import */ var _lib_js_validate__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_lib_js_validate__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"validate\", function() { return _lib_js_validate__WEBPACK_IMPORTED_MODULE_1__[\"validate\"]; });\n\n/* harmony import */ var _network_manager_src_main__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./network_manager/src/main */ \"./src/network_manager/src/main.js\");\n\n\n\n\nconst fetch = (endpoint, query, header) => {\n  Object(_lib_js_validate__WEBPACK_IMPORTED_MODULE_1__[\"validate\"])(query);\n  return _network_manager_src_main__WEBPACK_IMPORTED_MODULE_2__[\"get\"](endpoint, query, header);\n};\n\nconst { enableCache, enableBatch } = _network_manager_src_main__WEBPACK_IMPORTED_MODULE_2__;\n\n\n\n//# sourceURL=webpack:///./src/main.js?");

/***/ }),

/***/ "./src/network_manager/src/batch.js":
/*!******************************************!*\
  !*** ./src/network_manager/src/batch.js ***!
  \******************************************/
/*! exports provided: enableBatch, add, get, ENABLED, exists */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enableBatch\", function() { return enableBatch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add\", function() { return add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return get; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ENABLED\", function() { return ENABLED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"exists\", function() { return exists; });\n/* harmony import */ var _http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http */ \"./src/network_manager/src/http.js\");\n\r\n\r\nlet ENABLED = false;\r\n\r\nlet batchedQueries = {};\r\nlet batchedResponse = {};\r\n\r\nconst exists = (id) => {\r\n  return typeof batchedResponse[id] != 'undefined';\r\n}\r\n\r\nconst enableBatch = (bool) => {\r\n  if (bool === true) {\r\n    console.info(\"Batching enabled\");\r\n    ENABLED = true;\r\n  } else {\r\n    console.info(\"Batching disabled\");\r\n    ENABLED = false;\r\n  }\r\n}\r\n\r\nconst add = (endpoint, query, headers, id) => {\r\n  if (!ENABLED) {\r\n    console.error(\"Batching not enabled\");\r\n    return { success: false };\r\n  }\r\n  console.info(\"Adding query to batch\");\r\n  batchedQueries[id] = {\r\n    endpoint,\r\n    query,\r\n    headers\r\n  };\r\n  return { success: true };\r\n}\r\n\r\nconst get = (id) => {\r\n  if (typeof batchedResponse[id] == 'undefined') {\r\n    return { success: false };\r\n  }\r\n  return { success: true, data: batchedResponse[id] };\r\n}\r\n\r\nconst sendBatchRequests = () => {\r\n  if (Object.keys(batchedQueries).length !== 0) {\r\n    let queries = \"{\\n\";\r\n    let endpoint = \"\";\r\n    let headers;\r\n    Object.keys(batchedQueries).map((key) => {\r\n      const query = batchedQueries[key];\r\n      endpoint = query.endpoint;\r\n      headers = query.headers;\r\n      let tempQ = key + \": \" + query.query.substring(1, query.query.length - 1);\r\n      tempQ += \"\\n\";\r\n      queries += tempQ;\r\n    })\r\n    batchedQueries = {};\r\n    queries += \"}\";\r\n    console.log(queries);\r\n    console.info(\"Sending Batch Requests\");\r\n    _http__WEBPACK_IMPORTED_MODULE_0__[\"POST\"](endpoint, queries, headers)\r\n    .then((res) => {\r\n      batchedResponse = res.data;\r\n    })\r\n    .catch(() => {\r\n      batchedResponse = {};\r\n    })\r\n  }\r\n}\r\n\r\nsetInterval(() => {\r\n  sendBatchRequests();\r\n}, 100);\r\n\r\nsetInterval(() => {\r\n  batchedResponse = {};\r\n}, 10000)\r\n\r\n\n\n//# sourceURL=webpack:///./src/network_manager/src/batch.js?");

/***/ }),

/***/ "./src/network_manager/src/cache.js":
/*!******************************************!*\
  !*** ./src/network_manager/src/cache.js ***!
  \******************************************/
/*! exports provided: exists, get, set, enableCache, ENABLED */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"exists\", function() { return exists; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return get; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return set; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enableCache\", function() { return enableCache; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ENABLED\", function() { return ENABLED; });\nlet cache = {};\r\n\r\nlet ENABLED = false;\r\n\r\nconst enableCache = (bool) => {\r\n  if (bool === true) {\r\n    console.info(\"Caching enabled\");\r\n    ENABLED = true;\r\n  } else {\r\n    console.info(\"Caching disabled\");\r\n    ENABLED = false;\r\n  }\r\n}\r\n\r\nconst exists = query => {\r\n  return typeof cache[query] != 'undefined';\r\n}\r\n\r\nconst get = query => {\r\n  if (!ENABLED) {\r\n    console.error(\"Cache not enabled\");\r\n    return { success: false };\r\n  }\r\n  if (!exists(query)) {\r\n    console.error(\"Query does not exist in the cache\");\r\n    return { success: false };\r\n  }\r\n  console.log(\"Retrieving data from cache\");\r\n  return { success: true, data: cache[query] };\r\n}\r\n\r\nconst set = (query, response) => {\r\n  if (!ENABLED) {\r\n    console.error(\"Cache not enabled\");\r\n    return { success: false };\r\n  }\r\n  if (exists(query)) {\r\n    console.info(\"Query exists in the cache. Will be rewriting\");\r\n  }\r\n  cache[query] = {\r\n    response,\r\n    added_on: Date.now()\r\n  };\r\n  console.log(\"Query saved in the cache\");\r\n  return true;\r\n}\r\n\r\nconst clear = () => {\r\n  let i = 0;\r\n  Object.keys(cache).map(key => {\r\n    const timeElapsed = (Date.now() - cache[key].added_on)/1000;\r\n    if (timeElapsed > 5) {\r\n      delete cache[key];\r\n      i++;\r\n    }\r\n  });\r\n  if (ENABLED && i !== 0) {\r\n    console.info(\"Cleared \" + i + \" query from cache\");\r\n  }\r\n}\r\n\r\nsetInterval(() => {\r\n  clear();\r\n}, 5000);\r\n\r\n\n\n//# sourceURL=webpack:///./src/network_manager/src/cache.js?");

/***/ }),

/***/ "./src/network_manager/src/http.js":
/*!*****************************************!*\
  !*** ./src/network_manager/src/http.js ***!
  \*****************************************/
/*! exports provided: POST */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POST\", function() { return POST; });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _cache__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cache */ \"./src/network_manager/src/cache.js\");\n\n\n\nconst POST = (endpoint, query, headers) => {\n  return new Promise(function(resolve, reject) {\n    axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(\n      endpoint,\n      { query: query },\n      {\n        headers\n      }\n    )\n    .then((response) => {\n      const { data } = response;\n      const jsonS = JSON.stringify(data);\n      _cache__WEBPACK_IMPORTED_MODULE_1__[\"set\"](query, jsonS);\n      resolve(data);\n    })\n    .catch((err) => {\n      reject(err);\n      console.log(err);\n    })\n  });\n}\n\n\n\n//# sourceURL=webpack:///./src/network_manager/src/http.js?");

/***/ }),

/***/ "./src/network_manager/src/main.js":
/*!*****************************************!*\
  !*** ./src/network_manager/src/main.js ***!
  \*****************************************/
/*! exports provided: get, enableCache, enableBatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return get; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enableCache\", function() { return enableCache; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enableBatch\", function() { return enableBatch; });\n/* harmony import */ var _cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cache */ \"./src/network_manager/src/cache.js\");\n/* harmony import */ var _batch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./batch */ \"./src/network_manager/src/batch.js\");\n/* harmony import */ var _http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./http */ \"./src/network_manager/src/http.js\");\n\r\n\r\n\r\n\r\nconst enableCache = (bool) => {\r\n  _cache__WEBPACK_IMPORTED_MODULE_0__[\"enableCache\"](bool);\r\n}\r\n\r\nconst enableBatch = (bool) => {\r\n  _batch__WEBPACK_IMPORTED_MODULE_1__[\"enableBatch\"](bool);\r\n}\r\n\r\nconst get = (endpoint, query, headers) => {\r\n  if (_cache__WEBPACK_IMPORTED_MODULE_0__[\"exists\"](query)) {\r\n    return new Promise(function(resolve, reject) {\r\n      resolve(_cache__WEBPACK_IMPORTED_MODULE_0__[\"get\"](query));\r\n    });\r\n  }\r\n  if (_batch__WEBPACK_IMPORTED_MODULE_1__[\"ENABLED\"]) {\r\n    if (query.charAt(0) == \"{\") {\r\n      const id = \"U\" + Math.floor(Date.now() + ((Math.random() * 100) + 1));\r\n      _batch__WEBPACK_IMPORTED_MODULE_1__[\"add\"](endpoint, query, headers, id);\r\n      return new Promise(function(resolve, reject) {\r\n        let timePassed = 0;\r\n        setInterval(() => {\r\n          if (timePassed > 10) {\r\n            reject(\"Could not get a response\");\r\n          } else {\r\n            if (_batch__WEBPACK_IMPORTED_MODULE_1__[\"exists\"](id)) {\r\n              resolve(_batch__WEBPACK_IMPORTED_MODULE_1__[\"get\"](id));\r\n            }\r\n          }\r\n          timePassed++;\r\n        }, 200);\r\n      });\r\n    } else {\r\n      return makeRequest(endpoint, query, headers);\r\n    }\r\n  } else {\r\n    return _http__WEBPACK_IMPORTED_MODULE_2__[\"POST\"](endpoint, query, headers);\r\n  }\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./src/network_manager/src/main.js?");

/***/ }),

/***/ "./test/github.js":
/*!************************!*\
  !*** ./test/github.js ***!
  \************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../src/main */ \"./src/main.js\");\n\n\nlet header = { Authorization: \"bearer 619c80748dde531f7fa7e14b51f13346c38dfd55\" };\nlet query = `query {\n  repository(owner:\"octocat\", name:\"Hello-World\") {\n    issues(last:20, states:CLOSED) {\n      edges {\n        node {\n          title\n          url\n          labels(first:5) {\n            edges {\n              node {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}`;\n\nObject(_src_main__WEBPACK_IMPORTED_MODULE_0__[\"fetch\"])(\"https://api.github.com/graphql\", query, header);\n\n//# sourceURL=webpack:///./test/github.js?");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"assert\");\n\n//# sourceURL=webpack:///external_%22assert%22?");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"http\");\n\n//# sourceURL=webpack:///external_%22http%22?");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"https\");\n\n//# sourceURL=webpack:///external_%22https%22?");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"os\");\n\n//# sourceURL=webpack:///external_%22os%22?");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"stream\");\n\n//# sourceURL=webpack:///external_%22stream%22?");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"tty\");\n\n//# sourceURL=webpack:///external_%22tty%22?");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"url\");\n\n//# sourceURL=webpack:///external_%22url%22?");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"util\");\n\n//# sourceURL=webpack:///external_%22util%22?");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"zlib\");\n\n//# sourceURL=webpack:///external_%22zlib%22?");

/***/ })

/******/ });